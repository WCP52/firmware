
wcp52fw.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003964  00400000  00400000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00403964  00403964  0000b964  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000086c  20000000  0040396c  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000068  2000086c  004041d8  0001086c  2**2
                  ALLOC
  4 .stack        00003004  200008d4  00404240  0001086c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0001086c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010896  2**0
                  CONTENTS, READONLY
  7 .debug_info   00006fc3  00000000  00000000  000108f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013d8  00000000  00000000  000178b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00002546  00000000  00000000  00018c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000668  00000000  00000000  0001b1d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000005e8  00000000  00000000  0001b83a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00010595  00000000  00000000  0001be22  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00007884  00000000  00000000  0002c3b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004a020  00000000  00000000  00033c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000017b8  00000000  00000000  0007dc5c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	200038d8 	.word	0x200038d8
  400004:	00400489 	.word	0x00400489
  400008:	00400485 	.word	0x00400485
  40000c:	00400485 	.word	0x00400485
  400010:	00400485 	.word	0x00400485
  400014:	00400485 	.word	0x00400485
  400018:	00400485 	.word	0x00400485
	...
  40002c:	00400485 	.word	0x00400485
  400030:	00400485 	.word	0x00400485
  400034:	00000000 	.word	0x00000000
  400038:	00400485 	.word	0x00400485
  40003c:	00400485 	.word	0x00400485
  400040:	00400485 	.word	0x00400485
  400044:	00400485 	.word	0x00400485
  400048:	00400485 	.word	0x00400485
  40004c:	00400485 	.word	0x00400485
  400050:	00400485 	.word	0x00400485
  400054:	00400485 	.word	0x00400485
  400058:	00400485 	.word	0x00400485
  40005c:	00000000 	.word	0x00000000
  400060:	00400485 	.word	0x00400485
  400064:	00400485 	.word	0x00400485
  400068:	00000000 	.word	0x00000000
  40006c:	00400485 	.word	0x00400485
  400070:	00400485 	.word	0x00400485
  400074:	00400485 	.word	0x00400485
  400078:	00400485 	.word	0x00400485
  40007c:	00400485 	.word	0x00400485
	...
  400088:	00400485 	.word	0x00400485
  40008c:	00400485 	.word	0x00400485
  400090:	00400485 	.word	0x00400485
  400094:	00400485 	.word	0x00400485
  400098:	00400485 	.word	0x00400485
  40009c:	00400485 	.word	0x00400485
  4000a0:	00400485 	.word	0x00400485
  4000a4:	00400485 	.word	0x00400485
  4000a8:	00400485 	.word	0x00400485
  4000ac:	00400485 	.word	0x00400485
  4000b0:	00400485 	.word	0x00400485
  4000b4:	00400485 	.word	0x00400485
  4000b8:	00400485 	.word	0x00400485
  4000bc:	00400485 	.word	0x00400485
  4000c0:	00400485 	.word	0x00400485
  4000c4:	00400485 	.word	0x00400485
  4000c8:	00400485 	.word	0x00400485

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000086c 	.word	0x2000086c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040396c 	.word	0x0040396c

004000f0 <frame_dummy>:
  4000f0:	b508      	push	{r3, lr}
  4000f2:	4b06      	ldr	r3, [pc, #24]	; (40010c <frame_dummy+0x1c>)
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4806      	ldr	r0, [pc, #24]	; (400110 <frame_dummy+0x20>)
  4000f8:	4906      	ldr	r1, [pc, #24]	; (400114 <frame_dummy+0x24>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4806      	ldr	r0, [pc, #24]	; (400118 <frame_dummy+0x28>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b113      	cbz	r3, 40010a <frame_dummy+0x1a>
  400104:	4b05      	ldr	r3, [pc, #20]	; (40011c <frame_dummy+0x2c>)
  400106:	b103      	cbz	r3, 40010a <frame_dummy+0x1a>
  400108:	4798      	blx	r3
  40010a:	bd08      	pop	{r3, pc}
  40010c:	00000000 	.word	0x00000000
  400110:	0040396c 	.word	0x0040396c
  400114:	20000870 	.word	0x20000870
  400118:	0040396c 	.word	0x0040396c
  40011c:	00000000 	.word	0x00000000

00400120 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400124:	460c      	mov	r4, r1
  400126:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
  400128:	b960      	cbnz	r0, 400144 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
  40012a:	2a00      	cmp	r2, #0
  40012c:	dd0e      	ble.n	40014c <_read+0x2c>
  40012e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400130:	4e09      	ldr	r6, [pc, #36]	; (400158 <_read+0x38>)
  400132:	4d0a      	ldr	r5, [pc, #40]	; (40015c <_read+0x3c>)
  400134:	6830      	ldr	r0, [r6, #0]
  400136:	4621      	mov	r1, r4
  400138:	682b      	ldr	r3, [r5, #0]
  40013a:	4798      	blx	r3
		ptr++;
  40013c:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  40013e:	42bc      	cmp	r4, r7
  400140:	d1f8      	bne.n	400134 <_read+0x14>
  400142:	e006      	b.n	400152 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  400144:	f04f 30ff 	mov.w	r0, #4294967295
  400148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
  40014c:	2000      	movs	r0, #0
  40014e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  400152:	4640      	mov	r0, r8
	}
	return nChars;
}
  400154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400158:	200008cc 	.word	0x200008cc
  40015c:	200008c4 	.word	0x200008c4

00400160 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  400160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400164:	460e      	mov	r6, r1
  400166:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400168:	3801      	subs	r0, #1
  40016a:	2802      	cmp	r0, #2
  40016c:	d80f      	bhi.n	40018e <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
  40016e:	b192      	cbz	r2, 400196 <_write+0x36>
  400170:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400172:	f8df 803c 	ldr.w	r8, [pc, #60]	; 4001b0 <_write+0x50>
  400176:	4f0d      	ldr	r7, [pc, #52]	; (4001ac <_write+0x4c>)
  400178:	f8d8 0000 	ldr.w	r0, [r8]
  40017c:	5d31      	ldrb	r1, [r6, r4]
  40017e:	683b      	ldr	r3, [r7, #0]
  400180:	4798      	blx	r3
  400182:	2800      	cmp	r0, #0
  400184:	db0a      	blt.n	40019c <_write+0x3c>
			return -1;
		}
		++nChars;
  400186:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  400188:	42a5      	cmp	r5, r4
  40018a:	d1f5      	bne.n	400178 <_write+0x18>
  40018c:	e00a      	b.n	4001a4 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  40018e:	f04f 30ff 	mov.w	r0, #4294967295
  400192:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
  400196:	2000      	movs	r0, #0
  400198:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  40019c:	f04f 30ff 	mov.w	r0, #4294967295
  4001a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
  4001a4:	4620      	mov	r0, r4
	}
	return nChars;
}
  4001a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001aa:	bf00      	nop
  4001ac:	200008c8 	.word	0x200008c8
  4001b0:	200008cc 	.word	0x200008cc

004001b4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4001b4:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4001b6:	480e      	ldr	r0, [pc, #56]	; (4001f0 <sysclk_init+0x3c>)
  4001b8:	4b0e      	ldr	r3, [pc, #56]	; (4001f4 <sysclk_init+0x40>)
  4001ba:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4001bc:	2000      	movs	r0, #0
  4001be:	213e      	movs	r1, #62	; 0x3e
  4001c0:	4b0d      	ldr	r3, [pc, #52]	; (4001f8 <sysclk_init+0x44>)
  4001c2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4001c4:	4c0d      	ldr	r4, [pc, #52]	; (4001fc <sysclk_init+0x48>)
  4001c6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4001c8:	2800      	cmp	r0, #0
  4001ca:	d0fc      	beq.n	4001c6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4001cc:	4b0c      	ldr	r3, [pc, #48]	; (400200 <sysclk_init+0x4c>)
  4001ce:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4001d0:	4a0c      	ldr	r2, [pc, #48]	; (400204 <sysclk_init+0x50>)
  4001d2:	4b0d      	ldr	r3, [pc, #52]	; (400208 <sysclk_init+0x54>)
  4001d4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  4001d6:	4c0d      	ldr	r4, [pc, #52]	; (40020c <sysclk_init+0x58>)
  4001d8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4001da:	2800      	cmp	r0, #0
  4001dc:	d0fc      	beq.n	4001d8 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4001de:	2010      	movs	r0, #16
  4001e0:	4b0b      	ldr	r3, [pc, #44]	; (400210 <sysclk_init+0x5c>)
  4001e2:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4001e4:	4b0b      	ldr	r3, [pc, #44]	; (400214 <sysclk_init+0x60>)
  4001e6:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4001e8:	4801      	ldr	r0, [pc, #4]	; (4001f0 <sysclk_init+0x3c>)
  4001ea:	4b02      	ldr	r3, [pc, #8]	; (4001f4 <sysclk_init+0x40>)
  4001ec:	4798      	blx	r3
  4001ee:	bd10      	pop	{r4, pc}
  4001f0:	07270e00 	.word	0x07270e00
  4001f4:	00400651 	.word	0x00400651
  4001f8:	0040027d 	.word	0x0040027d
  4001fc:	004002d1 	.word	0x004002d1
  400200:	004002e1 	.word	0x004002e1
  400204:	20133f01 	.word	0x20133f01
  400208:	400e0400 	.word	0x400e0400
  40020c:	004002f1 	.word	0x004002f1
  400210:	00400219 	.word	0x00400219
  400214:	0040053d 	.word	0x0040053d

00400218 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400218:	4b17      	ldr	r3, [pc, #92]	; (400278 <pmc_switch_mck_to_pllack+0x60>)
  40021a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40021c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400220:	4310      	orrs	r0, r2
  400222:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400224:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400226:	f013 0f08 	tst.w	r3, #8
  40022a:	d109      	bne.n	400240 <pmc_switch_mck_to_pllack+0x28>
  40022c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400230:	4911      	ldr	r1, [pc, #68]	; (400278 <pmc_switch_mck_to_pllack+0x60>)
  400232:	e001      	b.n	400238 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400234:	3b01      	subs	r3, #1
  400236:	d019      	beq.n	40026c <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400238:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40023a:	f012 0f08 	tst.w	r2, #8
  40023e:	d0f9      	beq.n	400234 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400240:	4b0d      	ldr	r3, [pc, #52]	; (400278 <pmc_switch_mck_to_pllack+0x60>)
  400242:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400244:	f022 0203 	bic.w	r2, r2, #3
  400248:	f042 0202 	orr.w	r2, r2, #2
  40024c:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40024e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  400250:	f010 0008 	ands.w	r0, r0, #8
  400254:	d10c      	bne.n	400270 <pmc_switch_mck_to_pllack+0x58>
  400256:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40025a:	4907      	ldr	r1, [pc, #28]	; (400278 <pmc_switch_mck_to_pllack+0x60>)
  40025c:	e001      	b.n	400262 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40025e:	3b01      	subs	r3, #1
  400260:	d008      	beq.n	400274 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400262:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400264:	f012 0f08 	tst.w	r2, #8
  400268:	d0f9      	beq.n	40025e <pmc_switch_mck_to_pllack+0x46>
  40026a:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40026c:	2001      	movs	r0, #1
  40026e:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400270:	2000      	movs	r0, #0
  400272:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400274:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400276:	4770      	bx	lr
  400278:	400e0400 	.word	0x400e0400

0040027c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40027c:	b138      	cbz	r0, 40028e <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40027e:	4911      	ldr	r1, [pc, #68]	; (4002c4 <pmc_switch_mainck_to_xtal+0x48>)
  400280:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400282:	4a11      	ldr	r2, [pc, #68]	; (4002c8 <pmc_switch_mainck_to_xtal+0x4c>)
  400284:	401a      	ands	r2, r3
  400286:	4b11      	ldr	r3, [pc, #68]	; (4002cc <pmc_switch_mainck_to_xtal+0x50>)
  400288:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40028a:	620b      	str	r3, [r1, #32]
  40028c:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40028e:	4a0d      	ldr	r2, [pc, #52]	; (4002c4 <pmc_switch_mainck_to_xtal+0x48>)
  400290:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400292:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400296:	f023 0303 	bic.w	r3, r3, #3
  40029a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40029e:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4002a2:	0209      	lsls	r1, r1, #8
  4002a4:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4002a6:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4002a8:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4002aa:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4002ac:	f013 0f01 	tst.w	r3, #1
  4002b0:	d0fb      	beq.n	4002aa <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4002b2:	4a04      	ldr	r2, [pc, #16]	; (4002c4 <pmc_switch_mainck_to_xtal+0x48>)
  4002b4:	6a13      	ldr	r3, [r2, #32]
  4002b6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4002ba:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4002be:	6213      	str	r3, [r2, #32]
  4002c0:	4770      	bx	lr
  4002c2:	bf00      	nop
  4002c4:	400e0400 	.word	0x400e0400
  4002c8:	fec8fffc 	.word	0xfec8fffc
  4002cc:	01370002 	.word	0x01370002

004002d0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4002d0:	4b02      	ldr	r3, [pc, #8]	; (4002dc <pmc_osc_is_ready_mainck+0xc>)
  4002d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4002d4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4002d8:	4770      	bx	lr
  4002da:	bf00      	nop
  4002dc:	400e0400 	.word	0x400e0400

004002e0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4002e0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4002e4:	4b01      	ldr	r3, [pc, #4]	; (4002ec <pmc_disable_pllack+0xc>)
  4002e6:	629a      	str	r2, [r3, #40]	; 0x28
  4002e8:	4770      	bx	lr
  4002ea:	bf00      	nop
  4002ec:	400e0400 	.word	0x400e0400

004002f0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4002f0:	4b02      	ldr	r3, [pc, #8]	; (4002fc <pmc_is_locked_pllack+0xc>)
  4002f2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4002f4:	f000 0002 	and.w	r0, r0, #2
  4002f8:	4770      	bx	lr
  4002fa:	bf00      	nop
  4002fc:	400e0400 	.word	0x400e0400

00400300 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400300:	2822      	cmp	r0, #34	; 0x22
  400302:	d820      	bhi.n	400346 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
  400304:	281f      	cmp	r0, #31
  400306:	d80d      	bhi.n	400324 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400308:	4b12      	ldr	r3, [pc, #72]	; (400354 <pmc_enable_periph_clk+0x54>)
  40030a:	699a      	ldr	r2, [r3, #24]
  40030c:	2301      	movs	r3, #1
  40030e:	4083      	lsls	r3, r0
  400310:	401a      	ands	r2, r3
  400312:	4293      	cmp	r3, r2
  400314:	d019      	beq.n	40034a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
  400316:	2301      	movs	r3, #1
  400318:	fa03 f000 	lsl.w	r0, r3, r0
  40031c:	4b0d      	ldr	r3, [pc, #52]	; (400354 <pmc_enable_periph_clk+0x54>)
  40031e:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400320:	2000      	movs	r0, #0
  400322:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400324:	4b0b      	ldr	r3, [pc, #44]	; (400354 <pmc_enable_periph_clk+0x54>)
  400326:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
  40032a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40032c:	2301      	movs	r3, #1
  40032e:	4083      	lsls	r3, r0
  400330:	401a      	ands	r2, r3
  400332:	4293      	cmp	r3, r2
  400334:	d00b      	beq.n	40034e <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
  400336:	2301      	movs	r3, #1
  400338:	fa03 f000 	lsl.w	r0, r3, r0
  40033c:	4b05      	ldr	r3, [pc, #20]	; (400354 <pmc_enable_periph_clk+0x54>)
  40033e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  400342:	2000      	movs	r0, #0
  400344:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400346:	2001      	movs	r0, #1
  400348:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40034a:	2000      	movs	r0, #0
  40034c:	4770      	bx	lr
  40034e:	2000      	movs	r0, #0
}
  400350:	4770      	bx	lr
  400352:	bf00      	nop
  400354:	400e0400 	.word	0x400e0400

00400358 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400358:	6943      	ldr	r3, [r0, #20]
  40035a:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40035e:	bf1a      	itte	ne
  400360:	61c1      	strne	r1, [r0, #28]
	return 0;
  400362:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  400364:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  400366:	4770      	bx	lr

00400368 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400368:	6943      	ldr	r3, [r0, #20]
  40036a:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40036e:	bf1d      	ittte	ne
  400370:	6983      	ldrne	r3, [r0, #24]
  400372:	700b      	strbne	r3, [r1, #0]
	return 0;
  400374:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  400376:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400378:	4770      	bx	lr
  40037a:	bf00      	nop

0040037c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  40037c:	4b0a      	ldr	r3, [pc, #40]	; (4003a8 <usart_reset+0x2c>)
  40037e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
{
	/* Disable the Write Protect. */
	usart_disable_writeprotect(p_usart);

	/* Reset registers that could cause unpredictable behavior after reset. */
	p_usart->US_MR = 0;
  400382:	2300      	movs	r3, #0
  400384:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400386:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400388:	6283      	str	r3, [r0, #40]	; 0x28
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_tx(Usart *p_usart)
{
	/* Reset transmitter */
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  40038a:	2388      	movs	r3, #136	; 0x88
  40038c:	6003      	str	r3, [r0, #0]
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_rx(Usart *p_usart)
{
	/* Reset Receiver */
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40038e:	2324      	movs	r3, #36	; 0x24
  400390:	6003      	str	r3, [r0, #0]
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_status(Usart *p_usart)
{
	p_usart->US_CR = US_CR_RSTSTA;
  400392:	f44f 7380 	mov.w	r3, #256	; 0x100
  400396:	6003      	str	r3, [r0, #0]
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_RTS_pin_high(Usart *p_usart)
{
	p_usart->US_CR = US_CR_RTSDIS;
  400398:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40039c:	6003      	str	r3, [r0, #0]
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_DTR_pin_high(Usart *p_usart)
{
	p_usart->US_CR = US_CR_DTRDIS;
  40039e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  4003a2:	6003      	str	r3, [r0, #0]
  4003a4:	4770      	bx	lr
  4003a6:	bf00      	nop
  4003a8:	55534100 	.word	0x55534100

004003ac <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  4003ac:	b570      	push	{r4, r5, r6, lr}
  4003ae:	4605      	mov	r5, r0
  4003b0:	460c      	mov	r4, r1
  4003b2:	4616      	mov	r6, r2
	static uint32_t ul_reg_val;

	/* Reset the USART and shut down TX and RX. */
	usart_reset(p_usart);
  4003b4:	4b21      	ldr	r3, [pc, #132]	; (40043c <usart_init_rs232+0x90>)
  4003b6:	4798      	blx	r3

	ul_reg_val = 0;
  4003b8:	2100      	movs	r1, #0
  4003ba:	4b21      	ldr	r3, [pc, #132]	; (400440 <usart_init_rs232+0x94>)
  4003bc:	6019      	str	r1, [r3, #0]
	/* Check whether the input values are legal. */
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  4003be:	b1cc      	cbz	r4, 4003f4 <usart_init_rs232+0x48>
  4003c0:	6822      	ldr	r2, [r4, #0]
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4003c2:	0113      	lsls	r3, r2, #4
  4003c4:	429e      	cmp	r6, r3
  4003c6:	d22a      	bcs.n	40041e <usart_init_rs232+0x72>
  4003c8:	e01a      	b.n	400400 <usart_init_rs232+0x54>
		return 1;
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4003ca:	6869      	ldr	r1, [r5, #4]
  4003cc:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4003d0:	6069      	str	r1, [r5, #4]
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  4003d2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  4003d6:	622b      	str	r3, [r5, #32]
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
	}

	/* Configure the USART option. */
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4003d8:	68a2      	ldr	r2, [r4, #8]
  4003da:	6863      	ldr	r3, [r4, #4]
  4003dc:	4313      	orrs	r3, r2
  4003de:	6922      	ldr	r2, [r4, #16]
  4003e0:	4313      	orrs	r3, r2
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  4003e2:	68e1      	ldr	r1, [r4, #12]
  4003e4:	430b      	orrs	r3, r1
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
	}

	/* Configure the USART option. */
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4003e6:	4a16      	ldr	r2, [pc, #88]	; (400440 <usart_init_rs232+0x94>)
  4003e8:	6013      	str	r3, [r2, #0]
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;

	/* Configure the USART mode as normal mode. */
	ul_reg_val |= US_MR_USART_MODE_NORMAL;

	p_usart->US_MR |= ul_reg_val;
  4003ea:	686a      	ldr	r2, [r5, #4]
  4003ec:	4313      	orrs	r3, r2
  4003ee:	606b      	str	r3, [r5, #4]

	return 0;
  4003f0:	2000      	movs	r0, #0
  4003f2:	bd70      	pop	{r4, r5, r6, pc}

	ul_reg_val = 0;
	/* Check whether the input values are legal. */
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
  4003f4:	2001      	movs	r0, #1
  4003f6:	bd70      	pop	{r4, r5, r6, pc}
  4003f8:	2001      	movs	r0, #1
  4003fa:	bd70      	pop	{r4, r5, r6, pc}
  4003fc:	2001      	movs	r0, #1
  4003fe:	bd70      	pop	{r4, r5, r6, pc}
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400400:	00d2      	lsls	r2, r2, #3
  400402:	0853      	lsrs	r3, r2, #1
  400404:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  400408:	fbb3 f3f2 	udiv	r3, r3, r2
	cd = cd_fp >> 3;
  40040c:	08da      	lsrs	r2, r3, #3
	fp = cd_fp & 0x07;
  40040e:	f003 0307 	and.w	r3, r3, #7
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400412:	1e50      	subs	r0, r2, #1
  400414:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400418:	4288      	cmp	r0, r1
  40041a:	d9d6      	bls.n	4003ca <usart_init_rs232+0x1e>
  40041c:	e7ec      	b.n	4003f8 <usart_init_rs232+0x4c>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  40041e:	085a      	lsrs	r2, r3, #1
  400420:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
  400424:	fbb6 f3f3 	udiv	r3, r6, r3
	cd = cd_fp >> 3;
  400428:	08da      	lsrs	r2, r3, #3
	fp = cd_fp & 0x07;
  40042a:	f003 0307 	and.w	r3, r3, #7
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40042e:	1e50      	subs	r0, r2, #1
  400430:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400434:	4288      	cmp	r0, r1
  400436:	d9cc      	bls.n	4003d2 <usart_init_rs232+0x26>
  400438:	e7e0      	b.n	4003fc <usart_init_rs232+0x50>
  40043a:	bf00      	nop
  40043c:	0040037d 	.word	0x0040037d
  400440:	20000888 	.word	0x20000888

00400444 <usart_enable_tx>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_tx(Usart *p_usart)
{
	p_usart->US_CR = US_CR_TXEN;
  400444:	2340      	movs	r3, #64	; 0x40
  400446:	6003      	str	r3, [r0, #0]
  400448:	4770      	bx	lr
  40044a:	bf00      	nop

0040044c <usart_enable_rx>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_rx(Usart *p_usart)
{
	p_usart->US_CR = US_CR_RXEN;
  40044c:	2310      	movs	r3, #16
  40044e:	6003      	str	r3, [r0, #0]
  400450:	4770      	bx	lr
  400452:	bf00      	nop

00400454 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400454:	6943      	ldr	r3, [r0, #20]
  400456:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40045a:	bf1d      	ittte	ne
  40045c:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400460:	61c1      	strne	r1, [r0, #28]
	return 0;
  400462:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  400464:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  400466:	4770      	bx	lr

00400468 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400468:	6943      	ldr	r3, [r0, #20]
  40046a:	f013 0f01 	tst.w	r3, #1
  40046e:	d005      	beq.n	40047c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400470:	6983      	ldr	r3, [r0, #24]
  400472:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400476:	600b      	str	r3, [r1, #0]

	return 0;
  400478:	2000      	movs	r0, #0
  40047a:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  40047c:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  40047e:	4770      	bx	lr

00400480 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  400480:	4770      	bx	lr
  400482:	bf00      	nop

00400484 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400484:	e7fe      	b.n	400484 <Dummy_Handler>
  400486:	bf00      	nop

00400488 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400488:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  40048a:	4b20      	ldr	r3, [pc, #128]	; (40050c <Reset_Handler+0x84>)
  40048c:	4a20      	ldr	r2, [pc, #128]	; (400510 <Reset_Handler+0x88>)
  40048e:	429a      	cmp	r2, r3
  400490:	d912      	bls.n	4004b8 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
  400492:	4b20      	ldr	r3, [pc, #128]	; (400514 <Reset_Handler+0x8c>)
  400494:	4a1d      	ldr	r2, [pc, #116]	; (40050c <Reset_Handler+0x84>)
  400496:	429a      	cmp	r2, r3
  400498:	d21f      	bcs.n	4004da <Reset_Handler+0x52>
  40049a:	1d13      	adds	r3, r2, #4
  40049c:	4c1e      	ldr	r4, [pc, #120]	; (400518 <Reset_Handler+0x90>)
  40049e:	1ae4      	subs	r4, r4, r3
  4004a0:	f024 0403 	bic.w	r4, r4, #3
  4004a4:	3404      	adds	r4, #4
  4004a6:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
  4004a8:	4610      	mov	r0, r2
  4004aa:	4919      	ldr	r1, [pc, #100]	; (400510 <Reset_Handler+0x88>)
  4004ac:	585a      	ldr	r2, [r3, r1]
  4004ae:	501a      	str	r2, [r3, r0]
  4004b0:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  4004b2:	42a3      	cmp	r3, r4
  4004b4:	d1fa      	bne.n	4004ac <Reset_Handler+0x24>
  4004b6:	e010      	b.n	4004da <Reset_Handler+0x52>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  4004b8:	4b14      	ldr	r3, [pc, #80]	; (40050c <Reset_Handler+0x84>)
  4004ba:	4a15      	ldr	r2, [pc, #84]	; (400510 <Reset_Handler+0x88>)
  4004bc:	429a      	cmp	r2, r3
  4004be:	d20c      	bcs.n	4004da <Reset_Handler+0x52>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4004c0:	4a14      	ldr	r2, [pc, #80]	; (400514 <Reset_Handler+0x8c>)
  4004c2:	4619      	mov	r1, r3
  4004c4:	1ad3      	subs	r3, r2, r3
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4004c6:	4815      	ldr	r0, [pc, #84]	; (40051c <Reset_Handler+0x94>)
  4004c8:	4418      	add	r0, r3
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  4004ca:	b133      	cbz	r3, 4004da <Reset_Handler+0x52>
  4004cc:	4613      	mov	r3, r2
  4004ce:	1a9c      	subs	r4, r3, r2
			*pDest-- = *pSrc--;
  4004d0:	5824      	ldr	r4, [r4, r0]
  4004d2:	f843 4d04 	str.w	r4, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  4004d6:	4299      	cmp	r1, r3
  4004d8:	d1f9      	bne.n	4004ce <Reset_Handler+0x46>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  4004da:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4004dc:	4b10      	ldr	r3, [pc, #64]	; (400520 <Reset_Handler+0x98>)
  4004de:	4a11      	ldr	r2, [pc, #68]	; (400524 <Reset_Handler+0x9c>)
  4004e0:	429a      	cmp	r2, r3
  4004e2:	d20b      	bcs.n	4004fc <Reset_Handler+0x74>
  4004e4:	1f13      	subs	r3, r2, #4
  4004e6:	4910      	ldr	r1, [pc, #64]	; (400528 <Reset_Handler+0xa0>)
  4004e8:	1ac9      	subs	r1, r1, r3
  4004ea:	f021 0103 	bic.w	r1, r1, #3
  4004ee:	1d1a      	adds	r2, r3, #4
  4004f0:	4411      	add	r1, r2
		*pDest++ = 0;
  4004f2:	2200      	movs	r2, #0
  4004f4:	f843 2f04 	str.w	r2, [r3, #4]!
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4004f8:	428b      	cmp	r3, r1
  4004fa:	d1fb      	bne.n	4004f4 <Reset_Handler+0x6c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  4004fc:	4b0b      	ldr	r3, [pc, #44]	; (40052c <Reset_Handler+0xa4>)
  4004fe:	4a0c      	ldr	r2, [pc, #48]	; (400530 <Reset_Handler+0xa8>)
  400500:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  400502:	4b0c      	ldr	r3, [pc, #48]	; (400534 <Reset_Handler+0xac>)
  400504:	4798      	blx	r3

	/* Branch to main function */
	main();
  400506:	4b0c      	ldr	r3, [pc, #48]	; (400538 <Reset_Handler+0xb0>)
  400508:	4798      	blx	r3
  40050a:	e7fe      	b.n	40050a <Reset_Handler+0x82>
  40050c:	20000000 	.word	0x20000000
  400510:	0040396c 	.word	0x0040396c
  400514:	2000086c 	.word	0x2000086c
  400518:	2000086f 	.word	0x2000086f
  40051c:	00403968 	.word	0x00403968
  400520:	200008d4 	.word	0x200008d4
  400524:	2000086c 	.word	0x2000086c
  400528:	200008cf 	.word	0x200008cf
  40052c:	e000ed00 	.word	0xe000ed00
  400530:	00400000 	.word	0x00400000
  400534:	00400911 	.word	0x00400911
  400538:	00400825 	.word	0x00400825

0040053c <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  40053c:	4b3d      	ldr	r3, [pc, #244]	; (400634 <SystemCoreClockUpdate+0xf8>)
  40053e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400540:	f003 0303 	and.w	r3, r3, #3
  400544:	2b03      	cmp	r3, #3
  400546:	d85d      	bhi.n	400604 <SystemCoreClockUpdate+0xc8>
  400548:	e8df f003 	tbb	[pc, r3]
  40054c:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400550:	4b39      	ldr	r3, [pc, #228]	; (400638 <SystemCoreClockUpdate+0xfc>)
  400552:	695b      	ldr	r3, [r3, #20]
  400554:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400558:	bf14      	ite	ne
  40055a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40055e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400562:	4b36      	ldr	r3, [pc, #216]	; (40063c <SystemCoreClockUpdate+0x100>)
  400564:	601a      	str	r2, [r3, #0]
  400566:	e04d      	b.n	400604 <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400568:	4b32      	ldr	r3, [pc, #200]	; (400634 <SystemCoreClockUpdate+0xf8>)
  40056a:	6a1b      	ldr	r3, [r3, #32]
  40056c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400570:	d003      	beq.n	40057a <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400572:	4a33      	ldr	r2, [pc, #204]	; (400640 <SystemCoreClockUpdate+0x104>)
  400574:	4b31      	ldr	r3, [pc, #196]	; (40063c <SystemCoreClockUpdate+0x100>)
  400576:	601a      	str	r2, [r3, #0]
  400578:	e044      	b.n	400604 <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40057a:	4a32      	ldr	r2, [pc, #200]	; (400644 <SystemCoreClockUpdate+0x108>)
  40057c:	4b2f      	ldr	r3, [pc, #188]	; (40063c <SystemCoreClockUpdate+0x100>)
  40057e:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400580:	4b2c      	ldr	r3, [pc, #176]	; (400634 <SystemCoreClockUpdate+0xf8>)
  400582:	6a1b      	ldr	r3, [r3, #32]
  400584:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400588:	2b10      	cmp	r3, #16
  40058a:	d002      	beq.n	400592 <SystemCoreClockUpdate+0x56>
  40058c:	2b20      	cmp	r3, #32
  40058e:	d004      	beq.n	40059a <SystemCoreClockUpdate+0x5e>
  400590:	e038      	b.n	400604 <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400592:	4a2d      	ldr	r2, [pc, #180]	; (400648 <SystemCoreClockUpdate+0x10c>)
  400594:	4b29      	ldr	r3, [pc, #164]	; (40063c <SystemCoreClockUpdate+0x100>)
  400596:	601a      	str	r2, [r3, #0]
			break;
  400598:	e034      	b.n	400604 <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40059a:	4a29      	ldr	r2, [pc, #164]	; (400640 <SystemCoreClockUpdate+0x104>)
  40059c:	4b27      	ldr	r3, [pc, #156]	; (40063c <SystemCoreClockUpdate+0x100>)
  40059e:	601a      	str	r2, [r3, #0]
			break;
  4005a0:	e030      	b.n	400604 <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4005a2:	4b24      	ldr	r3, [pc, #144]	; (400634 <SystemCoreClockUpdate+0xf8>)
  4005a4:	6a1b      	ldr	r3, [r3, #32]
  4005a6:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4005aa:	d003      	beq.n	4005b4 <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  4005ac:	4a24      	ldr	r2, [pc, #144]	; (400640 <SystemCoreClockUpdate+0x104>)
  4005ae:	4b23      	ldr	r3, [pc, #140]	; (40063c <SystemCoreClockUpdate+0x100>)
  4005b0:	601a      	str	r2, [r3, #0]
  4005b2:	e012      	b.n	4005da <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4005b4:	4a23      	ldr	r2, [pc, #140]	; (400644 <SystemCoreClockUpdate+0x108>)
  4005b6:	4b21      	ldr	r3, [pc, #132]	; (40063c <SystemCoreClockUpdate+0x100>)
  4005b8:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4005ba:	4b1e      	ldr	r3, [pc, #120]	; (400634 <SystemCoreClockUpdate+0xf8>)
  4005bc:	6a1b      	ldr	r3, [r3, #32]
  4005be:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4005c2:	2b10      	cmp	r3, #16
  4005c4:	d002      	beq.n	4005cc <SystemCoreClockUpdate+0x90>
  4005c6:	2b20      	cmp	r3, #32
  4005c8:	d004      	beq.n	4005d4 <SystemCoreClockUpdate+0x98>
  4005ca:	e006      	b.n	4005da <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4005cc:	4a1e      	ldr	r2, [pc, #120]	; (400648 <SystemCoreClockUpdate+0x10c>)
  4005ce:	4b1b      	ldr	r3, [pc, #108]	; (40063c <SystemCoreClockUpdate+0x100>)
  4005d0:	601a      	str	r2, [r3, #0]
					break;
  4005d2:	e002      	b.n	4005da <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4005d4:	4a1a      	ldr	r2, [pc, #104]	; (400640 <SystemCoreClockUpdate+0x104>)
  4005d6:	4b19      	ldr	r3, [pc, #100]	; (40063c <SystemCoreClockUpdate+0x100>)
  4005d8:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4005da:	4b16      	ldr	r3, [pc, #88]	; (400634 <SystemCoreClockUpdate+0xf8>)
  4005dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4005de:	f003 0303 	and.w	r3, r3, #3
  4005e2:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4005e4:	4b13      	ldr	r3, [pc, #76]	; (400634 <SystemCoreClockUpdate+0xf8>)
  4005e6:	bf07      	ittee	eq
  4005e8:	6a98      	ldreq	r0, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4005ea:	6a99      	ldreq	r1, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4005ec:	6ad8      	ldrne	r0, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4005ee:	6ad9      	ldrne	r1, [r3, #44]	; 0x2c
  4005f0:	4b12      	ldr	r3, [pc, #72]	; (40063c <SystemCoreClockUpdate+0x100>)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4005f2:	f3c0 400a 	ubfx	r0, r0, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4005f6:	681a      	ldr	r2, [r3, #0]
  4005f8:	fb00 2202 	mla	r2, r0, r2, r2
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
  4005fc:	b2c9      	uxtb	r1, r1
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4005fe:	fbb2 f2f1 	udiv	r2, r2, r1
  400602:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  400604:	4b0b      	ldr	r3, [pc, #44]	; (400634 <SystemCoreClockUpdate+0xf8>)
  400606:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400608:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40060c:	2b70      	cmp	r3, #112	; 0x70
  40060e:	d107      	bne.n	400620 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  400610:	4b0a      	ldr	r3, [pc, #40]	; (40063c <SystemCoreClockUpdate+0x100>)
  400612:	681a      	ldr	r2, [r3, #0]
  400614:	490d      	ldr	r1, [pc, #52]	; (40064c <SystemCoreClockUpdate+0x110>)
  400616:	fba1 0202 	umull	r0, r2, r1, r2
  40061a:	0852      	lsrs	r2, r2, #1
  40061c:	601a      	str	r2, [r3, #0]
  40061e:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400620:	4b04      	ldr	r3, [pc, #16]	; (400634 <SystemCoreClockUpdate+0xf8>)
  400622:	6b19      	ldr	r1, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  400624:	4b05      	ldr	r3, [pc, #20]	; (40063c <SystemCoreClockUpdate+0x100>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400626:	f3c1 1102 	ubfx	r1, r1, #4, #3
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  40062a:	681a      	ldr	r2, [r3, #0]
  40062c:	40ca      	lsrs	r2, r1
  40062e:	601a      	str	r2, [r3, #0]
  400630:	4770      	bx	lr
  400632:	bf00      	nop
  400634:	400e0400 	.word	0x400e0400
  400638:	400e1410 	.word	0x400e1410
  40063c:	20000000 	.word	0x20000000
  400640:	00b71b00 	.word	0x00b71b00
  400644:	003d0900 	.word	0x003d0900
  400648:	007a1200 	.word	0x007a1200
  40064c:	aaaaaaab 	.word	0xaaaaaaab

00400650 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400650:	4b12      	ldr	r3, [pc, #72]	; (40069c <system_init_flash+0x4c>)
  400652:	4298      	cmp	r0, r3
  400654:	d804      	bhi.n	400660 <system_init_flash+0x10>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400656:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40065a:	4b11      	ldr	r3, [pc, #68]	; (4006a0 <system_init_flash+0x50>)
  40065c:	601a      	str	r2, [r3, #0]
  40065e:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400660:	4b10      	ldr	r3, [pc, #64]	; (4006a4 <system_init_flash+0x54>)
  400662:	4298      	cmp	r0, r3
  400664:	d803      	bhi.n	40066e <system_init_flash+0x1e>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400666:	4a10      	ldr	r2, [pc, #64]	; (4006a8 <system_init_flash+0x58>)
  400668:	4b0d      	ldr	r3, [pc, #52]	; (4006a0 <system_init_flash+0x50>)
  40066a:	601a      	str	r2, [r3, #0]
  40066c:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40066e:	4b0f      	ldr	r3, [pc, #60]	; (4006ac <system_init_flash+0x5c>)
  400670:	4298      	cmp	r0, r3
  400672:	d803      	bhi.n	40067c <system_init_flash+0x2c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400674:	4a0e      	ldr	r2, [pc, #56]	; (4006b0 <system_init_flash+0x60>)
  400676:	4b0a      	ldr	r3, [pc, #40]	; (4006a0 <system_init_flash+0x50>)
  400678:	601a      	str	r2, [r3, #0]
  40067a:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40067c:	4b0d      	ldr	r3, [pc, #52]	; (4006b4 <system_init_flash+0x64>)
  40067e:	4298      	cmp	r0, r3
  400680:	d803      	bhi.n	40068a <system_init_flash+0x3a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400682:	4a0d      	ldr	r2, [pc, #52]	; (4006b8 <system_init_flash+0x68>)
  400684:	4b06      	ldr	r3, [pc, #24]	; (4006a0 <system_init_flash+0x50>)
  400686:	601a      	str	r2, [r3, #0]
  400688:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  40068a:	4b0c      	ldr	r3, [pc, #48]	; (4006bc <system_init_flash+0x6c>)
  40068c:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40068e:	bf94      	ite	ls
  400690:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400694:	4a0a      	ldrhi	r2, [pc, #40]	; (4006c0 <system_init_flash+0x70>)
  400696:	4b02      	ldr	r3, [pc, #8]	; (4006a0 <system_init_flash+0x50>)
  400698:	601a      	str	r2, [r3, #0]
  40069a:	4770      	bx	lr
  40069c:	01312cff 	.word	0x01312cff
  4006a0:	400e0a00 	.word	0x400e0a00
  4006a4:	026259ff 	.word	0x026259ff
  4006a8:	04000100 	.word	0x04000100
  4006ac:	039386ff 	.word	0x039386ff
  4006b0:	04000200 	.word	0x04000200
  4006b4:	04c4b3ff 	.word	0x04c4b3ff
  4006b8:	04000300 	.word	0x04000300
  4006bc:	05f5e0ff 	.word	0x05f5e0ff
  4006c0:	04000500 	.word	0x04000500

004006c4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4006c4:	4b09      	ldr	r3, [pc, #36]	; (4006ec <_sbrk+0x28>)
  4006c6:	681b      	ldr	r3, [r3, #0]
  4006c8:	b913      	cbnz	r3, 4006d0 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  4006ca:	4a09      	ldr	r2, [pc, #36]	; (4006f0 <_sbrk+0x2c>)
  4006cc:	4b07      	ldr	r3, [pc, #28]	; (4006ec <_sbrk+0x28>)
  4006ce:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  4006d0:	4b06      	ldr	r3, [pc, #24]	; (4006ec <_sbrk+0x28>)
  4006d2:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4006d4:	181a      	adds	r2, r3, r0
  4006d6:	4907      	ldr	r1, [pc, #28]	; (4006f4 <_sbrk+0x30>)
  4006d8:	4291      	cmp	r1, r2
  4006da:	db04      	blt.n	4006e6 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  4006dc:	4610      	mov	r0, r2
  4006de:	4a03      	ldr	r2, [pc, #12]	; (4006ec <_sbrk+0x28>)
  4006e0:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4006e2:	4618      	mov	r0, r3
  4006e4:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  4006e6:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  4006ea:	4770      	bx	lr
  4006ec:	2000088c 	.word	0x2000088c
  4006f0:	200038d8 	.word	0x200038d8
  4006f4:	2001fffc 	.word	0x2001fffc

004006f8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  4006f8:	f04f 30ff 	mov.w	r0, #4294967295
  4006fc:	4770      	bx	lr
  4006fe:	bf00      	nop

00400700 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400700:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400704:	604b      	str	r3, [r1, #4]

	return 0;
}
  400706:	2000      	movs	r0, #0
  400708:	4770      	bx	lr
  40070a:	bf00      	nop

0040070c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  40070c:	2001      	movs	r0, #1
  40070e:	4770      	bx	lr

00400710 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400710:	2000      	movs	r0, #0
  400712:	4770      	bx	lr

00400714 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400714:	b5f0      	push	{r4, r5, r6, r7, lr}
  400716:	b083      	sub	sp, #12
  400718:	4605      	mov	r5, r0
  40071a:	460c      	mov	r4, r1
	uint32_t val = 0;
  40071c:	2300      	movs	r3, #0
  40071e:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400720:	4b18      	ldr	r3, [pc, #96]	; (400784 <usart_serial_getchar+0x70>)
  400722:	4298      	cmp	r0, r3
  400724:	d107      	bne.n	400736 <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  400726:	461f      	mov	r7, r3
  400728:	4e17      	ldr	r6, [pc, #92]	; (400788 <usart_serial_getchar+0x74>)
  40072a:	4638      	mov	r0, r7
  40072c:	4621      	mov	r1, r4
  40072e:	47b0      	blx	r6
  400730:	2800      	cmp	r0, #0
  400732:	d1fa      	bne.n	40072a <usart_serial_getchar+0x16>
  400734:	e017      	b.n	400766 <usart_serial_getchar+0x52>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400736:	4b15      	ldr	r3, [pc, #84]	; (40078c <usart_serial_getchar+0x78>)
  400738:	4298      	cmp	r0, r3
  40073a:	d107      	bne.n	40074c <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  40073c:	461e      	mov	r6, r3
  40073e:	4d12      	ldr	r5, [pc, #72]	; (400788 <usart_serial_getchar+0x74>)
  400740:	4630      	mov	r0, r6
  400742:	4621      	mov	r1, r4
  400744:	47a8      	blx	r5
  400746:	2800      	cmp	r0, #0
  400748:	d1fa      	bne.n	400740 <usart_serial_getchar+0x2c>
  40074a:	e018      	b.n	40077e <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  40074c:	4b10      	ldr	r3, [pc, #64]	; (400790 <usart_serial_getchar+0x7c>)
  40074e:	4298      	cmp	r0, r3
  400750:	d109      	bne.n	400766 <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
  400752:	461e      	mov	r6, r3
  400754:	4d0f      	ldr	r5, [pc, #60]	; (400794 <usart_serial_getchar+0x80>)
  400756:	4630      	mov	r0, r6
  400758:	a901      	add	r1, sp, #4
  40075a:	47a8      	blx	r5
  40075c:	2800      	cmp	r0, #0
  40075e:	d1fa      	bne.n	400756 <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
  400760:	9b01      	ldr	r3, [sp, #4]
  400762:	7023      	strb	r3, [r4, #0]
  400764:	e00b      	b.n	40077e <usart_serial_getchar+0x6a>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400766:	4b0c      	ldr	r3, [pc, #48]	; (400798 <usart_serial_getchar+0x84>)
  400768:	429d      	cmp	r5, r3
  40076a:	d108      	bne.n	40077e <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
  40076c:	461e      	mov	r6, r3
  40076e:	4d09      	ldr	r5, [pc, #36]	; (400794 <usart_serial_getchar+0x80>)
  400770:	4630      	mov	r0, r6
  400772:	a901      	add	r1, sp, #4
  400774:	47a8      	blx	r5
  400776:	2800      	cmp	r0, #0
  400778:	d1fa      	bne.n	400770 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
  40077a:	9b01      	ldr	r3, [sp, #4]
  40077c:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  40077e:	b003      	add	sp, #12
  400780:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400782:	bf00      	nop
  400784:	400e0600 	.word	0x400e0600
  400788:	00400369 	.word	0x00400369
  40078c:	400e0800 	.word	0x400e0800
  400790:	40024000 	.word	0x40024000
  400794:	00400469 	.word	0x00400469
  400798:	40028000 	.word	0x40028000

0040079c <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  40079c:	b570      	push	{r4, r5, r6, lr}
  40079e:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4007a0:	4b1a      	ldr	r3, [pc, #104]	; (40080c <usart_serial_putchar+0x70>)
  4007a2:	4298      	cmp	r0, r3
  4007a4:	d107      	bne.n	4007b6 <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
  4007a6:	461e      	mov	r6, r3
  4007a8:	4d19      	ldr	r5, [pc, #100]	; (400810 <usart_serial_putchar+0x74>)
  4007aa:	4630      	mov	r0, r6
  4007ac:	4621      	mov	r1, r4
  4007ae:	47a8      	blx	r5
  4007b0:	2800      	cmp	r0, #0
  4007b2:	d1fa      	bne.n	4007aa <usart_serial_putchar+0xe>
  4007b4:	e020      	b.n	4007f8 <usart_serial_putchar+0x5c>
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4007b6:	4b17      	ldr	r3, [pc, #92]	; (400814 <usart_serial_putchar+0x78>)
  4007b8:	4298      	cmp	r0, r3
  4007ba:	d107      	bne.n	4007cc <usart_serial_putchar+0x30>
		while (uart_write((Uart*)p_usart, c)!=0);
  4007bc:	461e      	mov	r6, r3
  4007be:	4d14      	ldr	r5, [pc, #80]	; (400810 <usart_serial_putchar+0x74>)
  4007c0:	4630      	mov	r0, r6
  4007c2:	4621      	mov	r1, r4
  4007c4:	47a8      	blx	r5
  4007c6:	2800      	cmp	r0, #0
  4007c8:	d1fa      	bne.n	4007c0 <usart_serial_putchar+0x24>
  4007ca:	e017      	b.n	4007fc <usart_serial_putchar+0x60>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4007cc:	4b12      	ldr	r3, [pc, #72]	; (400818 <usart_serial_putchar+0x7c>)
  4007ce:	4298      	cmp	r0, r3
  4007d0:	d107      	bne.n	4007e2 <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
  4007d2:	461e      	mov	r6, r3
  4007d4:	4d11      	ldr	r5, [pc, #68]	; (40081c <usart_serial_putchar+0x80>)
  4007d6:	4630      	mov	r0, r6
  4007d8:	4621      	mov	r1, r4
  4007da:	47a8      	blx	r5
  4007dc:	2800      	cmp	r0, #0
  4007de:	d1fa      	bne.n	4007d6 <usart_serial_putchar+0x3a>
  4007e0:	e00e      	b.n	400800 <usart_serial_putchar+0x64>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4007e2:	4b0f      	ldr	r3, [pc, #60]	; (400820 <usart_serial_putchar+0x84>)
  4007e4:	4298      	cmp	r0, r3
  4007e6:	d10d      	bne.n	400804 <usart_serial_putchar+0x68>
		while (usart_write(p_usart, c)!=0);
  4007e8:	461e      	mov	r6, r3
  4007ea:	4d0c      	ldr	r5, [pc, #48]	; (40081c <usart_serial_putchar+0x80>)
  4007ec:	4630      	mov	r0, r6
  4007ee:	4621      	mov	r1, r4
  4007f0:	47a8      	blx	r5
  4007f2:	2800      	cmp	r0, #0
  4007f4:	d1fa      	bne.n	4007ec <usart_serial_putchar+0x50>
  4007f6:	e007      	b.n	400808 <usart_serial_putchar+0x6c>
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
  4007f8:	2001      	movs	r0, #1
  4007fa:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
  4007fc:	2001      	movs	r0, #1
  4007fe:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
  400800:	2001      	movs	r0, #1
  400802:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400804:	2000      	movs	r0, #0
  400806:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
  400808:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
  40080a:	bd70      	pop	{r4, r5, r6, pc}
  40080c:	400e0600 	.word	0x400e0600
  400810:	00400359 	.word	0x00400359
  400814:	400e0800 	.word	0x400e0800
  400818:	40024000 	.word	0x40024000
  40081c:	00400455 	.word	0x00400455
  400820:	40028000 	.word	0x40028000

00400824 <main>:
#include <asf.h>
#include <stdio_serial.h>
#include <ioport.h>

int main (void)
{
  400824:	b5f0      	push	{r4, r5, r6, r7, lr}
  400826:	b087      	sub	sp, #28
	// Insert system clock initialization code here (sysclk_init()).

	sysclk_init ();
  400828:	4b27      	ldr	r3, [pc, #156]	; (4008c8 <main+0xa4>)
  40082a:	4798      	blx	r3
	board_init ();
  40082c:	4b27      	ldr	r3, [pc, #156]	; (4008cc <main+0xa8>)
  40082e:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400830:	4e27      	ldr	r6, [pc, #156]	; (4008d0 <main+0xac>)
  400832:	4b28      	ldr	r3, [pc, #160]	; (4008d4 <main+0xb0>)
  400834:	601e      	str	r6, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400836:	4a28      	ldr	r2, [pc, #160]	; (4008d8 <main+0xb4>)
  400838:	4b28      	ldr	r3, [pc, #160]	; (4008dc <main+0xb8>)
  40083a:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  40083c:	4a28      	ldr	r2, [pc, #160]	; (4008e0 <main+0xbc>)
  40083e:	4b29      	ldr	r3, [pc, #164]	; (4008e4 <main+0xc0>)
  400840:	601a      	str	r2, [r3, #0]
	uart_settings.ul_baudrate = opt->baudrate;
	uart_settings.ul_mode = opt->paritytype;
#endif

	sam_usart_opt_t usart_settings;
	usart_settings.baudrate = opt->baudrate;
  400842:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400846:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  400848:	2400      	movs	r4, #0
  40084a:	9401      	str	r4, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  40084c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400850:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  400852:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  400854:	9404      	str	r4, [sp, #16]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400856:	200e      	movs	r0, #14
  400858:	4d23      	ldr	r5, [pc, #140]	; (4008e8 <main+0xc4>)
  40085a:	47a8      	blx	r5
# ifdef USART0
	if (USART0 == p_usart) {
#if (!SAM4L)
		sysclk_enable_peripheral_clock(ID_USART0);
		/* Configure USART */
		usart_init_rs232(p_usart, &usart_settings,
  40085c:	4630      	mov	r0, r6
  40085e:	4669      	mov	r1, sp
  400860:	4a22      	ldr	r2, [pc, #136]	; (4008ec <main+0xc8>)
  400862:	4b23      	ldr	r3, [pc, #140]	; (4008f0 <main+0xcc>)
  400864:	4798      	blx	r3
		/* Configure USART */
		usart_init_rs232(p_usart, &usart_settings,
				sysclk_get_peripheral_bus_hz(p_usart));
#endif
		/* Enable the receiver and transmitter. */
		usart_enable_tx(p_usart);
  400866:	4630      	mov	r0, r6
  400868:	4b22      	ldr	r3, [pc, #136]	; (4008f4 <main+0xd0>)
  40086a:	4798      	blx	r3
		usart_enable_rx(p_usart);
  40086c:	4630      	mov	r0, r6
  40086e:	4b22      	ldr	r3, [pc, #136]	; (4008f8 <main+0xd4>)
  400870:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400872:	4f22      	ldr	r7, [pc, #136]	; (4008fc <main+0xd8>)
  400874:	683b      	ldr	r3, [r7, #0]
  400876:	6898      	ldr	r0, [r3, #8]
  400878:	4621      	mov	r1, r4
  40087a:	4e21      	ldr	r6, [pc, #132]	; (400900 <main+0xdc>)
  40087c:	47b0      	blx	r6
	setbuf(stdin, NULL);
  40087e:	683b      	ldr	r3, [r7, #0]
  400880:	6858      	ldr	r0, [r3, #4]
  400882:	4621      	mov	r1, r4
  400884:	47b0      	blx	r6
  400886:	200b      	movs	r0, #11
  400888:	47a8      	blx	r5
  40088a:	200c      	movs	r0, #12
  40088c:	47a8      	blx	r5
  40088e:	200d      	movs	r0, #13
  400890:	47a8      	blx	r5
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400892:	4b1c      	ldr	r3, [pc, #112]	; (400904 <main+0xe0>)
  400894:	f44f 6280 	mov.w	r2, #1024	; 0x400
  400898:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40089a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40089e:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4008a2:	2240      	movs	r2, #64	; 0x40
  4008a4:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4008a6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  4008aa:	4c16      	ldr	r4, [pc, #88]	; (400904 <main+0xe0>)
	ioport_set_pin_dir (PIN_USART0_TXD_IDX, IOPORT_DIR_OUTPUT);

	// Insert application code here, after the board has been initialized.
	for (;;) {
		ioport_toggle_pin_level (LED0_GPIO);
		printf ("TEST\n");
  4008ac:	4e16      	ldr	r6, [pc, #88]	; (400908 <main+0xe4>)
  4008ae:	4d17      	ldr	r5, [pc, #92]	; (40090c <main+0xe8>)
  4008b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4008b2:	f413 6f80 	tst.w	r3, #1024	; 0x400
		port->PIO_CODR = mask;
  4008b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4008ba:	bf14      	ite	ne
  4008bc:	6363      	strne	r3, [r4, #52]	; 0x34
	} else {
		port->PIO_SODR = mask;
  4008be:	6323      	streq	r3, [r4, #48]	; 0x30
  4008c0:	4630      	mov	r0, r6
  4008c2:	47a8      	blx	r5
	}
  4008c4:	e7f4      	b.n	4008b0 <main+0x8c>
  4008c6:	bf00      	nop
  4008c8:	004001b5 	.word	0x004001b5
  4008cc:	00400481 	.word	0x00400481
  4008d0:	40024000 	.word	0x40024000
  4008d4:	200008cc 	.word	0x200008cc
  4008d8:	0040079d 	.word	0x0040079d
  4008dc:	200008c8 	.word	0x200008c8
  4008e0:	00400715 	.word	0x00400715
  4008e4:	200008c4 	.word	0x200008c4
  4008e8:	00400301 	.word	0x00400301
  4008ec:	07270e00 	.word	0x07270e00
  4008f0:	004003ad 	.word	0x004003ad
  4008f4:	00400445 	.word	0x00400445
  4008f8:	0040044d 	.word	0x0040044d
  4008fc:	20000430 	.word	0x20000430
  400900:	00400a1d 	.word	0x00400a1d
  400904:	400e1200 	.word	0x400e1200
  400908:	004038e0 	.word	0x004038e0
  40090c:	00400961 	.word	0x00400961

00400910 <__libc_init_array>:
  400910:	b570      	push	{r4, r5, r6, lr}
  400912:	4e0f      	ldr	r6, [pc, #60]	; (400950 <__libc_init_array+0x40>)
  400914:	4d0f      	ldr	r5, [pc, #60]	; (400954 <__libc_init_array+0x44>)
  400916:	1b76      	subs	r6, r6, r5
  400918:	10b6      	asrs	r6, r6, #2
  40091a:	d007      	beq.n	40092c <__libc_init_array+0x1c>
  40091c:	3d04      	subs	r5, #4
  40091e:	2400      	movs	r4, #0
  400920:	3401      	adds	r4, #1
  400922:	f855 3f04 	ldr.w	r3, [r5, #4]!
  400926:	4798      	blx	r3
  400928:	42a6      	cmp	r6, r4
  40092a:	d1f9      	bne.n	400920 <__libc_init_array+0x10>
  40092c:	4e0a      	ldr	r6, [pc, #40]	; (400958 <__libc_init_array+0x48>)
  40092e:	4d0b      	ldr	r5, [pc, #44]	; (40095c <__libc_init_array+0x4c>)
  400930:	1b76      	subs	r6, r6, r5
  400932:	f003 f805 	bl	403940 <_init>
  400936:	10b6      	asrs	r6, r6, #2
  400938:	d008      	beq.n	40094c <__libc_init_array+0x3c>
  40093a:	3d04      	subs	r5, #4
  40093c:	2400      	movs	r4, #0
  40093e:	3401      	adds	r4, #1
  400940:	f855 3f04 	ldr.w	r3, [r5, #4]!
  400944:	4798      	blx	r3
  400946:	42a6      	cmp	r6, r4
  400948:	d1f9      	bne.n	40093e <__libc_init_array+0x2e>
  40094a:	bd70      	pop	{r4, r5, r6, pc}
  40094c:	bd70      	pop	{r4, r5, r6, pc}
  40094e:	bf00      	nop
  400950:	0040394c 	.word	0x0040394c
  400954:	0040394c 	.word	0x0040394c
  400958:	00403954 	.word	0x00403954
  40095c:	0040394c 	.word	0x0040394c

00400960 <iprintf>:
  400960:	b40f      	push	{r0, r1, r2, r3}
  400962:	b500      	push	{lr}
  400964:	4a07      	ldr	r2, [pc, #28]	; (400984 <iprintf+0x24>)
  400966:	b083      	sub	sp, #12
  400968:	ab04      	add	r3, sp, #16
  40096a:	6810      	ldr	r0, [r2, #0]
  40096c:	f853 2b04 	ldr.w	r2, [r3], #4
  400970:	6881      	ldr	r1, [r0, #8]
  400972:	9301      	str	r3, [sp, #4]
  400974:	f000 f916 	bl	400ba4 <_vfiprintf_r>
  400978:	b003      	add	sp, #12
  40097a:	f85d eb04 	ldr.w	lr, [sp], #4
  40097e:	b004      	add	sp, #16
  400980:	4770      	bx	lr
  400982:	bf00      	nop
  400984:	20000430 	.word	0x20000430

00400988 <memset>:
  400988:	b4f0      	push	{r4, r5, r6, r7}
  40098a:	0784      	lsls	r4, r0, #30
  40098c:	d043      	beq.n	400a16 <memset+0x8e>
  40098e:	1e54      	subs	r4, r2, #1
  400990:	2a00      	cmp	r2, #0
  400992:	d03e      	beq.n	400a12 <memset+0x8a>
  400994:	b2cd      	uxtb	r5, r1
  400996:	4603      	mov	r3, r0
  400998:	e003      	b.n	4009a2 <memset+0x1a>
  40099a:	1e62      	subs	r2, r4, #1
  40099c:	2c00      	cmp	r4, #0
  40099e:	d038      	beq.n	400a12 <memset+0x8a>
  4009a0:	4614      	mov	r4, r2
  4009a2:	f803 5b01 	strb.w	r5, [r3], #1
  4009a6:	079a      	lsls	r2, r3, #30
  4009a8:	d1f7      	bne.n	40099a <memset+0x12>
  4009aa:	2c03      	cmp	r4, #3
  4009ac:	d92a      	bls.n	400a04 <memset+0x7c>
  4009ae:	b2cd      	uxtb	r5, r1
  4009b0:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4009b4:	2c0f      	cmp	r4, #15
  4009b6:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4009ba:	d915      	bls.n	4009e8 <memset+0x60>
  4009bc:	f1a4 0710 	sub.w	r7, r4, #16
  4009c0:	093f      	lsrs	r7, r7, #4
  4009c2:	f103 0610 	add.w	r6, r3, #16
  4009c6:	eb06 1607 	add.w	r6, r6, r7, lsl #4
  4009ca:	461a      	mov	r2, r3
  4009cc:	6015      	str	r5, [r2, #0]
  4009ce:	6055      	str	r5, [r2, #4]
  4009d0:	6095      	str	r5, [r2, #8]
  4009d2:	60d5      	str	r5, [r2, #12]
  4009d4:	3210      	adds	r2, #16
  4009d6:	42b2      	cmp	r2, r6
  4009d8:	d1f8      	bne.n	4009cc <memset+0x44>
  4009da:	f004 040f 	and.w	r4, r4, #15
  4009de:	3701      	adds	r7, #1
  4009e0:	2c03      	cmp	r4, #3
  4009e2:	eb03 1307 	add.w	r3, r3, r7, lsl #4
  4009e6:	d90d      	bls.n	400a04 <memset+0x7c>
  4009e8:	461e      	mov	r6, r3
  4009ea:	4622      	mov	r2, r4
  4009ec:	3a04      	subs	r2, #4
  4009ee:	2a03      	cmp	r2, #3
  4009f0:	f846 5b04 	str.w	r5, [r6], #4
  4009f4:	d8fa      	bhi.n	4009ec <memset+0x64>
  4009f6:	1f22      	subs	r2, r4, #4
  4009f8:	f022 0203 	bic.w	r2, r2, #3
  4009fc:	3204      	adds	r2, #4
  4009fe:	4413      	add	r3, r2
  400a00:	f004 0403 	and.w	r4, r4, #3
  400a04:	b12c      	cbz	r4, 400a12 <memset+0x8a>
  400a06:	b2c9      	uxtb	r1, r1
  400a08:	441c      	add	r4, r3
  400a0a:	f803 1b01 	strb.w	r1, [r3], #1
  400a0e:	42a3      	cmp	r3, r4
  400a10:	d1fb      	bne.n	400a0a <memset+0x82>
  400a12:	bcf0      	pop	{r4, r5, r6, r7}
  400a14:	4770      	bx	lr
  400a16:	4614      	mov	r4, r2
  400a18:	4603      	mov	r3, r0
  400a1a:	e7c6      	b.n	4009aa <memset+0x22>

00400a1c <setbuf>:
  400a1c:	2900      	cmp	r1, #0
  400a1e:	bf0c      	ite	eq
  400a20:	2202      	moveq	r2, #2
  400a22:	2200      	movne	r2, #0
  400a24:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400a28:	f000 b800 	b.w	400a2c <setvbuf>

00400a2c <setvbuf>:
  400a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400a30:	4c3c      	ldr	r4, [pc, #240]	; (400b24 <setvbuf+0xf8>)
  400a32:	6825      	ldr	r5, [r4, #0]
  400a34:	4688      	mov	r8, r1
  400a36:	4604      	mov	r4, r0
  400a38:	4616      	mov	r6, r2
  400a3a:	461f      	mov	r7, r3
  400a3c:	b115      	cbz	r5, 400a44 <setvbuf+0x18>
  400a3e:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400a40:	2b00      	cmp	r3, #0
  400a42:	d04f      	beq.n	400ae4 <setvbuf+0xb8>
  400a44:	2e02      	cmp	r6, #2
  400a46:	d830      	bhi.n	400aaa <setvbuf+0x7e>
  400a48:	2f00      	cmp	r7, #0
  400a4a:	db2e      	blt.n	400aaa <setvbuf+0x7e>
  400a4c:	4628      	mov	r0, r5
  400a4e:	4621      	mov	r1, r4
  400a50:	f001 f82a 	bl	401aa8 <_fflush_r>
  400a54:	89a3      	ldrh	r3, [r4, #12]
  400a56:	2200      	movs	r2, #0
  400a58:	6062      	str	r2, [r4, #4]
  400a5a:	61a2      	str	r2, [r4, #24]
  400a5c:	061a      	lsls	r2, r3, #24
  400a5e:	d428      	bmi.n	400ab2 <setvbuf+0x86>
  400a60:	f023 0383 	bic.w	r3, r3, #131	; 0x83
  400a64:	b29b      	uxth	r3, r3
  400a66:	2e02      	cmp	r6, #2
  400a68:	81a3      	strh	r3, [r4, #12]
  400a6a:	d02d      	beq.n	400ac8 <setvbuf+0x9c>
  400a6c:	f1b8 0f00 	cmp.w	r8, #0
  400a70:	d03c      	beq.n	400aec <setvbuf+0xc0>
  400a72:	2e01      	cmp	r6, #1
  400a74:	d013      	beq.n	400a9e <setvbuf+0x72>
  400a76:	b29b      	uxth	r3, r3
  400a78:	f003 0008 	and.w	r0, r3, #8
  400a7c:	4a2a      	ldr	r2, [pc, #168]	; (400b28 <setvbuf+0xfc>)
  400a7e:	63ea      	str	r2, [r5, #60]	; 0x3c
  400a80:	b280      	uxth	r0, r0
  400a82:	f8c4 8000 	str.w	r8, [r4]
  400a86:	f8c4 8010 	str.w	r8, [r4, #16]
  400a8a:	6167      	str	r7, [r4, #20]
  400a8c:	b178      	cbz	r0, 400aae <setvbuf+0x82>
  400a8e:	f013 0f03 	tst.w	r3, #3
  400a92:	bf18      	it	ne
  400a94:	2700      	movne	r7, #0
  400a96:	60a7      	str	r7, [r4, #8]
  400a98:	2000      	movs	r0, #0
  400a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400a9e:	f043 0301 	orr.w	r3, r3, #1
  400aa2:	427a      	negs	r2, r7
  400aa4:	81a3      	strh	r3, [r4, #12]
  400aa6:	61a2      	str	r2, [r4, #24]
  400aa8:	e7e5      	b.n	400a76 <setvbuf+0x4a>
  400aaa:	f04f 30ff 	mov.w	r0, #4294967295
  400aae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ab2:	4628      	mov	r0, r5
  400ab4:	6921      	ldr	r1, [r4, #16]
  400ab6:	f001 f955 	bl	401d64 <_free_r>
  400aba:	89a3      	ldrh	r3, [r4, #12]
  400abc:	f023 0383 	bic.w	r3, r3, #131	; 0x83
  400ac0:	b29b      	uxth	r3, r3
  400ac2:	2e02      	cmp	r6, #2
  400ac4:	81a3      	strh	r3, [r4, #12]
  400ac6:	d1d1      	bne.n	400a6c <setvbuf+0x40>
  400ac8:	2000      	movs	r0, #0
  400aca:	f104 0243 	add.w	r2, r4, #67	; 0x43
  400ace:	f043 0302 	orr.w	r3, r3, #2
  400ad2:	2500      	movs	r5, #0
  400ad4:	2101      	movs	r1, #1
  400ad6:	81a3      	strh	r3, [r4, #12]
  400ad8:	60a5      	str	r5, [r4, #8]
  400ada:	6022      	str	r2, [r4, #0]
  400adc:	6122      	str	r2, [r4, #16]
  400ade:	6161      	str	r1, [r4, #20]
  400ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ae4:	4628      	mov	r0, r5
  400ae6:	f000 fffb 	bl	401ae0 <__sinit>
  400aea:	e7ab      	b.n	400a44 <setvbuf+0x18>
  400aec:	2f00      	cmp	r7, #0
  400aee:	bf08      	it	eq
  400af0:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  400af4:	4638      	mov	r0, r7
  400af6:	f001 fc2f 	bl	402358 <malloc>
  400afa:	4680      	mov	r8, r0
  400afc:	b128      	cbz	r0, 400b0a <setvbuf+0xde>
  400afe:	89a3      	ldrh	r3, [r4, #12]
  400b00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400b04:	b29b      	uxth	r3, r3
  400b06:	81a3      	strh	r3, [r4, #12]
  400b08:	e7b3      	b.n	400a72 <setvbuf+0x46>
  400b0a:	f44f 6080 	mov.w	r0, #1024	; 0x400
  400b0e:	f001 fc23 	bl	402358 <malloc>
  400b12:	4680      	mov	r8, r0
  400b14:	b918      	cbnz	r0, 400b1e <setvbuf+0xf2>
  400b16:	89a3      	ldrh	r3, [r4, #12]
  400b18:	f04f 30ff 	mov.w	r0, #4294967295
  400b1c:	e7d5      	b.n	400aca <setvbuf+0x9e>
  400b1e:	f44f 6780 	mov.w	r7, #1024	; 0x400
  400b22:	e7ec      	b.n	400afe <setvbuf+0xd2>
  400b24:	20000430 	.word	0x20000430
  400b28:	00401ad5 	.word	0x00401ad5

00400b2c <__sprint_r.part.0>:
  400b2c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  400b2e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400b32:	049c      	lsls	r4, r3, #18
  400b34:	460e      	mov	r6, r1
  400b36:	4680      	mov	r8, r0
  400b38:	4691      	mov	r9, r2
  400b3a:	d52a      	bpl.n	400b92 <__sprint_r.part.0+0x66>
  400b3c:	6893      	ldr	r3, [r2, #8]
  400b3e:	6812      	ldr	r2, [r2, #0]
  400b40:	f102 0a08 	add.w	sl, r2, #8
  400b44:	b31b      	cbz	r3, 400b8e <__sprint_r.part.0+0x62>
  400b46:	e91a 00a0 	ldmdb	sl, {r5, r7}
  400b4a:	08bf      	lsrs	r7, r7, #2
  400b4c:	d017      	beq.n	400b7e <__sprint_r.part.0+0x52>
  400b4e:	3d04      	subs	r5, #4
  400b50:	2400      	movs	r4, #0
  400b52:	e001      	b.n	400b58 <__sprint_r.part.0+0x2c>
  400b54:	42a7      	cmp	r7, r4
  400b56:	d010      	beq.n	400b7a <__sprint_r.part.0+0x4e>
  400b58:	4640      	mov	r0, r8
  400b5a:	f855 1f04 	ldr.w	r1, [r5, #4]!
  400b5e:	4632      	mov	r2, r6
  400b60:	f001 f854 	bl	401c0c <_fputwc_r>
  400b64:	1c43      	adds	r3, r0, #1
  400b66:	f104 0401 	add.w	r4, r4, #1
  400b6a:	d1f3      	bne.n	400b54 <__sprint_r.part.0+0x28>
  400b6c:	2300      	movs	r3, #0
  400b6e:	f8c9 3008 	str.w	r3, [r9, #8]
  400b72:	f8c9 3004 	str.w	r3, [r9, #4]
  400b76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400b7a:	f8d9 3008 	ldr.w	r3, [r9, #8]
  400b7e:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
  400b82:	f8c9 3008 	str.w	r3, [r9, #8]
  400b86:	f10a 0a08 	add.w	sl, sl, #8
  400b8a:	2b00      	cmp	r3, #0
  400b8c:	d1db      	bne.n	400b46 <__sprint_r.part.0+0x1a>
  400b8e:	2000      	movs	r0, #0
  400b90:	e7ec      	b.n	400b6c <__sprint_r.part.0+0x40>
  400b92:	f001 f9b5 	bl	401f00 <__sfvwrite_r>
  400b96:	2300      	movs	r3, #0
  400b98:	f8c9 3008 	str.w	r3, [r9, #8]
  400b9c:	f8c9 3004 	str.w	r3, [r9, #4]
  400ba0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00400ba4 <_vfiprintf_r>:
  400ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400ba8:	b0b1      	sub	sp, #196	; 0xc4
  400baa:	461c      	mov	r4, r3
  400bac:	9102      	str	r1, [sp, #8]
  400bae:	4690      	mov	r8, r2
  400bb0:	9308      	str	r3, [sp, #32]
  400bb2:	9006      	str	r0, [sp, #24]
  400bb4:	b118      	cbz	r0, 400bbe <_vfiprintf_r+0x1a>
  400bb6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400bb8:	2b00      	cmp	r3, #0
  400bba:	f000 80e8 	beq.w	400d8e <_vfiprintf_r+0x1ea>
  400bbe:	9d02      	ldr	r5, [sp, #8]
  400bc0:	89ab      	ldrh	r3, [r5, #12]
  400bc2:	b29a      	uxth	r2, r3
  400bc4:	0490      	lsls	r0, r2, #18
  400bc6:	d407      	bmi.n	400bd8 <_vfiprintf_r+0x34>
  400bc8:	6e6a      	ldr	r2, [r5, #100]	; 0x64
  400bca:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  400bce:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  400bd2:	81ab      	strh	r3, [r5, #12]
  400bd4:	b29a      	uxth	r2, r3
  400bd6:	6669      	str	r1, [r5, #100]	; 0x64
  400bd8:	0711      	lsls	r1, r2, #28
  400bda:	f140 80b7 	bpl.w	400d4c <_vfiprintf_r+0x1a8>
  400bde:	f8dd b008 	ldr.w	fp, [sp, #8]
  400be2:	f8db 3010 	ldr.w	r3, [fp, #16]
  400be6:	2b00      	cmp	r3, #0
  400be8:	f000 80b0 	beq.w	400d4c <_vfiprintf_r+0x1a8>
  400bec:	f002 021a 	and.w	r2, r2, #26
  400bf0:	2a0a      	cmp	r2, #10
  400bf2:	f000 80b7 	beq.w	400d64 <_vfiprintf_r+0x1c0>
  400bf6:	2300      	movs	r3, #0
  400bf8:	f10d 0980 	add.w	r9, sp, #128	; 0x80
  400bfc:	930a      	str	r3, [sp, #40]	; 0x28
  400bfe:	9315      	str	r3, [sp, #84]	; 0x54
  400c00:	9314      	str	r3, [sp, #80]	; 0x50
  400c02:	9309      	str	r3, [sp, #36]	; 0x24
  400c04:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
  400c08:	464e      	mov	r6, r9
  400c0a:	f898 3000 	ldrb.w	r3, [r8]
  400c0e:	2b00      	cmp	r3, #0
  400c10:	f000 84c4 	beq.w	40159c <_vfiprintf_r+0x9f8>
  400c14:	2b25      	cmp	r3, #37	; 0x25
  400c16:	f000 84c1 	beq.w	40159c <_vfiprintf_r+0x9f8>
  400c1a:	f108 0201 	add.w	r2, r8, #1
  400c1e:	e001      	b.n	400c24 <_vfiprintf_r+0x80>
  400c20:	2b25      	cmp	r3, #37	; 0x25
  400c22:	d004      	beq.n	400c2e <_vfiprintf_r+0x8a>
  400c24:	4614      	mov	r4, r2
  400c26:	3201      	adds	r2, #1
  400c28:	7823      	ldrb	r3, [r4, #0]
  400c2a:	2b00      	cmp	r3, #0
  400c2c:	d1f8      	bne.n	400c20 <_vfiprintf_r+0x7c>
  400c2e:	ebc8 0504 	rsb	r5, r8, r4
  400c32:	b195      	cbz	r5, 400c5a <_vfiprintf_r+0xb6>
  400c34:	9b14      	ldr	r3, [sp, #80]	; 0x50
  400c36:	9a15      	ldr	r2, [sp, #84]	; 0x54
  400c38:	f8c6 8000 	str.w	r8, [r6]
  400c3c:	3301      	adds	r3, #1
  400c3e:	442a      	add	r2, r5
  400c40:	2b07      	cmp	r3, #7
  400c42:	6075      	str	r5, [r6, #4]
  400c44:	9215      	str	r2, [sp, #84]	; 0x54
  400c46:	9314      	str	r3, [sp, #80]	; 0x50
  400c48:	dd7b      	ble.n	400d42 <_vfiprintf_r+0x19e>
  400c4a:	2a00      	cmp	r2, #0
  400c4c:	f040 84d4 	bne.w	4015f8 <_vfiprintf_r+0xa54>
  400c50:	9809      	ldr	r0, [sp, #36]	; 0x24
  400c52:	9214      	str	r2, [sp, #80]	; 0x50
  400c54:	4428      	add	r0, r5
  400c56:	464e      	mov	r6, r9
  400c58:	9009      	str	r0, [sp, #36]	; 0x24
  400c5a:	7823      	ldrb	r3, [r4, #0]
  400c5c:	2b00      	cmp	r3, #0
  400c5e:	f000 83e9 	beq.w	401434 <_vfiprintf_r+0x890>
  400c62:	2100      	movs	r1, #0
  400c64:	f04f 0200 	mov.w	r2, #0
  400c68:	f04f 3cff 	mov.w	ip, #4294967295
  400c6c:	7863      	ldrb	r3, [r4, #1]
  400c6e:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
  400c72:	9104      	str	r1, [sp, #16]
  400c74:	468a      	mov	sl, r1
  400c76:	f104 0801 	add.w	r8, r4, #1
  400c7a:	4608      	mov	r0, r1
  400c7c:	4665      	mov	r5, ip
  400c7e:	f108 0801 	add.w	r8, r8, #1
  400c82:	f1a3 0220 	sub.w	r2, r3, #32
  400c86:	2a58      	cmp	r2, #88	; 0x58
  400c88:	f200 82d5 	bhi.w	401236 <_vfiprintf_r+0x692>
  400c8c:	e8df f012 	tbh	[pc, r2, lsl #1]
  400c90:	02d302c7 	.word	0x02d302c7
  400c94:	02ce02d3 	.word	0x02ce02d3
  400c98:	02d302d3 	.word	0x02d302d3
  400c9c:	02d302d3 	.word	0x02d302d3
  400ca0:	02d302d3 	.word	0x02d302d3
  400ca4:	028b027e 	.word	0x028b027e
  400ca8:	008402d3 	.word	0x008402d3
  400cac:	02d3028f 	.word	0x02d3028f
  400cb0:	0194012b 	.word	0x0194012b
  400cb4:	01940194 	.word	0x01940194
  400cb8:	01940194 	.word	0x01940194
  400cbc:	01940194 	.word	0x01940194
  400cc0:	01940194 	.word	0x01940194
  400cc4:	02d302d3 	.word	0x02d302d3
  400cc8:	02d302d3 	.word	0x02d302d3
  400ccc:	02d302d3 	.word	0x02d302d3
  400cd0:	02d302d3 	.word	0x02d302d3
  400cd4:	02d302d3 	.word	0x02d302d3
  400cd8:	02d30130 	.word	0x02d30130
  400cdc:	02d302d3 	.word	0x02d302d3
  400ce0:	02d302d3 	.word	0x02d302d3
  400ce4:	02d302d3 	.word	0x02d302d3
  400ce8:	02d302d3 	.word	0x02d302d3
  400cec:	017902d3 	.word	0x017902d3
  400cf0:	02d302d3 	.word	0x02d302d3
  400cf4:	02d302d3 	.word	0x02d302d3
  400cf8:	01a202d3 	.word	0x01a202d3
  400cfc:	02d302d3 	.word	0x02d302d3
  400d00:	02d301bd 	.word	0x02d301bd
  400d04:	02d302d3 	.word	0x02d302d3
  400d08:	02d302d3 	.word	0x02d302d3
  400d0c:	02d302d3 	.word	0x02d302d3
  400d10:	02d302d3 	.word	0x02d302d3
  400d14:	01e202d3 	.word	0x01e202d3
  400d18:	02d301f8 	.word	0x02d301f8
  400d1c:	02d302d3 	.word	0x02d302d3
  400d20:	01f80214 	.word	0x01f80214
  400d24:	02d302d3 	.word	0x02d302d3
  400d28:	02d30219 	.word	0x02d30219
  400d2c:	00890226 	.word	0x00890226
  400d30:	02790264 	.word	0x02790264
  400d34:	023802d3 	.word	0x023802d3
  400d38:	011902d3 	.word	0x011902d3
  400d3c:	02d302d3 	.word	0x02d302d3
  400d40:	02ab      	.short	0x02ab
  400d42:	3608      	adds	r6, #8
  400d44:	9809      	ldr	r0, [sp, #36]	; 0x24
  400d46:	4428      	add	r0, r5
  400d48:	9009      	str	r0, [sp, #36]	; 0x24
  400d4a:	e786      	b.n	400c5a <_vfiprintf_r+0xb6>
  400d4c:	9806      	ldr	r0, [sp, #24]
  400d4e:	9902      	ldr	r1, [sp, #8]
  400d50:	f000 fd8e 	bl	401870 <__swsetup_r>
  400d54:	b9b0      	cbnz	r0, 400d84 <_vfiprintf_r+0x1e0>
  400d56:	9d02      	ldr	r5, [sp, #8]
  400d58:	89aa      	ldrh	r2, [r5, #12]
  400d5a:	f002 021a 	and.w	r2, r2, #26
  400d5e:	2a0a      	cmp	r2, #10
  400d60:	f47f af49 	bne.w	400bf6 <_vfiprintf_r+0x52>
  400d64:	f8dd b008 	ldr.w	fp, [sp, #8]
  400d68:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  400d6c:	2b00      	cmp	r3, #0
  400d6e:	f6ff af42 	blt.w	400bf6 <_vfiprintf_r+0x52>
  400d72:	9806      	ldr	r0, [sp, #24]
  400d74:	4659      	mov	r1, fp
  400d76:	4642      	mov	r2, r8
  400d78:	4623      	mov	r3, r4
  400d7a:	f000 fd3d 	bl	4017f8 <__sbprintf>
  400d7e:	b031      	add	sp, #196	; 0xc4
  400d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400d84:	f04f 30ff 	mov.w	r0, #4294967295
  400d88:	b031      	add	sp, #196	; 0xc4
  400d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400d8e:	f000 fea7 	bl	401ae0 <__sinit>
  400d92:	e714      	b.n	400bbe <_vfiprintf_r+0x1a>
  400d94:	4240      	negs	r0, r0
  400d96:	9308      	str	r3, [sp, #32]
  400d98:	f04a 0a04 	orr.w	sl, sl, #4
  400d9c:	f898 3000 	ldrb.w	r3, [r8]
  400da0:	e76d      	b.n	400c7e <_vfiprintf_r+0xda>
  400da2:	f01a 0320 	ands.w	r3, sl, #32
  400da6:	9004      	str	r0, [sp, #16]
  400da8:	46ac      	mov	ip, r5
  400daa:	f000 80f2 	beq.w	400f92 <_vfiprintf_r+0x3ee>
  400dae:	f8dd b020 	ldr.w	fp, [sp, #32]
  400db2:	f10b 0307 	add.w	r3, fp, #7
  400db6:	f023 0307 	bic.w	r3, r3, #7
  400dba:	f103 0408 	add.w	r4, r3, #8
  400dbe:	9408      	str	r4, [sp, #32]
  400dc0:	e9d3 4500 	ldrd	r4, r5, [r3]
  400dc4:	2300      	movs	r3, #0
  400dc6:	f04f 0000 	mov.w	r0, #0
  400dca:	2100      	movs	r1, #0
  400dcc:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  400dd0:	f8cd c014 	str.w	ip, [sp, #20]
  400dd4:	9107      	str	r1, [sp, #28]
  400dd6:	f1bc 0f00 	cmp.w	ip, #0
  400dda:	bfa8      	it	ge
  400ddc:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  400de0:	ea54 0205 	orrs.w	r2, r4, r5
  400de4:	f040 80ad 	bne.w	400f42 <_vfiprintf_r+0x39e>
  400de8:	f1bc 0f00 	cmp.w	ip, #0
  400dec:	f040 80a9 	bne.w	400f42 <_vfiprintf_r+0x39e>
  400df0:	2b00      	cmp	r3, #0
  400df2:	f040 83bc 	bne.w	40156e <_vfiprintf_r+0x9ca>
  400df6:	f01a 0f01 	tst.w	sl, #1
  400dfa:	f000 83b8 	beq.w	40156e <_vfiprintf_r+0x9ca>
  400dfe:	af30      	add	r7, sp, #192	; 0xc0
  400e00:	2330      	movs	r3, #48	; 0x30
  400e02:	f807 3d41 	strb.w	r3, [r7, #-65]!
  400e06:	ebc7 0409 	rsb	r4, r7, r9
  400e0a:	9405      	str	r4, [sp, #20]
  400e0c:	f8dd b014 	ldr.w	fp, [sp, #20]
  400e10:	9c07      	ldr	r4, [sp, #28]
  400e12:	45e3      	cmp	fp, ip
  400e14:	bfb8      	it	lt
  400e16:	46e3      	movlt	fp, ip
  400e18:	f8cd b00c 	str.w	fp, [sp, #12]
  400e1c:	b11c      	cbz	r4, 400e26 <_vfiprintf_r+0x282>
  400e1e:	f10b 0b01 	add.w	fp, fp, #1
  400e22:	f8cd b00c 	str.w	fp, [sp, #12]
  400e26:	f01a 0502 	ands.w	r5, sl, #2
  400e2a:	9507      	str	r5, [sp, #28]
  400e2c:	d005      	beq.n	400e3a <_vfiprintf_r+0x296>
  400e2e:	f8dd b00c 	ldr.w	fp, [sp, #12]
  400e32:	f10b 0b02 	add.w	fp, fp, #2
  400e36:	f8cd b00c 	str.w	fp, [sp, #12]
  400e3a:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
  400e3e:	930b      	str	r3, [sp, #44]	; 0x2c
  400e40:	f040 8217 	bne.w	401272 <_vfiprintf_r+0x6ce>
  400e44:	9d04      	ldr	r5, [sp, #16]
  400e46:	f8dd b00c 	ldr.w	fp, [sp, #12]
  400e4a:	ebcb 0405 	rsb	r4, fp, r5
  400e4e:	2c00      	cmp	r4, #0
  400e50:	f340 820f 	ble.w	401272 <_vfiprintf_r+0x6ce>
  400e54:	2c10      	cmp	r4, #16
  400e56:	f340 8488 	ble.w	40176a <_vfiprintf_r+0xbc6>
  400e5a:	4dbd      	ldr	r5, [pc, #756]	; (401150 <_vfiprintf_r+0x5ac>)
  400e5c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  400e5e:	9814      	ldr	r0, [sp, #80]	; 0x50
  400e60:	462b      	mov	r3, r5
  400e62:	f04f 0b10 	mov.w	fp, #16
  400e66:	4625      	mov	r5, r4
  400e68:	4664      	mov	r4, ip
  400e6a:	46b4      	mov	ip, r6
  400e6c:	461e      	mov	r6, r3
  400e6e:	e006      	b.n	400e7e <_vfiprintf_r+0x2da>
  400e70:	1c83      	adds	r3, r0, #2
  400e72:	f10c 0c08 	add.w	ip, ip, #8
  400e76:	4608      	mov	r0, r1
  400e78:	3d10      	subs	r5, #16
  400e7a:	2d10      	cmp	r5, #16
  400e7c:	dd11      	ble.n	400ea2 <_vfiprintf_r+0x2fe>
  400e7e:	1c41      	adds	r1, r0, #1
  400e80:	3210      	adds	r2, #16
  400e82:	2907      	cmp	r1, #7
  400e84:	9215      	str	r2, [sp, #84]	; 0x54
  400e86:	e88c 0840 	stmia.w	ip, {r6, fp}
  400e8a:	9114      	str	r1, [sp, #80]	; 0x50
  400e8c:	ddf0      	ble.n	400e70 <_vfiprintf_r+0x2cc>
  400e8e:	2a00      	cmp	r2, #0
  400e90:	f040 81e2 	bne.w	401258 <_vfiprintf_r+0x6b4>
  400e94:	3d10      	subs	r5, #16
  400e96:	2d10      	cmp	r5, #16
  400e98:	f04f 0301 	mov.w	r3, #1
  400e9c:	4610      	mov	r0, r2
  400e9e:	46cc      	mov	ip, r9
  400ea0:	dced      	bgt.n	400e7e <_vfiprintf_r+0x2da>
  400ea2:	4631      	mov	r1, r6
  400ea4:	4666      	mov	r6, ip
  400ea6:	46a4      	mov	ip, r4
  400ea8:	462c      	mov	r4, r5
  400eaa:	460d      	mov	r5, r1
  400eac:	4422      	add	r2, r4
  400eae:	2b07      	cmp	r3, #7
  400eb0:	9215      	str	r2, [sp, #84]	; 0x54
  400eb2:	6035      	str	r5, [r6, #0]
  400eb4:	6074      	str	r4, [r6, #4]
  400eb6:	9314      	str	r3, [sp, #80]	; 0x50
  400eb8:	f300 8369 	bgt.w	40158e <_vfiprintf_r+0x9ea>
  400ebc:	3608      	adds	r6, #8
  400ebe:	1c59      	adds	r1, r3, #1
  400ec0:	e1da      	b.n	401278 <_vfiprintf_r+0x6d4>
  400ec2:	f01a 0f20 	tst.w	sl, #32
  400ec6:	9004      	str	r0, [sp, #16]
  400ec8:	46ac      	mov	ip, r5
  400eca:	f000 808b 	beq.w	400fe4 <_vfiprintf_r+0x440>
  400ece:	9d08      	ldr	r5, [sp, #32]
  400ed0:	1deb      	adds	r3, r5, #7
  400ed2:	f023 0307 	bic.w	r3, r3, #7
  400ed6:	f103 0b08 	add.w	fp, r3, #8
  400eda:	e9d3 4500 	ldrd	r4, r5, [r3]
  400ede:	f8cd b020 	str.w	fp, [sp, #32]
  400ee2:	2301      	movs	r3, #1
  400ee4:	e76f      	b.n	400dc6 <_vfiprintf_r+0x222>
  400ee6:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
  400eea:	f898 3000 	ldrb.w	r3, [r8]
  400eee:	e6c6      	b.n	400c7e <_vfiprintf_r+0xda>
  400ef0:	f04a 0a10 	orr.w	sl, sl, #16
  400ef4:	f01a 0f20 	tst.w	sl, #32
  400ef8:	9004      	str	r0, [sp, #16]
  400efa:	46ac      	mov	ip, r5
  400efc:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  400f00:	f000 80c6 	beq.w	401090 <_vfiprintf_r+0x4ec>
  400f04:	9c08      	ldr	r4, [sp, #32]
  400f06:	1de1      	adds	r1, r4, #7
  400f08:	f021 0107 	bic.w	r1, r1, #7
  400f0c:	e9d1 2300 	ldrd	r2, r3, [r1]
  400f10:	3108      	adds	r1, #8
  400f12:	9108      	str	r1, [sp, #32]
  400f14:	4614      	mov	r4, r2
  400f16:	461d      	mov	r5, r3
  400f18:	2a00      	cmp	r2, #0
  400f1a:	f173 0000 	sbcs.w	r0, r3, #0
  400f1e:	f2c0 83cd 	blt.w	4016bc <_vfiprintf_r+0xb18>
  400f22:	f1bc 0f00 	cmp.w	ip, #0
  400f26:	f89d 1047 	ldrb.w	r1, [sp, #71]	; 0x47
  400f2a:	9107      	str	r1, [sp, #28]
  400f2c:	bfa8      	it	ge
  400f2e:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  400f32:	ea54 0205 	orrs.w	r2, r4, r5
  400f36:	f8cd c014 	str.w	ip, [sp, #20]
  400f3a:	f04f 0301 	mov.w	r3, #1
  400f3e:	f43f af53 	beq.w	400de8 <_vfiprintf_r+0x244>
  400f42:	2b01      	cmp	r3, #1
  400f44:	f000 8315 	beq.w	401572 <_vfiprintf_r+0x9ce>
  400f48:	2b02      	cmp	r3, #2
  400f4a:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
  400f4e:	f040 8248 	bne.w	4013e2 <_vfiprintf_r+0x83e>
  400f52:	980a      	ldr	r0, [sp, #40]	; 0x28
  400f54:	4619      	mov	r1, r3
  400f56:	0922      	lsrs	r2, r4, #4
  400f58:	f004 040f 	and.w	r4, r4, #15
  400f5c:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
  400f60:	460f      	mov	r7, r1
  400f62:	092b      	lsrs	r3, r5, #4
  400f64:	5d01      	ldrb	r1, [r0, r4]
  400f66:	7039      	strb	r1, [r7, #0]
  400f68:	ea52 0b03 	orrs.w	fp, r2, r3
  400f6c:	4614      	mov	r4, r2
  400f6e:	461d      	mov	r5, r3
  400f70:	f107 31ff 	add.w	r1, r7, #4294967295
  400f74:	d1ef      	bne.n	400f56 <_vfiprintf_r+0x3b2>
  400f76:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  400f7a:	ebc7 0309 	rsb	r3, r7, r9
  400f7e:	9305      	str	r3, [sp, #20]
  400f80:	e744      	b.n	400e0c <_vfiprintf_r+0x268>
  400f82:	f04a 0a10 	orr.w	sl, sl, #16
  400f86:	f01a 0320 	ands.w	r3, sl, #32
  400f8a:	9004      	str	r0, [sp, #16]
  400f8c:	46ac      	mov	ip, r5
  400f8e:	f47f af0e 	bne.w	400dae <_vfiprintf_r+0x20a>
  400f92:	f01a 0210 	ands.w	r2, sl, #16
  400f96:	f040 830f 	bne.w	4015b8 <_vfiprintf_r+0xa14>
  400f9a:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
  400f9e:	f000 830b 	beq.w	4015b8 <_vfiprintf_r+0xa14>
  400fa2:	f8dd b020 	ldr.w	fp, [sp, #32]
  400fa6:	f8bb 4000 	ldrh.w	r4, [fp]
  400faa:	f10b 0b04 	add.w	fp, fp, #4
  400fae:	4613      	mov	r3, r2
  400fb0:	2500      	movs	r5, #0
  400fb2:	f8cd b020 	str.w	fp, [sp, #32]
  400fb6:	e706      	b.n	400dc6 <_vfiprintf_r+0x222>
  400fb8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  400fbc:	2000      	movs	r0, #0
  400fbe:	f818 3b01 	ldrb.w	r3, [r8], #1
  400fc2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  400fc6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
  400fca:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  400fce:	2a09      	cmp	r2, #9
  400fd0:	d9f5      	bls.n	400fbe <_vfiprintf_r+0x41a>
  400fd2:	e656      	b.n	400c82 <_vfiprintf_r+0xde>
  400fd4:	f04a 0a10 	orr.w	sl, sl, #16
  400fd8:	f01a 0f20 	tst.w	sl, #32
  400fdc:	9004      	str	r0, [sp, #16]
  400fde:	46ac      	mov	ip, r5
  400fe0:	f47f af75 	bne.w	400ece <_vfiprintf_r+0x32a>
  400fe4:	f01a 0f10 	tst.w	sl, #16
  400fe8:	f040 82ec 	bne.w	4015c4 <_vfiprintf_r+0xa20>
  400fec:	f01a 0f40 	tst.w	sl, #64	; 0x40
  400ff0:	f000 82e8 	beq.w	4015c4 <_vfiprintf_r+0xa20>
  400ff4:	f8dd b020 	ldr.w	fp, [sp, #32]
  400ff8:	f8bb 4000 	ldrh.w	r4, [fp]
  400ffc:	f10b 0b04 	add.w	fp, fp, #4
  401000:	2500      	movs	r5, #0
  401002:	2301      	movs	r3, #1
  401004:	f8cd b020 	str.w	fp, [sp, #32]
  401008:	e6dd      	b.n	400dc6 <_vfiprintf_r+0x222>
  40100a:	46ac      	mov	ip, r5
  40100c:	f01a 0f20 	tst.w	sl, #32
  401010:	4d50      	ldr	r5, [pc, #320]	; (401154 <_vfiprintf_r+0x5b0>)
  401012:	9004      	str	r0, [sp, #16]
  401014:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401018:	950a      	str	r5, [sp, #40]	; 0x28
  40101a:	f000 80ee 	beq.w	4011fa <_vfiprintf_r+0x656>
  40101e:	9d08      	ldr	r5, [sp, #32]
  401020:	1dea      	adds	r2, r5, #7
  401022:	f022 0207 	bic.w	r2, r2, #7
  401026:	e9d2 4500 	ldrd	r4, r5, [r2]
  40102a:	f102 0b08 	add.w	fp, r2, #8
  40102e:	f8cd b020 	str.w	fp, [sp, #32]
  401032:	f01a 0f01 	tst.w	sl, #1
  401036:	f000 82a8 	beq.w	40158a <_vfiprintf_r+0x9e6>
  40103a:	ea54 0b05 	orrs.w	fp, r4, r5
  40103e:	f000 82a4 	beq.w	40158a <_vfiprintf_r+0x9e6>
  401042:	2230      	movs	r2, #48	; 0x30
  401044:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  401048:	f04a 0a02 	orr.w	sl, sl, #2
  40104c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401050:	2302      	movs	r3, #2
  401052:	e6b8      	b.n	400dc6 <_vfiprintf_r+0x222>
  401054:	9b08      	ldr	r3, [sp, #32]
  401056:	f8dd b020 	ldr.w	fp, [sp, #32]
  40105a:	681b      	ldr	r3, [r3, #0]
  40105c:	9004      	str	r0, [sp, #16]
  40105e:	2401      	movs	r4, #1
  401060:	f04f 0500 	mov.w	r5, #0
  401064:	f10b 0b04 	add.w	fp, fp, #4
  401068:	9403      	str	r4, [sp, #12]
  40106a:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  40106e:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  401072:	f8cd b020 	str.w	fp, [sp, #32]
  401076:	9405      	str	r4, [sp, #20]
  401078:	af16      	add	r7, sp, #88	; 0x58
  40107a:	f04f 0c00 	mov.w	ip, #0
  40107e:	e6d2      	b.n	400e26 <_vfiprintf_r+0x282>
  401080:	f01a 0f20 	tst.w	sl, #32
  401084:	9004      	str	r0, [sp, #16]
  401086:	46ac      	mov	ip, r5
  401088:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  40108c:	f47f af3a 	bne.w	400f04 <_vfiprintf_r+0x360>
  401090:	f01a 0f10 	tst.w	sl, #16
  401094:	f040 82a4 	bne.w	4015e0 <_vfiprintf_r+0xa3c>
  401098:	f01a 0f40 	tst.w	sl, #64	; 0x40
  40109c:	f000 82a0 	beq.w	4015e0 <_vfiprintf_r+0xa3c>
  4010a0:	f8dd b020 	ldr.w	fp, [sp, #32]
  4010a4:	f9bb 4000 	ldrsh.w	r4, [fp]
  4010a8:	f10b 0b04 	add.w	fp, fp, #4
  4010ac:	17e5      	asrs	r5, r4, #31
  4010ae:	4622      	mov	r2, r4
  4010b0:	462b      	mov	r3, r5
  4010b2:	f8cd b020 	str.w	fp, [sp, #32]
  4010b6:	e72f      	b.n	400f18 <_vfiprintf_r+0x374>
  4010b8:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
  4010bc:	f898 3000 	ldrb.w	r3, [r8]
  4010c0:	e5dd      	b.n	400c7e <_vfiprintf_r+0xda>
  4010c2:	f898 3000 	ldrb.w	r3, [r8]
  4010c6:	4642      	mov	r2, r8
  4010c8:	2b6c      	cmp	r3, #108	; 0x6c
  4010ca:	bf03      	ittte	eq
  4010cc:	f108 0801 	addeq.w	r8, r8, #1
  4010d0:	f04a 0a20 	orreq.w	sl, sl, #32
  4010d4:	7853      	ldrbeq	r3, [r2, #1]
  4010d6:	f04a 0a10 	orrne.w	sl, sl, #16
  4010da:	e5d0      	b.n	400c7e <_vfiprintf_r+0xda>
  4010dc:	f01a 0f20 	tst.w	sl, #32
  4010e0:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4010e4:	f000 82f8 	beq.w	4016d8 <_vfiprintf_r+0xb34>
  4010e8:	9c08      	ldr	r4, [sp, #32]
  4010ea:	6821      	ldr	r1, [r4, #0]
  4010ec:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4010ee:	17e5      	asrs	r5, r4, #31
  4010f0:	462b      	mov	r3, r5
  4010f2:	9d08      	ldr	r5, [sp, #32]
  4010f4:	4622      	mov	r2, r4
  4010f6:	3504      	adds	r5, #4
  4010f8:	9508      	str	r5, [sp, #32]
  4010fa:	e9c1 2300 	strd	r2, r3, [r1]
  4010fe:	e584      	b.n	400c0a <_vfiprintf_r+0x66>
  401100:	9c08      	ldr	r4, [sp, #32]
  401102:	9004      	str	r0, [sp, #16]
  401104:	6827      	ldr	r7, [r4, #0]
  401106:	46ac      	mov	ip, r5
  401108:	f04f 0500 	mov.w	r5, #0
  40110c:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  401110:	3404      	adds	r4, #4
  401112:	2f00      	cmp	r7, #0
  401114:	f000 8334 	beq.w	401780 <_vfiprintf_r+0xbdc>
  401118:	f1bc 0f00 	cmp.w	ip, #0
  40111c:	4638      	mov	r0, r7
  40111e:	f2c0 8308 	blt.w	401732 <_vfiprintf_r+0xb8e>
  401122:	4662      	mov	r2, ip
  401124:	2100      	movs	r1, #0
  401126:	f8cd c004 	str.w	ip, [sp, #4]
  40112a:	f001 fbb9 	bl	4028a0 <memchr>
  40112e:	f8dd c004 	ldr.w	ip, [sp, #4]
  401132:	2800      	cmp	r0, #0
  401134:	f000 833c 	beq.w	4017b0 <_vfiprintf_r+0xc0c>
  401138:	1bc0      	subs	r0, r0, r7
  40113a:	4560      	cmp	r0, ip
  40113c:	bfa8      	it	ge
  40113e:	4660      	movge	r0, ip
  401140:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  401144:	9005      	str	r0, [sp, #20]
  401146:	9408      	str	r4, [sp, #32]
  401148:	9507      	str	r5, [sp, #28]
  40114a:	f04f 0c00 	mov.w	ip, #0
  40114e:	e65d      	b.n	400e0c <_vfiprintf_r+0x268>
  401150:	00403930 	.word	0x00403930
  401154:	004038f0 	.word	0x004038f0
  401158:	9a08      	ldr	r2, [sp, #32]
  40115a:	9004      	str	r0, [sp, #16]
  40115c:	2330      	movs	r3, #48	; 0x30
  40115e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
  401162:	f102 0b04 	add.w	fp, r2, #4
  401166:	2378      	movs	r3, #120	; 0x78
  401168:	48af      	ldr	r0, [pc, #700]	; (401428 <_vfiprintf_r+0x884>)
  40116a:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  40116e:	46ac      	mov	ip, r5
  401170:	6814      	ldr	r4, [r2, #0]
  401172:	f8cd b020 	str.w	fp, [sp, #32]
  401176:	f04a 0a02 	orr.w	sl, sl, #2
  40117a:	2500      	movs	r5, #0
  40117c:	900a      	str	r0, [sp, #40]	; 0x28
  40117e:	2302      	movs	r3, #2
  401180:	e621      	b.n	400dc6 <_vfiprintf_r+0x222>
  401182:	f04a 0a20 	orr.w	sl, sl, #32
  401186:	f898 3000 	ldrb.w	r3, [r8]
  40118a:	e578      	b.n	400c7e <_vfiprintf_r+0xda>
  40118c:	f8dd b020 	ldr.w	fp, [sp, #32]
  401190:	f8db 0000 	ldr.w	r0, [fp]
  401194:	2800      	cmp	r0, #0
  401196:	f10b 0304 	add.w	r3, fp, #4
  40119a:	f6ff adfb 	blt.w	400d94 <_vfiprintf_r+0x1f0>
  40119e:	9308      	str	r3, [sp, #32]
  4011a0:	f898 3000 	ldrb.w	r3, [r8]
  4011a4:	e56b      	b.n	400c7e <_vfiprintf_r+0xda>
  4011a6:	f898 3000 	ldrb.w	r3, [r8]
  4011aa:	212b      	movs	r1, #43	; 0x2b
  4011ac:	e567      	b.n	400c7e <_vfiprintf_r+0xda>
  4011ae:	f898 3000 	ldrb.w	r3, [r8]
  4011b2:	2b2a      	cmp	r3, #42	; 0x2a
  4011b4:	f108 0401 	add.w	r4, r8, #1
  4011b8:	f000 8309 	beq.w	4017ce <_vfiprintf_r+0xc2a>
  4011bc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4011c0:	2a09      	cmp	r2, #9
  4011c2:	bf98      	it	ls
  4011c4:	2500      	movls	r5, #0
  4011c6:	f200 82fe 	bhi.w	4017c6 <_vfiprintf_r+0xc22>
  4011ca:	f814 3b01 	ldrb.w	r3, [r4], #1
  4011ce:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4011d2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  4011d6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  4011da:	2a09      	cmp	r2, #9
  4011dc:	d9f5      	bls.n	4011ca <_vfiprintf_r+0x626>
  4011de:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  4011e2:	46a0      	mov	r8, r4
  4011e4:	e54d      	b.n	400c82 <_vfiprintf_r+0xde>
  4011e6:	4c90      	ldr	r4, [pc, #576]	; (401428 <_vfiprintf_r+0x884>)
  4011e8:	9004      	str	r0, [sp, #16]
  4011ea:	f01a 0f20 	tst.w	sl, #32
  4011ee:	46ac      	mov	ip, r5
  4011f0:	940a      	str	r4, [sp, #40]	; 0x28
  4011f2:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4011f6:	f47f af12 	bne.w	40101e <_vfiprintf_r+0x47a>
  4011fa:	f01a 0f10 	tst.w	sl, #16
  4011fe:	f040 81e9 	bne.w	4015d4 <_vfiprintf_r+0xa30>
  401202:	f01a 0f40 	tst.w	sl, #64	; 0x40
  401206:	f000 81e5 	beq.w	4015d4 <_vfiprintf_r+0xa30>
  40120a:	f8dd b020 	ldr.w	fp, [sp, #32]
  40120e:	f8bb 4000 	ldrh.w	r4, [fp]
  401212:	f10b 0b04 	add.w	fp, fp, #4
  401216:	2500      	movs	r5, #0
  401218:	f8cd b020 	str.w	fp, [sp, #32]
  40121c:	e709      	b.n	401032 <_vfiprintf_r+0x48e>
  40121e:	f898 3000 	ldrb.w	r3, [r8]
  401222:	2900      	cmp	r1, #0
  401224:	f47f ad2b 	bne.w	400c7e <_vfiprintf_r+0xda>
  401228:	2120      	movs	r1, #32
  40122a:	e528      	b.n	400c7e <_vfiprintf_r+0xda>
  40122c:	f04a 0a01 	orr.w	sl, sl, #1
  401230:	f898 3000 	ldrb.w	r3, [r8]
  401234:	e523      	b.n	400c7e <_vfiprintf_r+0xda>
  401236:	9004      	str	r0, [sp, #16]
  401238:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  40123c:	2b00      	cmp	r3, #0
  40123e:	f000 80f9 	beq.w	401434 <_vfiprintf_r+0x890>
  401242:	2501      	movs	r5, #1
  401244:	f04f 0b00 	mov.w	fp, #0
  401248:	9503      	str	r5, [sp, #12]
  40124a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  40124e:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  401252:	9505      	str	r5, [sp, #20]
  401254:	af16      	add	r7, sp, #88	; 0x58
  401256:	e710      	b.n	40107a <_vfiprintf_r+0x4d6>
  401258:	9806      	ldr	r0, [sp, #24]
  40125a:	9902      	ldr	r1, [sp, #8]
  40125c:	aa13      	add	r2, sp, #76	; 0x4c
  40125e:	f7ff fc65 	bl	400b2c <__sprint_r.part.0>
  401262:	2800      	cmp	r0, #0
  401264:	f040 80ed 	bne.w	401442 <_vfiprintf_r+0x89e>
  401268:	9814      	ldr	r0, [sp, #80]	; 0x50
  40126a:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40126c:	1c43      	adds	r3, r0, #1
  40126e:	46cc      	mov	ip, r9
  401270:	e602      	b.n	400e78 <_vfiprintf_r+0x2d4>
  401272:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401274:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401276:	1c59      	adds	r1, r3, #1
  401278:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
  40127c:	b168      	cbz	r0, 40129a <_vfiprintf_r+0x6f6>
  40127e:	3201      	adds	r2, #1
  401280:	f10d 0047 	add.w	r0, sp, #71	; 0x47
  401284:	2301      	movs	r3, #1
  401286:	2907      	cmp	r1, #7
  401288:	9215      	str	r2, [sp, #84]	; 0x54
  40128a:	9114      	str	r1, [sp, #80]	; 0x50
  40128c:	e886 0009 	stmia.w	r6, {r0, r3}
  401290:	f300 8160 	bgt.w	401554 <_vfiprintf_r+0x9b0>
  401294:	460b      	mov	r3, r1
  401296:	3608      	adds	r6, #8
  401298:	3101      	adds	r1, #1
  40129a:	9c07      	ldr	r4, [sp, #28]
  40129c:	b164      	cbz	r4, 4012b8 <_vfiprintf_r+0x714>
  40129e:	3202      	adds	r2, #2
  4012a0:	a812      	add	r0, sp, #72	; 0x48
  4012a2:	2302      	movs	r3, #2
  4012a4:	2907      	cmp	r1, #7
  4012a6:	9215      	str	r2, [sp, #84]	; 0x54
  4012a8:	9114      	str	r1, [sp, #80]	; 0x50
  4012aa:	e886 0009 	stmia.w	r6, {r0, r3}
  4012ae:	f300 8157 	bgt.w	401560 <_vfiprintf_r+0x9bc>
  4012b2:	460b      	mov	r3, r1
  4012b4:	3608      	adds	r6, #8
  4012b6:	3101      	adds	r1, #1
  4012b8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4012ba:	2d80      	cmp	r5, #128	; 0x80
  4012bc:	f000 8101 	beq.w	4014c2 <_vfiprintf_r+0x91e>
  4012c0:	9d05      	ldr	r5, [sp, #20]
  4012c2:	ebc5 040c 	rsb	r4, r5, ip
  4012c6:	2c00      	cmp	r4, #0
  4012c8:	dd2f      	ble.n	40132a <_vfiprintf_r+0x786>
  4012ca:	2c10      	cmp	r4, #16
  4012cc:	4d57      	ldr	r5, [pc, #348]	; (40142c <_vfiprintf_r+0x888>)
  4012ce:	dd22      	ble.n	401316 <_vfiprintf_r+0x772>
  4012d0:	4630      	mov	r0, r6
  4012d2:	f04f 0b10 	mov.w	fp, #16
  4012d6:	462e      	mov	r6, r5
  4012d8:	4625      	mov	r5, r4
  4012da:	9c06      	ldr	r4, [sp, #24]
  4012dc:	e006      	b.n	4012ec <_vfiprintf_r+0x748>
  4012de:	f103 0c02 	add.w	ip, r3, #2
  4012e2:	3008      	adds	r0, #8
  4012e4:	460b      	mov	r3, r1
  4012e6:	3d10      	subs	r5, #16
  4012e8:	2d10      	cmp	r5, #16
  4012ea:	dd10      	ble.n	40130e <_vfiprintf_r+0x76a>
  4012ec:	1c59      	adds	r1, r3, #1
  4012ee:	3210      	adds	r2, #16
  4012f0:	2907      	cmp	r1, #7
  4012f2:	9215      	str	r2, [sp, #84]	; 0x54
  4012f4:	e880 0840 	stmia.w	r0, {r6, fp}
  4012f8:	9114      	str	r1, [sp, #80]	; 0x50
  4012fa:	ddf0      	ble.n	4012de <_vfiprintf_r+0x73a>
  4012fc:	2a00      	cmp	r2, #0
  4012fe:	d163      	bne.n	4013c8 <_vfiprintf_r+0x824>
  401300:	3d10      	subs	r5, #16
  401302:	2d10      	cmp	r5, #16
  401304:	f04f 0c01 	mov.w	ip, #1
  401308:	4613      	mov	r3, r2
  40130a:	4648      	mov	r0, r9
  40130c:	dcee      	bgt.n	4012ec <_vfiprintf_r+0x748>
  40130e:	462c      	mov	r4, r5
  401310:	4661      	mov	r1, ip
  401312:	4635      	mov	r5, r6
  401314:	4606      	mov	r6, r0
  401316:	4422      	add	r2, r4
  401318:	2907      	cmp	r1, #7
  40131a:	9215      	str	r2, [sp, #84]	; 0x54
  40131c:	6035      	str	r5, [r6, #0]
  40131e:	6074      	str	r4, [r6, #4]
  401320:	9114      	str	r1, [sp, #80]	; 0x50
  401322:	f300 80c1 	bgt.w	4014a8 <_vfiprintf_r+0x904>
  401326:	3608      	adds	r6, #8
  401328:	3101      	adds	r1, #1
  40132a:	9d05      	ldr	r5, [sp, #20]
  40132c:	6037      	str	r7, [r6, #0]
  40132e:	442a      	add	r2, r5
  401330:	2907      	cmp	r1, #7
  401332:	9215      	str	r2, [sp, #84]	; 0x54
  401334:	6075      	str	r5, [r6, #4]
  401336:	9114      	str	r1, [sp, #80]	; 0x50
  401338:	f340 80c1 	ble.w	4014be <_vfiprintf_r+0x91a>
  40133c:	2a00      	cmp	r2, #0
  40133e:	f040 8130 	bne.w	4015a2 <_vfiprintf_r+0x9fe>
  401342:	9214      	str	r2, [sp, #80]	; 0x50
  401344:	464e      	mov	r6, r9
  401346:	f01a 0f04 	tst.w	sl, #4
  40134a:	f000 808b 	beq.w	401464 <_vfiprintf_r+0x8c0>
  40134e:	9d04      	ldr	r5, [sp, #16]
  401350:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401354:	ebcb 0405 	rsb	r4, fp, r5
  401358:	2c00      	cmp	r4, #0
  40135a:	f340 8083 	ble.w	401464 <_vfiprintf_r+0x8c0>
  40135e:	2c10      	cmp	r4, #16
  401360:	f340 8222 	ble.w	4017a8 <_vfiprintf_r+0xc04>
  401364:	9914      	ldr	r1, [sp, #80]	; 0x50
  401366:	4d32      	ldr	r5, [pc, #200]	; (401430 <_vfiprintf_r+0x88c>)
  401368:	f8dd a018 	ldr.w	sl, [sp, #24]
  40136c:	f8dd b008 	ldr.w	fp, [sp, #8]
  401370:	2710      	movs	r7, #16
  401372:	e005      	b.n	401380 <_vfiprintf_r+0x7dc>
  401374:	1c88      	adds	r0, r1, #2
  401376:	3608      	adds	r6, #8
  401378:	4619      	mov	r1, r3
  40137a:	3c10      	subs	r4, #16
  40137c:	2c10      	cmp	r4, #16
  40137e:	dd10      	ble.n	4013a2 <_vfiprintf_r+0x7fe>
  401380:	1c4b      	adds	r3, r1, #1
  401382:	3210      	adds	r2, #16
  401384:	2b07      	cmp	r3, #7
  401386:	9215      	str	r2, [sp, #84]	; 0x54
  401388:	e886 00a0 	stmia.w	r6, {r5, r7}
  40138c:	9314      	str	r3, [sp, #80]	; 0x50
  40138e:	ddf1      	ble.n	401374 <_vfiprintf_r+0x7d0>
  401390:	2a00      	cmp	r2, #0
  401392:	d17d      	bne.n	401490 <_vfiprintf_r+0x8ec>
  401394:	3c10      	subs	r4, #16
  401396:	2c10      	cmp	r4, #16
  401398:	f04f 0001 	mov.w	r0, #1
  40139c:	4611      	mov	r1, r2
  40139e:	464e      	mov	r6, r9
  4013a0:	dcee      	bgt.n	401380 <_vfiprintf_r+0x7dc>
  4013a2:	4422      	add	r2, r4
  4013a4:	2807      	cmp	r0, #7
  4013a6:	9215      	str	r2, [sp, #84]	; 0x54
  4013a8:	6035      	str	r5, [r6, #0]
  4013aa:	6074      	str	r4, [r6, #4]
  4013ac:	9014      	str	r0, [sp, #80]	; 0x50
  4013ae:	dd59      	ble.n	401464 <_vfiprintf_r+0x8c0>
  4013b0:	2a00      	cmp	r2, #0
  4013b2:	d14f      	bne.n	401454 <_vfiprintf_r+0x8b0>
  4013b4:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4013b6:	f8dd b00c 	ldr.w	fp, [sp, #12]
  4013ba:	9d04      	ldr	r5, [sp, #16]
  4013bc:	45ab      	cmp	fp, r5
  4013be:	bfac      	ite	ge
  4013c0:	445c      	addge	r4, fp
  4013c2:	1964      	addlt	r4, r4, r5
  4013c4:	9409      	str	r4, [sp, #36]	; 0x24
  4013c6:	e05e      	b.n	401486 <_vfiprintf_r+0x8e2>
  4013c8:	4620      	mov	r0, r4
  4013ca:	9902      	ldr	r1, [sp, #8]
  4013cc:	aa13      	add	r2, sp, #76	; 0x4c
  4013ce:	f7ff fbad 	bl	400b2c <__sprint_r.part.0>
  4013d2:	2800      	cmp	r0, #0
  4013d4:	d135      	bne.n	401442 <_vfiprintf_r+0x89e>
  4013d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4013d8:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4013da:	f103 0c01 	add.w	ip, r3, #1
  4013de:	4648      	mov	r0, r9
  4013e0:	e781      	b.n	4012e6 <_vfiprintf_r+0x742>
  4013e2:	08e0      	lsrs	r0, r4, #3
  4013e4:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
  4013e8:	f004 0207 	and.w	r2, r4, #7
  4013ec:	08e9      	lsrs	r1, r5, #3
  4013ee:	3230      	adds	r2, #48	; 0x30
  4013f0:	ea50 0b01 	orrs.w	fp, r0, r1
  4013f4:	461f      	mov	r7, r3
  4013f6:	701a      	strb	r2, [r3, #0]
  4013f8:	4604      	mov	r4, r0
  4013fa:	460d      	mov	r5, r1
  4013fc:	f103 33ff 	add.w	r3, r3, #4294967295
  401400:	d1ef      	bne.n	4013e2 <_vfiprintf_r+0x83e>
  401402:	f01a 0f01 	tst.w	sl, #1
  401406:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  40140a:	4639      	mov	r1, r7
  40140c:	f000 80b9 	beq.w	401582 <_vfiprintf_r+0x9de>
  401410:	2a30      	cmp	r2, #48	; 0x30
  401412:	f43f acf8 	beq.w	400e06 <_vfiprintf_r+0x262>
  401416:	461f      	mov	r7, r3
  401418:	ebc7 0509 	rsb	r5, r7, r9
  40141c:	2330      	movs	r3, #48	; 0x30
  40141e:	9505      	str	r5, [sp, #20]
  401420:	f801 3c01 	strb.w	r3, [r1, #-1]
  401424:	e4f2      	b.n	400e0c <_vfiprintf_r+0x268>
  401426:	bf00      	nop
  401428:	00403904 	.word	0x00403904
  40142c:	00403920 	.word	0x00403920
  401430:	00403930 	.word	0x00403930
  401434:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401436:	b123      	cbz	r3, 401442 <_vfiprintf_r+0x89e>
  401438:	9806      	ldr	r0, [sp, #24]
  40143a:	9902      	ldr	r1, [sp, #8]
  40143c:	aa13      	add	r2, sp, #76	; 0x4c
  40143e:	f7ff fb75 	bl	400b2c <__sprint_r.part.0>
  401442:	9c02      	ldr	r4, [sp, #8]
  401444:	89a3      	ldrh	r3, [r4, #12]
  401446:	065b      	lsls	r3, r3, #25
  401448:	f53f ac9c 	bmi.w	400d84 <_vfiprintf_r+0x1e0>
  40144c:	9809      	ldr	r0, [sp, #36]	; 0x24
  40144e:	b031      	add	sp, #196	; 0xc4
  401450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401454:	9806      	ldr	r0, [sp, #24]
  401456:	9902      	ldr	r1, [sp, #8]
  401458:	aa13      	add	r2, sp, #76	; 0x4c
  40145a:	f7ff fb67 	bl	400b2c <__sprint_r.part.0>
  40145e:	2800      	cmp	r0, #0
  401460:	d1ef      	bne.n	401442 <_vfiprintf_r+0x89e>
  401462:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401464:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401466:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40146a:	9d04      	ldr	r5, [sp, #16]
  40146c:	45ab      	cmp	fp, r5
  40146e:	bfac      	ite	ge
  401470:	445c      	addge	r4, fp
  401472:	1964      	addlt	r4, r4, r5
  401474:	9409      	str	r4, [sp, #36]	; 0x24
  401476:	b132      	cbz	r2, 401486 <_vfiprintf_r+0x8e2>
  401478:	9806      	ldr	r0, [sp, #24]
  40147a:	9902      	ldr	r1, [sp, #8]
  40147c:	aa13      	add	r2, sp, #76	; 0x4c
  40147e:	f7ff fb55 	bl	400b2c <__sprint_r.part.0>
  401482:	2800      	cmp	r0, #0
  401484:	d1dd      	bne.n	401442 <_vfiprintf_r+0x89e>
  401486:	2000      	movs	r0, #0
  401488:	9014      	str	r0, [sp, #80]	; 0x50
  40148a:	464e      	mov	r6, r9
  40148c:	f7ff bbbd 	b.w	400c0a <_vfiprintf_r+0x66>
  401490:	4650      	mov	r0, sl
  401492:	4659      	mov	r1, fp
  401494:	aa13      	add	r2, sp, #76	; 0x4c
  401496:	f7ff fb49 	bl	400b2c <__sprint_r.part.0>
  40149a:	2800      	cmp	r0, #0
  40149c:	d1d1      	bne.n	401442 <_vfiprintf_r+0x89e>
  40149e:	9914      	ldr	r1, [sp, #80]	; 0x50
  4014a0:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4014a2:	1c48      	adds	r0, r1, #1
  4014a4:	464e      	mov	r6, r9
  4014a6:	e768      	b.n	40137a <_vfiprintf_r+0x7d6>
  4014a8:	2a00      	cmp	r2, #0
  4014aa:	f040 80fa 	bne.w	4016a2 <_vfiprintf_r+0xafe>
  4014ae:	9c05      	ldr	r4, [sp, #20]
  4014b0:	9720      	str	r7, [sp, #128]	; 0x80
  4014b2:	2301      	movs	r3, #1
  4014b4:	9421      	str	r4, [sp, #132]	; 0x84
  4014b6:	9415      	str	r4, [sp, #84]	; 0x54
  4014b8:	4622      	mov	r2, r4
  4014ba:	9314      	str	r3, [sp, #80]	; 0x50
  4014bc:	464e      	mov	r6, r9
  4014be:	3608      	adds	r6, #8
  4014c0:	e741      	b.n	401346 <_vfiprintf_r+0x7a2>
  4014c2:	9d04      	ldr	r5, [sp, #16]
  4014c4:	f8dd b00c 	ldr.w	fp, [sp, #12]
  4014c8:	ebcb 0405 	rsb	r4, fp, r5
  4014cc:	2c00      	cmp	r4, #0
  4014ce:	f77f aef7 	ble.w	4012c0 <_vfiprintf_r+0x71c>
  4014d2:	2c10      	cmp	r4, #16
  4014d4:	4da8      	ldr	r5, [pc, #672]	; (401778 <_vfiprintf_r+0xbd4>)
  4014d6:	f340 8174 	ble.w	4017c2 <_vfiprintf_r+0xc1e>
  4014da:	4629      	mov	r1, r5
  4014dc:	f04f 0b10 	mov.w	fp, #16
  4014e0:	4625      	mov	r5, r4
  4014e2:	4664      	mov	r4, ip
  4014e4:	46b4      	mov	ip, r6
  4014e6:	460e      	mov	r6, r1
  4014e8:	e006      	b.n	4014f8 <_vfiprintf_r+0x954>
  4014ea:	1c98      	adds	r0, r3, #2
  4014ec:	f10c 0c08 	add.w	ip, ip, #8
  4014f0:	460b      	mov	r3, r1
  4014f2:	3d10      	subs	r5, #16
  4014f4:	2d10      	cmp	r5, #16
  4014f6:	dd0f      	ble.n	401518 <_vfiprintf_r+0x974>
  4014f8:	1c59      	adds	r1, r3, #1
  4014fa:	3210      	adds	r2, #16
  4014fc:	2907      	cmp	r1, #7
  4014fe:	9215      	str	r2, [sp, #84]	; 0x54
  401500:	e88c 0840 	stmia.w	ip, {r6, fp}
  401504:	9114      	str	r1, [sp, #80]	; 0x50
  401506:	ddf0      	ble.n	4014ea <_vfiprintf_r+0x946>
  401508:	b9ba      	cbnz	r2, 40153a <_vfiprintf_r+0x996>
  40150a:	3d10      	subs	r5, #16
  40150c:	2d10      	cmp	r5, #16
  40150e:	f04f 0001 	mov.w	r0, #1
  401512:	4613      	mov	r3, r2
  401514:	46cc      	mov	ip, r9
  401516:	dcef      	bgt.n	4014f8 <_vfiprintf_r+0x954>
  401518:	4633      	mov	r3, r6
  40151a:	4666      	mov	r6, ip
  40151c:	46a4      	mov	ip, r4
  40151e:	462c      	mov	r4, r5
  401520:	461d      	mov	r5, r3
  401522:	4422      	add	r2, r4
  401524:	2807      	cmp	r0, #7
  401526:	9215      	str	r2, [sp, #84]	; 0x54
  401528:	6035      	str	r5, [r6, #0]
  40152a:	6074      	str	r4, [r6, #4]
  40152c:	9014      	str	r0, [sp, #80]	; 0x50
  40152e:	f300 80b2 	bgt.w	401696 <_vfiprintf_r+0xaf2>
  401532:	3608      	adds	r6, #8
  401534:	1c41      	adds	r1, r0, #1
  401536:	4603      	mov	r3, r0
  401538:	e6c2      	b.n	4012c0 <_vfiprintf_r+0x71c>
  40153a:	9806      	ldr	r0, [sp, #24]
  40153c:	9902      	ldr	r1, [sp, #8]
  40153e:	aa13      	add	r2, sp, #76	; 0x4c
  401540:	f7ff faf4 	bl	400b2c <__sprint_r.part.0>
  401544:	2800      	cmp	r0, #0
  401546:	f47f af7c 	bne.w	401442 <_vfiprintf_r+0x89e>
  40154a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40154c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40154e:	1c58      	adds	r0, r3, #1
  401550:	46cc      	mov	ip, r9
  401552:	e7ce      	b.n	4014f2 <_vfiprintf_r+0x94e>
  401554:	2a00      	cmp	r2, #0
  401556:	d17c      	bne.n	401652 <_vfiprintf_r+0xaae>
  401558:	4619      	mov	r1, r3
  40155a:	464e      	mov	r6, r9
  40155c:	4613      	mov	r3, r2
  40155e:	e69c      	b.n	40129a <_vfiprintf_r+0x6f6>
  401560:	2a00      	cmp	r2, #0
  401562:	f040 8087 	bne.w	401674 <_vfiprintf_r+0xad0>
  401566:	2101      	movs	r1, #1
  401568:	4613      	mov	r3, r2
  40156a:	464e      	mov	r6, r9
  40156c:	e6a4      	b.n	4012b8 <_vfiprintf_r+0x714>
  40156e:	464f      	mov	r7, r9
  401570:	e44c      	b.n	400e0c <_vfiprintf_r+0x268>
  401572:	2d00      	cmp	r5, #0
  401574:	bf08      	it	eq
  401576:	2c0a      	cmpeq	r4, #10
  401578:	d249      	bcs.n	40160e <_vfiprintf_r+0xa6a>
  40157a:	af30      	add	r7, sp, #192	; 0xc0
  40157c:	3430      	adds	r4, #48	; 0x30
  40157e:	f807 4d41 	strb.w	r4, [r7, #-65]!
  401582:	ebc7 0309 	rsb	r3, r7, r9
  401586:	9305      	str	r3, [sp, #20]
  401588:	e440      	b.n	400e0c <_vfiprintf_r+0x268>
  40158a:	2302      	movs	r3, #2
  40158c:	e41b      	b.n	400dc6 <_vfiprintf_r+0x222>
  40158e:	2a00      	cmp	r2, #0
  401590:	f040 80b2 	bne.w	4016f8 <_vfiprintf_r+0xb54>
  401594:	4613      	mov	r3, r2
  401596:	2101      	movs	r1, #1
  401598:	464e      	mov	r6, r9
  40159a:	e66d      	b.n	401278 <_vfiprintf_r+0x6d4>
  40159c:	4644      	mov	r4, r8
  40159e:	f7ff bb5c 	b.w	400c5a <_vfiprintf_r+0xb6>
  4015a2:	9806      	ldr	r0, [sp, #24]
  4015a4:	9902      	ldr	r1, [sp, #8]
  4015a6:	aa13      	add	r2, sp, #76	; 0x4c
  4015a8:	f7ff fac0 	bl	400b2c <__sprint_r.part.0>
  4015ac:	2800      	cmp	r0, #0
  4015ae:	f47f af48 	bne.w	401442 <_vfiprintf_r+0x89e>
  4015b2:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4015b4:	464e      	mov	r6, r9
  4015b6:	e6c6      	b.n	401346 <_vfiprintf_r+0x7a2>
  4015b8:	9d08      	ldr	r5, [sp, #32]
  4015ba:	682c      	ldr	r4, [r5, #0]
  4015bc:	3504      	adds	r5, #4
  4015be:	9508      	str	r5, [sp, #32]
  4015c0:	2500      	movs	r5, #0
  4015c2:	e400      	b.n	400dc6 <_vfiprintf_r+0x222>
  4015c4:	9d08      	ldr	r5, [sp, #32]
  4015c6:	682c      	ldr	r4, [r5, #0]
  4015c8:	3504      	adds	r5, #4
  4015ca:	9508      	str	r5, [sp, #32]
  4015cc:	2301      	movs	r3, #1
  4015ce:	2500      	movs	r5, #0
  4015d0:	f7ff bbf9 	b.w	400dc6 <_vfiprintf_r+0x222>
  4015d4:	9d08      	ldr	r5, [sp, #32]
  4015d6:	682c      	ldr	r4, [r5, #0]
  4015d8:	3504      	adds	r5, #4
  4015da:	9508      	str	r5, [sp, #32]
  4015dc:	2500      	movs	r5, #0
  4015de:	e528      	b.n	401032 <_vfiprintf_r+0x48e>
  4015e0:	9d08      	ldr	r5, [sp, #32]
  4015e2:	f8dd b020 	ldr.w	fp, [sp, #32]
  4015e6:	682c      	ldr	r4, [r5, #0]
  4015e8:	f10b 0b04 	add.w	fp, fp, #4
  4015ec:	17e5      	asrs	r5, r4, #31
  4015ee:	f8cd b020 	str.w	fp, [sp, #32]
  4015f2:	4622      	mov	r2, r4
  4015f4:	462b      	mov	r3, r5
  4015f6:	e48f      	b.n	400f18 <_vfiprintf_r+0x374>
  4015f8:	9806      	ldr	r0, [sp, #24]
  4015fa:	9902      	ldr	r1, [sp, #8]
  4015fc:	aa13      	add	r2, sp, #76	; 0x4c
  4015fe:	f7ff fa95 	bl	400b2c <__sprint_r.part.0>
  401602:	2800      	cmp	r0, #0
  401604:	f47f af1d 	bne.w	401442 <_vfiprintf_r+0x89e>
  401608:	464e      	mov	r6, r9
  40160a:	f7ff bb9b 	b.w	400d44 <_vfiprintf_r+0x1a0>
  40160e:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
  401612:	9603      	str	r6, [sp, #12]
  401614:	465e      	mov	r6, fp
  401616:	46e3      	mov	fp, ip
  401618:	4620      	mov	r0, r4
  40161a:	4629      	mov	r1, r5
  40161c:	220a      	movs	r2, #10
  40161e:	2300      	movs	r3, #0
  401620:	f001 fe88 	bl	403334 <__aeabi_uldivmod>
  401624:	3230      	adds	r2, #48	; 0x30
  401626:	7032      	strb	r2, [r6, #0]
  401628:	4620      	mov	r0, r4
  40162a:	4629      	mov	r1, r5
  40162c:	220a      	movs	r2, #10
  40162e:	2300      	movs	r3, #0
  401630:	f001 fe80 	bl	403334 <__aeabi_uldivmod>
  401634:	4604      	mov	r4, r0
  401636:	460d      	mov	r5, r1
  401638:	ea54 0005 	orrs.w	r0, r4, r5
  40163c:	4637      	mov	r7, r6
  40163e:	f106 36ff 	add.w	r6, r6, #4294967295
  401642:	d1e9      	bne.n	401618 <_vfiprintf_r+0xa74>
  401644:	ebc7 0309 	rsb	r3, r7, r9
  401648:	46dc      	mov	ip, fp
  40164a:	9e03      	ldr	r6, [sp, #12]
  40164c:	9305      	str	r3, [sp, #20]
  40164e:	f7ff bbdd 	b.w	400e0c <_vfiprintf_r+0x268>
  401652:	9806      	ldr	r0, [sp, #24]
  401654:	9902      	ldr	r1, [sp, #8]
  401656:	f8cd c004 	str.w	ip, [sp, #4]
  40165a:	aa13      	add	r2, sp, #76	; 0x4c
  40165c:	f7ff fa66 	bl	400b2c <__sprint_r.part.0>
  401660:	f8dd c004 	ldr.w	ip, [sp, #4]
  401664:	2800      	cmp	r0, #0
  401666:	f47f aeec 	bne.w	401442 <_vfiprintf_r+0x89e>
  40166a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40166c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40166e:	1c59      	adds	r1, r3, #1
  401670:	464e      	mov	r6, r9
  401672:	e612      	b.n	40129a <_vfiprintf_r+0x6f6>
  401674:	9806      	ldr	r0, [sp, #24]
  401676:	9902      	ldr	r1, [sp, #8]
  401678:	f8cd c004 	str.w	ip, [sp, #4]
  40167c:	aa13      	add	r2, sp, #76	; 0x4c
  40167e:	f7ff fa55 	bl	400b2c <__sprint_r.part.0>
  401682:	f8dd c004 	ldr.w	ip, [sp, #4]
  401686:	2800      	cmp	r0, #0
  401688:	f47f aedb 	bne.w	401442 <_vfiprintf_r+0x89e>
  40168c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40168e:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401690:	1c59      	adds	r1, r3, #1
  401692:	464e      	mov	r6, r9
  401694:	e610      	b.n	4012b8 <_vfiprintf_r+0x714>
  401696:	2a00      	cmp	r2, #0
  401698:	d156      	bne.n	401748 <_vfiprintf_r+0xba4>
  40169a:	2101      	movs	r1, #1
  40169c:	4613      	mov	r3, r2
  40169e:	464e      	mov	r6, r9
  4016a0:	e60e      	b.n	4012c0 <_vfiprintf_r+0x71c>
  4016a2:	9806      	ldr	r0, [sp, #24]
  4016a4:	9902      	ldr	r1, [sp, #8]
  4016a6:	aa13      	add	r2, sp, #76	; 0x4c
  4016a8:	f7ff fa40 	bl	400b2c <__sprint_r.part.0>
  4016ac:	2800      	cmp	r0, #0
  4016ae:	f47f aec8 	bne.w	401442 <_vfiprintf_r+0x89e>
  4016b2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4016b4:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4016b6:	3101      	adds	r1, #1
  4016b8:	464e      	mov	r6, r9
  4016ba:	e636      	b.n	40132a <_vfiprintf_r+0x786>
  4016bc:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
  4016c0:	4264      	negs	r4, r4
  4016c2:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4016c6:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  4016ca:	f8cd b01c 	str.w	fp, [sp, #28]
  4016ce:	f8cd c014 	str.w	ip, [sp, #20]
  4016d2:	2301      	movs	r3, #1
  4016d4:	f7ff bb7f 	b.w	400dd6 <_vfiprintf_r+0x232>
  4016d8:	f01a 0f10 	tst.w	sl, #16
  4016dc:	d11d      	bne.n	40171a <_vfiprintf_r+0xb76>
  4016de:	f01a 0f40 	tst.w	sl, #64	; 0x40
  4016e2:	d059      	beq.n	401798 <_vfiprintf_r+0xbf4>
  4016e4:	9d08      	ldr	r5, [sp, #32]
  4016e6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  4016ea:	682b      	ldr	r3, [r5, #0]
  4016ec:	3504      	adds	r5, #4
  4016ee:	9508      	str	r5, [sp, #32]
  4016f0:	f8a3 b000 	strh.w	fp, [r3]
  4016f4:	f7ff ba89 	b.w	400c0a <_vfiprintf_r+0x66>
  4016f8:	9806      	ldr	r0, [sp, #24]
  4016fa:	9902      	ldr	r1, [sp, #8]
  4016fc:	f8cd c004 	str.w	ip, [sp, #4]
  401700:	aa13      	add	r2, sp, #76	; 0x4c
  401702:	f7ff fa13 	bl	400b2c <__sprint_r.part.0>
  401706:	f8dd c004 	ldr.w	ip, [sp, #4]
  40170a:	2800      	cmp	r0, #0
  40170c:	f47f ae99 	bne.w	401442 <_vfiprintf_r+0x89e>
  401710:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401712:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401714:	1c59      	adds	r1, r3, #1
  401716:	464e      	mov	r6, r9
  401718:	e5ae      	b.n	401278 <_vfiprintf_r+0x6d4>
  40171a:	f8dd b020 	ldr.w	fp, [sp, #32]
  40171e:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401720:	f8db 3000 	ldr.w	r3, [fp]
  401724:	f10b 0b04 	add.w	fp, fp, #4
  401728:	f8cd b020 	str.w	fp, [sp, #32]
  40172c:	601c      	str	r4, [r3, #0]
  40172e:	f7ff ba6c 	b.w	400c0a <_vfiprintf_r+0x66>
  401732:	9408      	str	r4, [sp, #32]
  401734:	f001 fc34 	bl	402fa0 <strlen>
  401738:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
  40173c:	9005      	str	r0, [sp, #20]
  40173e:	9407      	str	r4, [sp, #28]
  401740:	f04f 0c00 	mov.w	ip, #0
  401744:	f7ff bb62 	b.w	400e0c <_vfiprintf_r+0x268>
  401748:	9806      	ldr	r0, [sp, #24]
  40174a:	9902      	ldr	r1, [sp, #8]
  40174c:	f8cd c004 	str.w	ip, [sp, #4]
  401750:	aa13      	add	r2, sp, #76	; 0x4c
  401752:	f7ff f9eb 	bl	400b2c <__sprint_r.part.0>
  401756:	f8dd c004 	ldr.w	ip, [sp, #4]
  40175a:	2800      	cmp	r0, #0
  40175c:	f47f ae71 	bne.w	401442 <_vfiprintf_r+0x89e>
  401760:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401762:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401764:	1c59      	adds	r1, r3, #1
  401766:	464e      	mov	r6, r9
  401768:	e5aa      	b.n	4012c0 <_vfiprintf_r+0x71c>
  40176a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40176c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40176e:	4d03      	ldr	r5, [pc, #12]	; (40177c <_vfiprintf_r+0xbd8>)
  401770:	3301      	adds	r3, #1
  401772:	f7ff bb9b 	b.w	400eac <_vfiprintf_r+0x308>
  401776:	bf00      	nop
  401778:	00403920 	.word	0x00403920
  40177c:	00403930 	.word	0x00403930
  401780:	f1bc 0f06 	cmp.w	ip, #6
  401784:	bf34      	ite	cc
  401786:	4663      	movcc	r3, ip
  401788:	2306      	movcs	r3, #6
  40178a:	9408      	str	r4, [sp, #32]
  40178c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
  401790:	9305      	str	r3, [sp, #20]
  401792:	9403      	str	r4, [sp, #12]
  401794:	4f16      	ldr	r7, [pc, #88]	; (4017f0 <_vfiprintf_r+0xc4c>)
  401796:	e470      	b.n	40107a <_vfiprintf_r+0x4d6>
  401798:	9c08      	ldr	r4, [sp, #32]
  40179a:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40179c:	6823      	ldr	r3, [r4, #0]
  40179e:	3404      	adds	r4, #4
  4017a0:	9408      	str	r4, [sp, #32]
  4017a2:	601d      	str	r5, [r3, #0]
  4017a4:	f7ff ba31 	b.w	400c0a <_vfiprintf_r+0x66>
  4017a8:	9814      	ldr	r0, [sp, #80]	; 0x50
  4017aa:	4d12      	ldr	r5, [pc, #72]	; (4017f4 <_vfiprintf_r+0xc50>)
  4017ac:	3001      	adds	r0, #1
  4017ae:	e5f8      	b.n	4013a2 <_vfiprintf_r+0x7fe>
  4017b0:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  4017b4:	f8cd c014 	str.w	ip, [sp, #20]
  4017b8:	9507      	str	r5, [sp, #28]
  4017ba:	9408      	str	r4, [sp, #32]
  4017bc:	4684      	mov	ip, r0
  4017be:	f7ff bb25 	b.w	400e0c <_vfiprintf_r+0x268>
  4017c2:	4608      	mov	r0, r1
  4017c4:	e6ad      	b.n	401522 <_vfiprintf_r+0x97e>
  4017c6:	46a0      	mov	r8, r4
  4017c8:	2500      	movs	r5, #0
  4017ca:	f7ff ba5a 	b.w	400c82 <_vfiprintf_r+0xde>
  4017ce:	f8dd b020 	ldr.w	fp, [sp, #32]
  4017d2:	f898 3001 	ldrb.w	r3, [r8, #1]
  4017d6:	f8db 5000 	ldr.w	r5, [fp]
  4017da:	f10b 0204 	add.w	r2, fp, #4
  4017de:	2d00      	cmp	r5, #0
  4017e0:	9208      	str	r2, [sp, #32]
  4017e2:	46a0      	mov	r8, r4
  4017e4:	f6bf aa4b 	bge.w	400c7e <_vfiprintf_r+0xda>
  4017e8:	f04f 35ff 	mov.w	r5, #4294967295
  4017ec:	f7ff ba47 	b.w	400c7e <_vfiprintf_r+0xda>
  4017f0:	00403918 	.word	0x00403918
  4017f4:	00403930 	.word	0x00403930

004017f8 <__sbprintf>:
  4017f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4017fc:	460c      	mov	r4, r1
  4017fe:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  401802:	f8b1 900c 	ldrh.w	r9, [r1, #12]
  401806:	69e7      	ldr	r7, [r4, #28]
  401808:	6e49      	ldr	r1, [r1, #100]	; 0x64
  40180a:	f8b4 800e 	ldrh.w	r8, [r4, #14]
  40180e:	9119      	str	r1, [sp, #100]	; 0x64
  401810:	ad1a      	add	r5, sp, #104	; 0x68
  401812:	f44f 6680 	mov.w	r6, #1024	; 0x400
  401816:	f04f 0e00 	mov.w	lr, #0
  40181a:	9707      	str	r7, [sp, #28]
  40181c:	f029 0902 	bic.w	r9, r9, #2
  401820:	6a67      	ldr	r7, [r4, #36]	; 0x24
  401822:	9500      	str	r5, [sp, #0]
  401824:	4669      	mov	r1, sp
  401826:	9504      	str	r5, [sp, #16]
  401828:	9602      	str	r6, [sp, #8]
  40182a:	9605      	str	r6, [sp, #20]
  40182c:	f8ad 900c 	strh.w	r9, [sp, #12]
  401830:	f8ad 800e 	strh.w	r8, [sp, #14]
  401834:	9709      	str	r7, [sp, #36]	; 0x24
  401836:	f8cd e018 	str.w	lr, [sp, #24]
  40183a:	4606      	mov	r6, r0
  40183c:	f7ff f9b2 	bl	400ba4 <_vfiprintf_r>
  401840:	1e05      	subs	r5, r0, #0
  401842:	db07      	blt.n	401854 <__sbprintf+0x5c>
  401844:	4630      	mov	r0, r6
  401846:	4669      	mov	r1, sp
  401848:	f000 f92e 	bl	401aa8 <_fflush_r>
  40184c:	2800      	cmp	r0, #0
  40184e:	bf18      	it	ne
  401850:	f04f 35ff 	movne.w	r5, #4294967295
  401854:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401858:	065b      	lsls	r3, r3, #25
  40185a:	d503      	bpl.n	401864 <__sbprintf+0x6c>
  40185c:	89a3      	ldrh	r3, [r4, #12]
  40185e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401862:	81a3      	strh	r3, [r4, #12]
  401864:	4628      	mov	r0, r5
  401866:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  40186a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40186e:	bf00      	nop

00401870 <__swsetup_r>:
  401870:	4b2f      	ldr	r3, [pc, #188]	; (401930 <__swsetup_r+0xc0>)
  401872:	681b      	ldr	r3, [r3, #0]
  401874:	b570      	push	{r4, r5, r6, lr}
  401876:	4606      	mov	r6, r0
  401878:	460c      	mov	r4, r1
  40187a:	b113      	cbz	r3, 401882 <__swsetup_r+0x12>
  40187c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  40187e:	2a00      	cmp	r2, #0
  401880:	d036      	beq.n	4018f0 <__swsetup_r+0x80>
  401882:	89a5      	ldrh	r5, [r4, #12]
  401884:	b2ab      	uxth	r3, r5
  401886:	0719      	lsls	r1, r3, #28
  401888:	d50c      	bpl.n	4018a4 <__swsetup_r+0x34>
  40188a:	6922      	ldr	r2, [r4, #16]
  40188c:	b1aa      	cbz	r2, 4018ba <__swsetup_r+0x4a>
  40188e:	f013 0101 	ands.w	r1, r3, #1
  401892:	d01e      	beq.n	4018d2 <__swsetup_r+0x62>
  401894:	6963      	ldr	r3, [r4, #20]
  401896:	2100      	movs	r1, #0
  401898:	425b      	negs	r3, r3
  40189a:	61a3      	str	r3, [r4, #24]
  40189c:	60a1      	str	r1, [r4, #8]
  40189e:	b1f2      	cbz	r2, 4018de <__swsetup_r+0x6e>
  4018a0:	2000      	movs	r0, #0
  4018a2:	bd70      	pop	{r4, r5, r6, pc}
  4018a4:	06da      	lsls	r2, r3, #27
  4018a6:	d53b      	bpl.n	401920 <__swsetup_r+0xb0>
  4018a8:	075b      	lsls	r3, r3, #29
  4018aa:	d425      	bmi.n	4018f8 <__swsetup_r+0x88>
  4018ac:	6922      	ldr	r2, [r4, #16]
  4018ae:	f045 0308 	orr.w	r3, r5, #8
  4018b2:	81a3      	strh	r3, [r4, #12]
  4018b4:	b29b      	uxth	r3, r3
  4018b6:	2a00      	cmp	r2, #0
  4018b8:	d1e9      	bne.n	40188e <__swsetup_r+0x1e>
  4018ba:	f403 7120 	and.w	r1, r3, #640	; 0x280
  4018be:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  4018c2:	d0e4      	beq.n	40188e <__swsetup_r+0x1e>
  4018c4:	4630      	mov	r0, r6
  4018c6:	4621      	mov	r1, r4
  4018c8:	f000 fcd6 	bl	402278 <__smakebuf_r>
  4018cc:	89a3      	ldrh	r3, [r4, #12]
  4018ce:	6922      	ldr	r2, [r4, #16]
  4018d0:	e7dd      	b.n	40188e <__swsetup_r+0x1e>
  4018d2:	0798      	lsls	r0, r3, #30
  4018d4:	bf58      	it	pl
  4018d6:	6961      	ldrpl	r1, [r4, #20]
  4018d8:	60a1      	str	r1, [r4, #8]
  4018da:	2a00      	cmp	r2, #0
  4018dc:	d1e0      	bne.n	4018a0 <__swsetup_r+0x30>
  4018de:	89a3      	ldrh	r3, [r4, #12]
  4018e0:	061a      	lsls	r2, r3, #24
  4018e2:	d5dd      	bpl.n	4018a0 <__swsetup_r+0x30>
  4018e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4018e8:	81a3      	strh	r3, [r4, #12]
  4018ea:	f04f 30ff 	mov.w	r0, #4294967295
  4018ee:	bd70      	pop	{r4, r5, r6, pc}
  4018f0:	4618      	mov	r0, r3
  4018f2:	f000 f8f5 	bl	401ae0 <__sinit>
  4018f6:	e7c4      	b.n	401882 <__swsetup_r+0x12>
  4018f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4018fa:	b149      	cbz	r1, 401910 <__swsetup_r+0xa0>
  4018fc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401900:	4299      	cmp	r1, r3
  401902:	d003      	beq.n	40190c <__swsetup_r+0x9c>
  401904:	4630      	mov	r0, r6
  401906:	f000 fa2d 	bl	401d64 <_free_r>
  40190a:	89a5      	ldrh	r5, [r4, #12]
  40190c:	2300      	movs	r3, #0
  40190e:	6323      	str	r3, [r4, #48]	; 0x30
  401910:	f025 0524 	bic.w	r5, r5, #36	; 0x24
  401914:	2300      	movs	r3, #0
  401916:	6922      	ldr	r2, [r4, #16]
  401918:	6063      	str	r3, [r4, #4]
  40191a:	b2ad      	uxth	r5, r5
  40191c:	6022      	str	r2, [r4, #0]
  40191e:	e7c6      	b.n	4018ae <__swsetup_r+0x3e>
  401920:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  401924:	2309      	movs	r3, #9
  401926:	6033      	str	r3, [r6, #0]
  401928:	f04f 30ff 	mov.w	r0, #4294967295
  40192c:	81a5      	strh	r5, [r4, #12]
  40192e:	bd70      	pop	{r4, r5, r6, pc}
  401930:	20000430 	.word	0x20000430

00401934 <register_fini>:
  401934:	4b02      	ldr	r3, [pc, #8]	; (401940 <register_fini+0xc>)
  401936:	b113      	cbz	r3, 40193e <register_fini+0xa>
  401938:	4802      	ldr	r0, [pc, #8]	; (401944 <register_fini+0x10>)
  40193a:	f000 b805 	b.w	401948 <atexit>
  40193e:	4770      	bx	lr
  401940:	00000000 	.word	0x00000000
  401944:	00401bdd 	.word	0x00401bdd

00401948 <atexit>:
  401948:	4601      	mov	r1, r0
  40194a:	2000      	movs	r0, #0
  40194c:	4602      	mov	r2, r0
  40194e:	4603      	mov	r3, r0
  401950:	f001 bbf4 	b.w	40313c <__register_exitproc>

00401954 <__sflush_r>:
  401954:	898b      	ldrh	r3, [r1, #12]
  401956:	b29a      	uxth	r2, r3
  401958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40195c:	460d      	mov	r5, r1
  40195e:	0711      	lsls	r1, r2, #28
  401960:	4680      	mov	r8, r0
  401962:	d43c      	bmi.n	4019de <__sflush_r+0x8a>
  401964:	686a      	ldr	r2, [r5, #4]
  401966:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40196a:	2a00      	cmp	r2, #0
  40196c:	81ab      	strh	r3, [r5, #12]
  40196e:	dd59      	ble.n	401a24 <__sflush_r+0xd0>
  401970:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401972:	2c00      	cmp	r4, #0
  401974:	d04b      	beq.n	401a0e <__sflush_r+0xba>
  401976:	b29b      	uxth	r3, r3
  401978:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  40197c:	2100      	movs	r1, #0
  40197e:	b292      	uxth	r2, r2
  401980:	f8d8 6000 	ldr.w	r6, [r8]
  401984:	f8c8 1000 	str.w	r1, [r8]
  401988:	2a00      	cmp	r2, #0
  40198a:	d04f      	beq.n	401a2c <__sflush_r+0xd8>
  40198c:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40198e:	075f      	lsls	r7, r3, #29
  401990:	d505      	bpl.n	40199e <__sflush_r+0x4a>
  401992:	6869      	ldr	r1, [r5, #4]
  401994:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  401996:	1a52      	subs	r2, r2, r1
  401998:	b10b      	cbz	r3, 40199e <__sflush_r+0x4a>
  40199a:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40199c:	1ad2      	subs	r2, r2, r3
  40199e:	4640      	mov	r0, r8
  4019a0:	69e9      	ldr	r1, [r5, #28]
  4019a2:	2300      	movs	r3, #0
  4019a4:	47a0      	blx	r4
  4019a6:	1c44      	adds	r4, r0, #1
  4019a8:	d04a      	beq.n	401a40 <__sflush_r+0xec>
  4019aa:	89aa      	ldrh	r2, [r5, #12]
  4019ac:	692b      	ldr	r3, [r5, #16]
  4019ae:	602b      	str	r3, [r5, #0]
  4019b0:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  4019b4:	b29b      	uxth	r3, r3
  4019b6:	2200      	movs	r2, #0
  4019b8:	606a      	str	r2, [r5, #4]
  4019ba:	04da      	lsls	r2, r3, #19
  4019bc:	81ab      	strh	r3, [r5, #12]
  4019be:	d44c      	bmi.n	401a5a <__sflush_r+0x106>
  4019c0:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4019c2:	f8c8 6000 	str.w	r6, [r8]
  4019c6:	b311      	cbz	r1, 401a0e <__sflush_r+0xba>
  4019c8:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4019cc:	4299      	cmp	r1, r3
  4019ce:	d002      	beq.n	4019d6 <__sflush_r+0x82>
  4019d0:	4640      	mov	r0, r8
  4019d2:	f000 f9c7 	bl	401d64 <_free_r>
  4019d6:	2000      	movs	r0, #0
  4019d8:	6328      	str	r0, [r5, #48]	; 0x30
  4019da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019de:	692e      	ldr	r6, [r5, #16]
  4019e0:	b1ae      	cbz	r6, 401a0e <__sflush_r+0xba>
  4019e2:	682c      	ldr	r4, [r5, #0]
  4019e4:	602e      	str	r6, [r5, #0]
  4019e6:	0791      	lsls	r1, r2, #30
  4019e8:	bf0c      	ite	eq
  4019ea:	696b      	ldreq	r3, [r5, #20]
  4019ec:	2300      	movne	r3, #0
  4019ee:	1ba4      	subs	r4, r4, r6
  4019f0:	60ab      	str	r3, [r5, #8]
  4019f2:	e00a      	b.n	401a0a <__sflush_r+0xb6>
  4019f4:	4632      	mov	r2, r6
  4019f6:	4623      	mov	r3, r4
  4019f8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4019fa:	69e9      	ldr	r1, [r5, #28]
  4019fc:	4640      	mov	r0, r8
  4019fe:	47b8      	blx	r7
  401a00:	2800      	cmp	r0, #0
  401a02:	ebc0 0404 	rsb	r4, r0, r4
  401a06:	4406      	add	r6, r0
  401a08:	dd04      	ble.n	401a14 <__sflush_r+0xc0>
  401a0a:	2c00      	cmp	r4, #0
  401a0c:	dcf2      	bgt.n	4019f4 <__sflush_r+0xa0>
  401a0e:	2000      	movs	r0, #0
  401a10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401a14:	89ab      	ldrh	r3, [r5, #12]
  401a16:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401a1a:	81ab      	strh	r3, [r5, #12]
  401a1c:	f04f 30ff 	mov.w	r0, #4294967295
  401a20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401a24:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  401a26:	2a00      	cmp	r2, #0
  401a28:	dca2      	bgt.n	401970 <__sflush_r+0x1c>
  401a2a:	e7f0      	b.n	401a0e <__sflush_r+0xba>
  401a2c:	2301      	movs	r3, #1
  401a2e:	4640      	mov	r0, r8
  401a30:	69e9      	ldr	r1, [r5, #28]
  401a32:	47a0      	blx	r4
  401a34:	1c43      	adds	r3, r0, #1
  401a36:	4602      	mov	r2, r0
  401a38:	d01e      	beq.n	401a78 <__sflush_r+0x124>
  401a3a:	89ab      	ldrh	r3, [r5, #12]
  401a3c:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401a3e:	e7a6      	b.n	40198e <__sflush_r+0x3a>
  401a40:	f8d8 3000 	ldr.w	r3, [r8]
  401a44:	b95b      	cbnz	r3, 401a5e <__sflush_r+0x10a>
  401a46:	89a9      	ldrh	r1, [r5, #12]
  401a48:	606b      	str	r3, [r5, #4]
  401a4a:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
  401a4e:	b29b      	uxth	r3, r3
  401a50:	692a      	ldr	r2, [r5, #16]
  401a52:	81ab      	strh	r3, [r5, #12]
  401a54:	04db      	lsls	r3, r3, #19
  401a56:	602a      	str	r2, [r5, #0]
  401a58:	d5b2      	bpl.n	4019c0 <__sflush_r+0x6c>
  401a5a:	6528      	str	r0, [r5, #80]	; 0x50
  401a5c:	e7b0      	b.n	4019c0 <__sflush_r+0x6c>
  401a5e:	2b1d      	cmp	r3, #29
  401a60:	d001      	beq.n	401a66 <__sflush_r+0x112>
  401a62:	2b16      	cmp	r3, #22
  401a64:	d119      	bne.n	401a9a <__sflush_r+0x146>
  401a66:	89aa      	ldrh	r2, [r5, #12]
  401a68:	692b      	ldr	r3, [r5, #16]
  401a6a:	602b      	str	r3, [r5, #0]
  401a6c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  401a70:	2300      	movs	r3, #0
  401a72:	81aa      	strh	r2, [r5, #12]
  401a74:	606b      	str	r3, [r5, #4]
  401a76:	e7a3      	b.n	4019c0 <__sflush_r+0x6c>
  401a78:	f8d8 3000 	ldr.w	r3, [r8]
  401a7c:	2b00      	cmp	r3, #0
  401a7e:	d0dc      	beq.n	401a3a <__sflush_r+0xe6>
  401a80:	2b1d      	cmp	r3, #29
  401a82:	d007      	beq.n	401a94 <__sflush_r+0x140>
  401a84:	2b16      	cmp	r3, #22
  401a86:	d005      	beq.n	401a94 <__sflush_r+0x140>
  401a88:	89ab      	ldrh	r3, [r5, #12]
  401a8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401a8e:	81ab      	strh	r3, [r5, #12]
  401a90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401a94:	f8c8 6000 	str.w	r6, [r8]
  401a98:	e7b9      	b.n	401a0e <__sflush_r+0xba>
  401a9a:	89ab      	ldrh	r3, [r5, #12]
  401a9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401aa0:	81ab      	strh	r3, [r5, #12]
  401aa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401aa6:	bf00      	nop

00401aa8 <_fflush_r>:
  401aa8:	b510      	push	{r4, lr}
  401aaa:	4604      	mov	r4, r0
  401aac:	b082      	sub	sp, #8
  401aae:	b108      	cbz	r0, 401ab4 <_fflush_r+0xc>
  401ab0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401ab2:	b153      	cbz	r3, 401aca <_fflush_r+0x22>
  401ab4:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  401ab8:	b908      	cbnz	r0, 401abe <_fflush_r+0x16>
  401aba:	b002      	add	sp, #8
  401abc:	bd10      	pop	{r4, pc}
  401abe:	4620      	mov	r0, r4
  401ac0:	b002      	add	sp, #8
  401ac2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  401ac6:	f7ff bf45 	b.w	401954 <__sflush_r>
  401aca:	9101      	str	r1, [sp, #4]
  401acc:	f000 f808 	bl	401ae0 <__sinit>
  401ad0:	9901      	ldr	r1, [sp, #4]
  401ad2:	e7ef      	b.n	401ab4 <_fflush_r+0xc>

00401ad4 <_cleanup_r>:
  401ad4:	4901      	ldr	r1, [pc, #4]	; (401adc <_cleanup_r+0x8>)
  401ad6:	f000 bb9f 	b.w	402218 <_fwalk>
  401ada:	bf00      	nop
  401adc:	00403289 	.word	0x00403289

00401ae0 <__sinit>:
  401ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401ae4:	6b84      	ldr	r4, [r0, #56]	; 0x38
  401ae6:	b083      	sub	sp, #12
  401ae8:	4607      	mov	r7, r0
  401aea:	2c00      	cmp	r4, #0
  401aec:	d165      	bne.n	401bba <__sinit+0xda>
  401aee:	6845      	ldr	r5, [r0, #4]
  401af0:	4833      	ldr	r0, [pc, #204]	; (401bc0 <__sinit+0xe0>)
  401af2:	63f8      	str	r0, [r7, #60]	; 0x3c
  401af4:	2304      	movs	r3, #4
  401af6:	2103      	movs	r1, #3
  401af8:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  401afc:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  401b00:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  401b04:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  401b08:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  401b0c:	81ab      	strh	r3, [r5, #12]
  401b0e:	602c      	str	r4, [r5, #0]
  401b10:	606c      	str	r4, [r5, #4]
  401b12:	60ac      	str	r4, [r5, #8]
  401b14:	666c      	str	r4, [r5, #100]	; 0x64
  401b16:	81ec      	strh	r4, [r5, #14]
  401b18:	612c      	str	r4, [r5, #16]
  401b1a:	616c      	str	r4, [r5, #20]
  401b1c:	61ac      	str	r4, [r5, #24]
  401b1e:	4621      	mov	r1, r4
  401b20:	2208      	movs	r2, #8
  401b22:	f7fe ff31 	bl	400988 <memset>
  401b26:	68be      	ldr	r6, [r7, #8]
  401b28:	f8df b098 	ldr.w	fp, [pc, #152]	; 401bc4 <__sinit+0xe4>
  401b2c:	f8df a098 	ldr.w	sl, [pc, #152]	; 401bc8 <__sinit+0xe8>
  401b30:	f8df 9098 	ldr.w	r9, [pc, #152]	; 401bcc <__sinit+0xec>
  401b34:	f8df 8098 	ldr.w	r8, [pc, #152]	; 401bd0 <__sinit+0xf0>
  401b38:	61ed      	str	r5, [r5, #28]
  401b3a:	2301      	movs	r3, #1
  401b3c:	2209      	movs	r2, #9
  401b3e:	f8c5 b020 	str.w	fp, [r5, #32]
  401b42:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  401b46:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  401b4a:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  401b4e:	4621      	mov	r1, r4
  401b50:	81f3      	strh	r3, [r6, #14]
  401b52:	81b2      	strh	r2, [r6, #12]
  401b54:	6034      	str	r4, [r6, #0]
  401b56:	6074      	str	r4, [r6, #4]
  401b58:	60b4      	str	r4, [r6, #8]
  401b5a:	6674      	str	r4, [r6, #100]	; 0x64
  401b5c:	6134      	str	r4, [r6, #16]
  401b5e:	6174      	str	r4, [r6, #20]
  401b60:	61b4      	str	r4, [r6, #24]
  401b62:	2208      	movs	r2, #8
  401b64:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  401b68:	9301      	str	r3, [sp, #4]
  401b6a:	f7fe ff0d 	bl	400988 <memset>
  401b6e:	68fd      	ldr	r5, [r7, #12]
  401b70:	61f6      	str	r6, [r6, #28]
  401b72:	2012      	movs	r0, #18
  401b74:	2202      	movs	r2, #2
  401b76:	f8c6 b020 	str.w	fp, [r6, #32]
  401b7a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  401b7e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  401b82:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  401b86:	4621      	mov	r1, r4
  401b88:	81a8      	strh	r0, [r5, #12]
  401b8a:	81ea      	strh	r2, [r5, #14]
  401b8c:	602c      	str	r4, [r5, #0]
  401b8e:	606c      	str	r4, [r5, #4]
  401b90:	60ac      	str	r4, [r5, #8]
  401b92:	666c      	str	r4, [r5, #100]	; 0x64
  401b94:	612c      	str	r4, [r5, #16]
  401b96:	616c      	str	r4, [r5, #20]
  401b98:	61ac      	str	r4, [r5, #24]
  401b9a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  401b9e:	2208      	movs	r2, #8
  401ba0:	f7fe fef2 	bl	400988 <memset>
  401ba4:	9b01      	ldr	r3, [sp, #4]
  401ba6:	61ed      	str	r5, [r5, #28]
  401ba8:	f8c5 b020 	str.w	fp, [r5, #32]
  401bac:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  401bb0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  401bb4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  401bb8:	63bb      	str	r3, [r7, #56]	; 0x38
  401bba:	b003      	add	sp, #12
  401bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bc0:	00401ad5 	.word	0x00401ad5
  401bc4:	00402f1d 	.word	0x00402f1d
  401bc8:	00402f41 	.word	0x00402f41
  401bcc:	00402f79 	.word	0x00402f79
  401bd0:	00402f99 	.word	0x00402f99

00401bd4 <__sfp_lock_acquire>:
  401bd4:	4770      	bx	lr
  401bd6:	bf00      	nop

00401bd8 <__sfp_lock_release>:
  401bd8:	4770      	bx	lr
  401bda:	bf00      	nop

00401bdc <__libc_fini_array>:
  401bdc:	b538      	push	{r3, r4, r5, lr}
  401bde:	4d09      	ldr	r5, [pc, #36]	; (401c04 <__libc_fini_array+0x28>)
  401be0:	4c09      	ldr	r4, [pc, #36]	; (401c08 <__libc_fini_array+0x2c>)
  401be2:	1b64      	subs	r4, r4, r5
  401be4:	10a4      	asrs	r4, r4, #2
  401be6:	bf18      	it	ne
  401be8:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
  401bec:	d005      	beq.n	401bfa <__libc_fini_array+0x1e>
  401bee:	3c01      	subs	r4, #1
  401bf0:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  401bf4:	4798      	blx	r3
  401bf6:	2c00      	cmp	r4, #0
  401bf8:	d1f9      	bne.n	401bee <__libc_fini_array+0x12>
  401bfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  401bfe:	f001 bea9 	b.w	403954 <_fini>
  401c02:	bf00      	nop
  401c04:	00403960 	.word	0x00403960
  401c08:	00403964 	.word	0x00403964

00401c0c <_fputwc_r>:
  401c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401c10:	8993      	ldrh	r3, [r2, #12]
  401c12:	460f      	mov	r7, r1
  401c14:	0499      	lsls	r1, r3, #18
  401c16:	b082      	sub	sp, #8
  401c18:	4614      	mov	r4, r2
  401c1a:	4680      	mov	r8, r0
  401c1c:	d406      	bmi.n	401c2c <_fputwc_r+0x20>
  401c1e:	6e52      	ldr	r2, [r2, #100]	; 0x64
  401c20:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401c24:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  401c28:	81a3      	strh	r3, [r4, #12]
  401c2a:	6662      	str	r2, [r4, #100]	; 0x64
  401c2c:	f000 fb1e 	bl	40226c <__locale_mb_cur_max>
  401c30:	2801      	cmp	r0, #1
  401c32:	d03d      	beq.n	401cb0 <_fputwc_r+0xa4>
  401c34:	463a      	mov	r2, r7
  401c36:	4640      	mov	r0, r8
  401c38:	a901      	add	r1, sp, #4
  401c3a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  401c3e:	f001 fa33 	bl	4030a8 <_wcrtomb_r>
  401c42:	1c42      	adds	r2, r0, #1
  401c44:	4606      	mov	r6, r0
  401c46:	d02c      	beq.n	401ca2 <_fputwc_r+0x96>
  401c48:	2800      	cmp	r0, #0
  401c4a:	d039      	beq.n	401cc0 <_fputwc_r+0xb4>
  401c4c:	f89d 1004 	ldrb.w	r1, [sp, #4]
  401c50:	2500      	movs	r5, #0
  401c52:	e009      	b.n	401c68 <_fputwc_r+0x5c>
  401c54:	6823      	ldr	r3, [r4, #0]
  401c56:	7019      	strb	r1, [r3, #0]
  401c58:	6823      	ldr	r3, [r4, #0]
  401c5a:	3301      	adds	r3, #1
  401c5c:	6023      	str	r3, [r4, #0]
  401c5e:	3501      	adds	r5, #1
  401c60:	42b5      	cmp	r5, r6
  401c62:	d22d      	bcs.n	401cc0 <_fputwc_r+0xb4>
  401c64:	ab01      	add	r3, sp, #4
  401c66:	5ce9      	ldrb	r1, [r5, r3]
  401c68:	68a3      	ldr	r3, [r4, #8]
  401c6a:	3b01      	subs	r3, #1
  401c6c:	2b00      	cmp	r3, #0
  401c6e:	60a3      	str	r3, [r4, #8]
  401c70:	daf0      	bge.n	401c54 <_fputwc_r+0x48>
  401c72:	69a2      	ldr	r2, [r4, #24]
  401c74:	4293      	cmp	r3, r2
  401c76:	db05      	blt.n	401c84 <_fputwc_r+0x78>
  401c78:	6823      	ldr	r3, [r4, #0]
  401c7a:	7019      	strb	r1, [r3, #0]
  401c7c:	6823      	ldr	r3, [r4, #0]
  401c7e:	7819      	ldrb	r1, [r3, #0]
  401c80:	290a      	cmp	r1, #10
  401c82:	d1ea      	bne.n	401c5a <_fputwc_r+0x4e>
  401c84:	4640      	mov	r0, r8
  401c86:	4622      	mov	r2, r4
  401c88:	f001 f9ba 	bl	403000 <__swbuf_r>
  401c8c:	f1b0 33ff 	subs.w	r3, r0, #4294967295
  401c90:	4258      	negs	r0, r3
  401c92:	4158      	adcs	r0, r3
  401c94:	2800      	cmp	r0, #0
  401c96:	d0e2      	beq.n	401c5e <_fputwc_r+0x52>
  401c98:	f04f 30ff 	mov.w	r0, #4294967295
  401c9c:	b002      	add	sp, #8
  401c9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401ca2:	89a3      	ldrh	r3, [r4, #12]
  401ca4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401ca8:	81a3      	strh	r3, [r4, #12]
  401caa:	b002      	add	sp, #8
  401cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401cb0:	1e7b      	subs	r3, r7, #1
  401cb2:	2bfe      	cmp	r3, #254	; 0xfe
  401cb4:	d8be      	bhi.n	401c34 <_fputwc_r+0x28>
  401cb6:	b2f9      	uxtb	r1, r7
  401cb8:	4606      	mov	r6, r0
  401cba:	f88d 1004 	strb.w	r1, [sp, #4]
  401cbe:	e7c7      	b.n	401c50 <_fputwc_r+0x44>
  401cc0:	4638      	mov	r0, r7
  401cc2:	b002      	add	sp, #8
  401cc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00401cc8 <_malloc_trim_r>:
  401cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401cca:	4d23      	ldr	r5, [pc, #140]	; (401d58 <_malloc_trim_r+0x90>)
  401ccc:	460f      	mov	r7, r1
  401cce:	4604      	mov	r4, r0
  401cd0:	f000 ff28 	bl	402b24 <__malloc_lock>
  401cd4:	68ab      	ldr	r3, [r5, #8]
  401cd6:	685e      	ldr	r6, [r3, #4]
  401cd8:	f026 0603 	bic.w	r6, r6, #3
  401cdc:	1bf1      	subs	r1, r6, r7
  401cde:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  401ce2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  401ce6:	f021 010f 	bic.w	r1, r1, #15
  401cea:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
  401cee:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
  401cf2:	db07      	blt.n	401d04 <_malloc_trim_r+0x3c>
  401cf4:	4620      	mov	r0, r4
  401cf6:	2100      	movs	r1, #0
  401cf8:	f001 f8fe 	bl	402ef8 <_sbrk_r>
  401cfc:	68ab      	ldr	r3, [r5, #8]
  401cfe:	4433      	add	r3, r6
  401d00:	4298      	cmp	r0, r3
  401d02:	d004      	beq.n	401d0e <_malloc_trim_r+0x46>
  401d04:	4620      	mov	r0, r4
  401d06:	f000 ff0f 	bl	402b28 <__malloc_unlock>
  401d0a:	2000      	movs	r0, #0
  401d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401d0e:	4620      	mov	r0, r4
  401d10:	4279      	negs	r1, r7
  401d12:	f001 f8f1 	bl	402ef8 <_sbrk_r>
  401d16:	3001      	adds	r0, #1
  401d18:	d00d      	beq.n	401d36 <_malloc_trim_r+0x6e>
  401d1a:	4b10      	ldr	r3, [pc, #64]	; (401d5c <_malloc_trim_r+0x94>)
  401d1c:	68aa      	ldr	r2, [r5, #8]
  401d1e:	6819      	ldr	r1, [r3, #0]
  401d20:	1bf6      	subs	r6, r6, r7
  401d22:	f046 0601 	orr.w	r6, r6, #1
  401d26:	4620      	mov	r0, r4
  401d28:	1bc9      	subs	r1, r1, r7
  401d2a:	6056      	str	r6, [r2, #4]
  401d2c:	6019      	str	r1, [r3, #0]
  401d2e:	f000 fefb 	bl	402b28 <__malloc_unlock>
  401d32:	2001      	movs	r0, #1
  401d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401d36:	4620      	mov	r0, r4
  401d38:	2100      	movs	r1, #0
  401d3a:	f001 f8dd 	bl	402ef8 <_sbrk_r>
  401d3e:	68ab      	ldr	r3, [r5, #8]
  401d40:	1ac2      	subs	r2, r0, r3
  401d42:	2a0f      	cmp	r2, #15
  401d44:	ddde      	ble.n	401d04 <_malloc_trim_r+0x3c>
  401d46:	4d06      	ldr	r5, [pc, #24]	; (401d60 <_malloc_trim_r+0x98>)
  401d48:	4904      	ldr	r1, [pc, #16]	; (401d5c <_malloc_trim_r+0x94>)
  401d4a:	682d      	ldr	r5, [r5, #0]
  401d4c:	f042 0201 	orr.w	r2, r2, #1
  401d50:	1b40      	subs	r0, r0, r5
  401d52:	605a      	str	r2, [r3, #4]
  401d54:	6008      	str	r0, [r1, #0]
  401d56:	e7d5      	b.n	401d04 <_malloc_trim_r+0x3c>
  401d58:	20000458 	.word	0x20000458
  401d5c:	2000089c 	.word	0x2000089c
  401d60:	20000864 	.word	0x20000864

00401d64 <_free_r>:
  401d64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401d68:	460d      	mov	r5, r1
  401d6a:	4606      	mov	r6, r0
  401d6c:	2900      	cmp	r1, #0
  401d6e:	d055      	beq.n	401e1c <_free_r+0xb8>
  401d70:	f000 fed8 	bl	402b24 <__malloc_lock>
  401d74:	f855 1c04 	ldr.w	r1, [r5, #-4]
  401d78:	f8df c174 	ldr.w	ip, [pc, #372]	; 401ef0 <_free_r+0x18c>
  401d7c:	f021 0301 	bic.w	r3, r1, #1
  401d80:	f1a5 0408 	sub.w	r4, r5, #8
  401d84:	18e2      	adds	r2, r4, r3
  401d86:	f8dc 0008 	ldr.w	r0, [ip, #8]
  401d8a:	6857      	ldr	r7, [r2, #4]
  401d8c:	4290      	cmp	r0, r2
  401d8e:	f027 0703 	bic.w	r7, r7, #3
  401d92:	d069      	beq.n	401e68 <_free_r+0x104>
  401d94:	f011 0101 	ands.w	r1, r1, #1
  401d98:	6057      	str	r7, [r2, #4]
  401d9a:	d032      	beq.n	401e02 <_free_r+0x9e>
  401d9c:	2100      	movs	r1, #0
  401d9e:	19d0      	adds	r0, r2, r7
  401da0:	6840      	ldr	r0, [r0, #4]
  401da2:	07c0      	lsls	r0, r0, #31
  401da4:	d406      	bmi.n	401db4 <_free_r+0x50>
  401da6:	443b      	add	r3, r7
  401da8:	6890      	ldr	r0, [r2, #8]
  401daa:	2900      	cmp	r1, #0
  401dac:	d04e      	beq.n	401e4c <_free_r+0xe8>
  401dae:	68d2      	ldr	r2, [r2, #12]
  401db0:	60c2      	str	r2, [r0, #12]
  401db2:	6090      	str	r0, [r2, #8]
  401db4:	f043 0201 	orr.w	r2, r3, #1
  401db8:	6062      	str	r2, [r4, #4]
  401dba:	50e3      	str	r3, [r4, r3]
  401dbc:	b9e1      	cbnz	r1, 401df8 <_free_r+0x94>
  401dbe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  401dc2:	d32d      	bcc.n	401e20 <_free_r+0xbc>
  401dc4:	0a5a      	lsrs	r2, r3, #9
  401dc6:	2a04      	cmp	r2, #4
  401dc8:	d86a      	bhi.n	401ea0 <_free_r+0x13c>
  401dca:	0998      	lsrs	r0, r3, #6
  401dcc:	3038      	adds	r0, #56	; 0x38
  401dce:	0041      	lsls	r1, r0, #1
  401dd0:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
  401dd4:	4946      	ldr	r1, [pc, #280]	; (401ef0 <_free_r+0x18c>)
  401dd6:	f8dc 2008 	ldr.w	r2, [ip, #8]
  401dda:	4562      	cmp	r2, ip
  401ddc:	d066      	beq.n	401eac <_free_r+0x148>
  401dde:	6851      	ldr	r1, [r2, #4]
  401de0:	f021 0103 	bic.w	r1, r1, #3
  401de4:	428b      	cmp	r3, r1
  401de6:	d202      	bcs.n	401dee <_free_r+0x8a>
  401de8:	6892      	ldr	r2, [r2, #8]
  401dea:	4594      	cmp	ip, r2
  401dec:	d1f7      	bne.n	401dde <_free_r+0x7a>
  401dee:	68d3      	ldr	r3, [r2, #12]
  401df0:	60e3      	str	r3, [r4, #12]
  401df2:	60a2      	str	r2, [r4, #8]
  401df4:	609c      	str	r4, [r3, #8]
  401df6:	60d4      	str	r4, [r2, #12]
  401df8:	4630      	mov	r0, r6
  401dfa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  401dfe:	f000 be93 	b.w	402b28 <__malloc_unlock>
  401e02:	f855 5c08 	ldr.w	r5, [r5, #-8]
  401e06:	1b64      	subs	r4, r4, r5
  401e08:	f10c 0808 	add.w	r8, ip, #8
  401e0c:	68a0      	ldr	r0, [r4, #8]
  401e0e:	4540      	cmp	r0, r8
  401e10:	442b      	add	r3, r5
  401e12:	d043      	beq.n	401e9c <_free_r+0x138>
  401e14:	68e5      	ldr	r5, [r4, #12]
  401e16:	60c5      	str	r5, [r0, #12]
  401e18:	60a8      	str	r0, [r5, #8]
  401e1a:	e7c0      	b.n	401d9e <_free_r+0x3a>
  401e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401e20:	08db      	lsrs	r3, r3, #3
  401e22:	eb0c 02c3 	add.w	r2, ip, r3, lsl #3
  401e26:	2501      	movs	r5, #1
  401e28:	f8dc 0004 	ldr.w	r0, [ip, #4]
  401e2c:	6891      	ldr	r1, [r2, #8]
  401e2e:	60a1      	str	r1, [r4, #8]
  401e30:	109b      	asrs	r3, r3, #2
  401e32:	fa05 f303 	lsl.w	r3, r5, r3
  401e36:	4318      	orrs	r0, r3
  401e38:	60e2      	str	r2, [r4, #12]
  401e3a:	f8cc 0004 	str.w	r0, [ip, #4]
  401e3e:	6094      	str	r4, [r2, #8]
  401e40:	4630      	mov	r0, r6
  401e42:	60cc      	str	r4, [r1, #12]
  401e44:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  401e48:	f000 be6e 	b.w	402b28 <__malloc_unlock>
  401e4c:	4d29      	ldr	r5, [pc, #164]	; (401ef4 <_free_r+0x190>)
  401e4e:	42a8      	cmp	r0, r5
  401e50:	d1ad      	bne.n	401dae <_free_r+0x4a>
  401e52:	f043 0201 	orr.w	r2, r3, #1
  401e56:	f8cc 4014 	str.w	r4, [ip, #20]
  401e5a:	f8cc 4010 	str.w	r4, [ip, #16]
  401e5e:	60e0      	str	r0, [r4, #12]
  401e60:	60a0      	str	r0, [r4, #8]
  401e62:	6062      	str	r2, [r4, #4]
  401e64:	50e3      	str	r3, [r4, r3]
  401e66:	e7c7      	b.n	401df8 <_free_r+0x94>
  401e68:	441f      	add	r7, r3
  401e6a:	07cb      	lsls	r3, r1, #31
  401e6c:	d407      	bmi.n	401e7e <_free_r+0x11a>
  401e6e:	f855 3c08 	ldr.w	r3, [r5, #-8]
  401e72:	1ae4      	subs	r4, r4, r3
  401e74:	441f      	add	r7, r3
  401e76:	68a2      	ldr	r2, [r4, #8]
  401e78:	68e3      	ldr	r3, [r4, #12]
  401e7a:	60d3      	str	r3, [r2, #12]
  401e7c:	609a      	str	r2, [r3, #8]
  401e7e:	4b1e      	ldr	r3, [pc, #120]	; (401ef8 <_free_r+0x194>)
  401e80:	681b      	ldr	r3, [r3, #0]
  401e82:	f047 0201 	orr.w	r2, r7, #1
  401e86:	429f      	cmp	r7, r3
  401e88:	6062      	str	r2, [r4, #4]
  401e8a:	f8cc 4008 	str.w	r4, [ip, #8]
  401e8e:	d3b3      	bcc.n	401df8 <_free_r+0x94>
  401e90:	4b1a      	ldr	r3, [pc, #104]	; (401efc <_free_r+0x198>)
  401e92:	4630      	mov	r0, r6
  401e94:	6819      	ldr	r1, [r3, #0]
  401e96:	f7ff ff17 	bl	401cc8 <_malloc_trim_r>
  401e9a:	e7ad      	b.n	401df8 <_free_r+0x94>
  401e9c:	2101      	movs	r1, #1
  401e9e:	e77e      	b.n	401d9e <_free_r+0x3a>
  401ea0:	2a14      	cmp	r2, #20
  401ea2:	d80c      	bhi.n	401ebe <_free_r+0x15a>
  401ea4:	f102 005b 	add.w	r0, r2, #91	; 0x5b
  401ea8:	0041      	lsls	r1, r0, #1
  401eaa:	e791      	b.n	401dd0 <_free_r+0x6c>
  401eac:	684b      	ldr	r3, [r1, #4]
  401eae:	1080      	asrs	r0, r0, #2
  401eb0:	2501      	movs	r5, #1
  401eb2:	fa05 f000 	lsl.w	r0, r5, r0
  401eb6:	4303      	orrs	r3, r0
  401eb8:	604b      	str	r3, [r1, #4]
  401eba:	4613      	mov	r3, r2
  401ebc:	e798      	b.n	401df0 <_free_r+0x8c>
  401ebe:	2a54      	cmp	r2, #84	; 0x54
  401ec0:	d803      	bhi.n	401eca <_free_r+0x166>
  401ec2:	0b18      	lsrs	r0, r3, #12
  401ec4:	306e      	adds	r0, #110	; 0x6e
  401ec6:	0041      	lsls	r1, r0, #1
  401ec8:	e782      	b.n	401dd0 <_free_r+0x6c>
  401eca:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  401ece:	d803      	bhi.n	401ed8 <_free_r+0x174>
  401ed0:	0bd8      	lsrs	r0, r3, #15
  401ed2:	3077      	adds	r0, #119	; 0x77
  401ed4:	0041      	lsls	r1, r0, #1
  401ed6:	e77b      	b.n	401dd0 <_free_r+0x6c>
  401ed8:	f240 5154 	movw	r1, #1364	; 0x554
  401edc:	428a      	cmp	r2, r1
  401ede:	d803      	bhi.n	401ee8 <_free_r+0x184>
  401ee0:	0c98      	lsrs	r0, r3, #18
  401ee2:	307c      	adds	r0, #124	; 0x7c
  401ee4:	0041      	lsls	r1, r0, #1
  401ee6:	e773      	b.n	401dd0 <_free_r+0x6c>
  401ee8:	21fc      	movs	r1, #252	; 0xfc
  401eea:	207e      	movs	r0, #126	; 0x7e
  401eec:	e770      	b.n	401dd0 <_free_r+0x6c>
  401eee:	bf00      	nop
  401ef0:	20000458 	.word	0x20000458
  401ef4:	20000460 	.word	0x20000460
  401ef8:	20000860 	.word	0x20000860
  401efc:	20000898 	.word	0x20000898

00401f00 <__sfvwrite_r>:
  401f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401f04:	6893      	ldr	r3, [r2, #8]
  401f06:	b083      	sub	sp, #12
  401f08:	4616      	mov	r6, r2
  401f0a:	4681      	mov	r9, r0
  401f0c:	460c      	mov	r4, r1
  401f0e:	b32b      	cbz	r3, 401f5c <__sfvwrite_r+0x5c>
  401f10:	898b      	ldrh	r3, [r1, #12]
  401f12:	0719      	lsls	r1, r3, #28
  401f14:	d526      	bpl.n	401f64 <__sfvwrite_r+0x64>
  401f16:	6922      	ldr	r2, [r4, #16]
  401f18:	b322      	cbz	r2, 401f64 <__sfvwrite_r+0x64>
  401f1a:	f003 0202 	and.w	r2, r3, #2
  401f1e:	b292      	uxth	r2, r2
  401f20:	6835      	ldr	r5, [r6, #0]
  401f22:	2a00      	cmp	r2, #0
  401f24:	d02c      	beq.n	401f80 <__sfvwrite_r+0x80>
  401f26:	f04f 0a00 	mov.w	sl, #0
  401f2a:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 402214 <__sfvwrite_r+0x314>
  401f2e:	46d0      	mov	r8, sl
  401f30:	45d8      	cmp	r8, fp
  401f32:	bf34      	ite	cc
  401f34:	4643      	movcc	r3, r8
  401f36:	465b      	movcs	r3, fp
  401f38:	4652      	mov	r2, sl
  401f3a:	4648      	mov	r0, r9
  401f3c:	f1b8 0f00 	cmp.w	r8, #0
  401f40:	d04f      	beq.n	401fe2 <__sfvwrite_r+0xe2>
  401f42:	69e1      	ldr	r1, [r4, #28]
  401f44:	6a67      	ldr	r7, [r4, #36]	; 0x24
  401f46:	47b8      	blx	r7
  401f48:	2800      	cmp	r0, #0
  401f4a:	dd56      	ble.n	401ffa <__sfvwrite_r+0xfa>
  401f4c:	68b3      	ldr	r3, [r6, #8]
  401f4e:	1a1b      	subs	r3, r3, r0
  401f50:	4482      	add	sl, r0
  401f52:	ebc0 0808 	rsb	r8, r0, r8
  401f56:	60b3      	str	r3, [r6, #8]
  401f58:	2b00      	cmp	r3, #0
  401f5a:	d1e9      	bne.n	401f30 <__sfvwrite_r+0x30>
  401f5c:	2000      	movs	r0, #0
  401f5e:	b003      	add	sp, #12
  401f60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f64:	4648      	mov	r0, r9
  401f66:	4621      	mov	r1, r4
  401f68:	f7ff fc82 	bl	401870 <__swsetup_r>
  401f6c:	2800      	cmp	r0, #0
  401f6e:	f040 8148 	bne.w	402202 <__sfvwrite_r+0x302>
  401f72:	89a3      	ldrh	r3, [r4, #12]
  401f74:	6835      	ldr	r5, [r6, #0]
  401f76:	f003 0202 	and.w	r2, r3, #2
  401f7a:	b292      	uxth	r2, r2
  401f7c:	2a00      	cmp	r2, #0
  401f7e:	d1d2      	bne.n	401f26 <__sfvwrite_r+0x26>
  401f80:	f013 0a01 	ands.w	sl, r3, #1
  401f84:	d142      	bne.n	40200c <__sfvwrite_r+0x10c>
  401f86:	46d0      	mov	r8, sl
  401f88:	f1b8 0f00 	cmp.w	r8, #0
  401f8c:	d023      	beq.n	401fd6 <__sfvwrite_r+0xd6>
  401f8e:	059a      	lsls	r2, r3, #22
  401f90:	68a7      	ldr	r7, [r4, #8]
  401f92:	d576      	bpl.n	402082 <__sfvwrite_r+0x182>
  401f94:	45b8      	cmp	r8, r7
  401f96:	f0c0 80a4 	bcc.w	4020e2 <__sfvwrite_r+0x1e2>
  401f9a:	f413 6f90 	tst.w	r3, #1152	; 0x480
  401f9e:	f040 80b2 	bne.w	402106 <__sfvwrite_r+0x206>
  401fa2:	6820      	ldr	r0, [r4, #0]
  401fa4:	46bb      	mov	fp, r7
  401fa6:	4651      	mov	r1, sl
  401fa8:	465a      	mov	r2, fp
  401faa:	f000 fd5b 	bl	402a64 <memmove>
  401fae:	68a2      	ldr	r2, [r4, #8]
  401fb0:	6821      	ldr	r1, [r4, #0]
  401fb2:	1bd2      	subs	r2, r2, r7
  401fb4:	eb01 030b 	add.w	r3, r1, fp
  401fb8:	60a2      	str	r2, [r4, #8]
  401fba:	6023      	str	r3, [r4, #0]
  401fbc:	4642      	mov	r2, r8
  401fbe:	68b3      	ldr	r3, [r6, #8]
  401fc0:	1a9b      	subs	r3, r3, r2
  401fc2:	4492      	add	sl, r2
  401fc4:	ebc2 0808 	rsb	r8, r2, r8
  401fc8:	60b3      	str	r3, [r6, #8]
  401fca:	2b00      	cmp	r3, #0
  401fcc:	d0c6      	beq.n	401f5c <__sfvwrite_r+0x5c>
  401fce:	89a3      	ldrh	r3, [r4, #12]
  401fd0:	f1b8 0f00 	cmp.w	r8, #0
  401fd4:	d1db      	bne.n	401f8e <__sfvwrite_r+0x8e>
  401fd6:	f8d5 a000 	ldr.w	sl, [r5]
  401fda:	f8d5 8004 	ldr.w	r8, [r5, #4]
  401fde:	3508      	adds	r5, #8
  401fe0:	e7d2      	b.n	401f88 <__sfvwrite_r+0x88>
  401fe2:	f8d5 a000 	ldr.w	sl, [r5]
  401fe6:	f8d5 8004 	ldr.w	r8, [r5, #4]
  401fea:	3508      	adds	r5, #8
  401fec:	e7a0      	b.n	401f30 <__sfvwrite_r+0x30>
  401fee:	4648      	mov	r0, r9
  401ff0:	4621      	mov	r1, r4
  401ff2:	f7ff fd59 	bl	401aa8 <_fflush_r>
  401ff6:	2800      	cmp	r0, #0
  401ff8:	d059      	beq.n	4020ae <__sfvwrite_r+0x1ae>
  401ffa:	89a3      	ldrh	r3, [r4, #12]
  401ffc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402000:	f04f 30ff 	mov.w	r0, #4294967295
  402004:	81a3      	strh	r3, [r4, #12]
  402006:	b003      	add	sp, #12
  402008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40200c:	4692      	mov	sl, r2
  40200e:	9201      	str	r2, [sp, #4]
  402010:	4693      	mov	fp, r2
  402012:	4690      	mov	r8, r2
  402014:	f1b8 0f00 	cmp.w	r8, #0
  402018:	d02b      	beq.n	402072 <__sfvwrite_r+0x172>
  40201a:	9f01      	ldr	r7, [sp, #4]
  40201c:	2f00      	cmp	r7, #0
  40201e:	d064      	beq.n	4020ea <__sfvwrite_r+0x1ea>
  402020:	6820      	ldr	r0, [r4, #0]
  402022:	6921      	ldr	r1, [r4, #16]
  402024:	f8d4 c008 	ldr.w	ip, [r4, #8]
  402028:	6962      	ldr	r2, [r4, #20]
  40202a:	45c2      	cmp	sl, r8
  40202c:	bf34      	ite	cc
  40202e:	4653      	movcc	r3, sl
  402030:	4643      	movcs	r3, r8
  402032:	4288      	cmp	r0, r1
  402034:	461f      	mov	r7, r3
  402036:	d903      	bls.n	402040 <__sfvwrite_r+0x140>
  402038:	4494      	add	ip, r2
  40203a:	4563      	cmp	r3, ip
  40203c:	f300 80ae 	bgt.w	40219c <__sfvwrite_r+0x29c>
  402040:	4293      	cmp	r3, r2
  402042:	db36      	blt.n	4020b2 <__sfvwrite_r+0x1b2>
  402044:	4613      	mov	r3, r2
  402046:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402048:	69e1      	ldr	r1, [r4, #28]
  40204a:	4648      	mov	r0, r9
  40204c:	465a      	mov	r2, fp
  40204e:	47b8      	blx	r7
  402050:	1e07      	subs	r7, r0, #0
  402052:	ddd2      	ble.n	401ffa <__sfvwrite_r+0xfa>
  402054:	ebba 0a07 	subs.w	sl, sl, r7
  402058:	d03a      	beq.n	4020d0 <__sfvwrite_r+0x1d0>
  40205a:	68b3      	ldr	r3, [r6, #8]
  40205c:	1bdb      	subs	r3, r3, r7
  40205e:	44bb      	add	fp, r7
  402060:	ebc7 0808 	rsb	r8, r7, r8
  402064:	60b3      	str	r3, [r6, #8]
  402066:	2b00      	cmp	r3, #0
  402068:	f43f af78 	beq.w	401f5c <__sfvwrite_r+0x5c>
  40206c:	f1b8 0f00 	cmp.w	r8, #0
  402070:	d1d3      	bne.n	40201a <__sfvwrite_r+0x11a>
  402072:	2700      	movs	r7, #0
  402074:	f8d5 b000 	ldr.w	fp, [r5]
  402078:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40207c:	9701      	str	r7, [sp, #4]
  40207e:	3508      	adds	r5, #8
  402080:	e7c8      	b.n	402014 <__sfvwrite_r+0x114>
  402082:	6820      	ldr	r0, [r4, #0]
  402084:	6923      	ldr	r3, [r4, #16]
  402086:	4298      	cmp	r0, r3
  402088:	d802      	bhi.n	402090 <__sfvwrite_r+0x190>
  40208a:	6963      	ldr	r3, [r4, #20]
  40208c:	4598      	cmp	r8, r3
  40208e:	d272      	bcs.n	402176 <__sfvwrite_r+0x276>
  402090:	45b8      	cmp	r8, r7
  402092:	bf38      	it	cc
  402094:	4647      	movcc	r7, r8
  402096:	463a      	mov	r2, r7
  402098:	4651      	mov	r1, sl
  40209a:	f000 fce3 	bl	402a64 <memmove>
  40209e:	68a3      	ldr	r3, [r4, #8]
  4020a0:	6822      	ldr	r2, [r4, #0]
  4020a2:	1bdb      	subs	r3, r3, r7
  4020a4:	443a      	add	r2, r7
  4020a6:	60a3      	str	r3, [r4, #8]
  4020a8:	6022      	str	r2, [r4, #0]
  4020aa:	2b00      	cmp	r3, #0
  4020ac:	d09f      	beq.n	401fee <__sfvwrite_r+0xee>
  4020ae:	463a      	mov	r2, r7
  4020b0:	e785      	b.n	401fbe <__sfvwrite_r+0xbe>
  4020b2:	461a      	mov	r2, r3
  4020b4:	4659      	mov	r1, fp
  4020b6:	9300      	str	r3, [sp, #0]
  4020b8:	f000 fcd4 	bl	402a64 <memmove>
  4020bc:	9b00      	ldr	r3, [sp, #0]
  4020be:	68a1      	ldr	r1, [r4, #8]
  4020c0:	6822      	ldr	r2, [r4, #0]
  4020c2:	1ac9      	subs	r1, r1, r3
  4020c4:	ebba 0a07 	subs.w	sl, sl, r7
  4020c8:	4413      	add	r3, r2
  4020ca:	60a1      	str	r1, [r4, #8]
  4020cc:	6023      	str	r3, [r4, #0]
  4020ce:	d1c4      	bne.n	40205a <__sfvwrite_r+0x15a>
  4020d0:	4648      	mov	r0, r9
  4020d2:	4621      	mov	r1, r4
  4020d4:	f7ff fce8 	bl	401aa8 <_fflush_r>
  4020d8:	2800      	cmp	r0, #0
  4020da:	d18e      	bne.n	401ffa <__sfvwrite_r+0xfa>
  4020dc:	f8cd a004 	str.w	sl, [sp, #4]
  4020e0:	e7bb      	b.n	40205a <__sfvwrite_r+0x15a>
  4020e2:	6820      	ldr	r0, [r4, #0]
  4020e4:	4647      	mov	r7, r8
  4020e6:	46c3      	mov	fp, r8
  4020e8:	e75d      	b.n	401fa6 <__sfvwrite_r+0xa6>
  4020ea:	4658      	mov	r0, fp
  4020ec:	210a      	movs	r1, #10
  4020ee:	4642      	mov	r2, r8
  4020f0:	f000 fbd6 	bl	4028a0 <memchr>
  4020f4:	2800      	cmp	r0, #0
  4020f6:	d07f      	beq.n	4021f8 <__sfvwrite_r+0x2f8>
  4020f8:	f100 0a01 	add.w	sl, r0, #1
  4020fc:	2701      	movs	r7, #1
  4020fe:	ebcb 0a0a 	rsb	sl, fp, sl
  402102:	9701      	str	r7, [sp, #4]
  402104:	e78c      	b.n	402020 <__sfvwrite_r+0x120>
  402106:	6822      	ldr	r2, [r4, #0]
  402108:	6921      	ldr	r1, [r4, #16]
  40210a:	6967      	ldr	r7, [r4, #20]
  40210c:	ebc1 0c02 	rsb	ip, r1, r2
  402110:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  402114:	f10c 0201 	add.w	r2, ip, #1
  402118:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  40211c:	4442      	add	r2, r8
  40211e:	107f      	asrs	r7, r7, #1
  402120:	4297      	cmp	r7, r2
  402122:	bf34      	ite	cc
  402124:	4617      	movcc	r7, r2
  402126:	463a      	movcs	r2, r7
  402128:	055b      	lsls	r3, r3, #21
  40212a:	d54f      	bpl.n	4021cc <__sfvwrite_r+0x2cc>
  40212c:	4611      	mov	r1, r2
  40212e:	4648      	mov	r0, r9
  402130:	f8cd c000 	str.w	ip, [sp]
  402134:	f000 f918 	bl	402368 <_malloc_r>
  402138:	f8dd c000 	ldr.w	ip, [sp]
  40213c:	4683      	mov	fp, r0
  40213e:	2800      	cmp	r0, #0
  402140:	d062      	beq.n	402208 <__sfvwrite_r+0x308>
  402142:	4662      	mov	r2, ip
  402144:	6921      	ldr	r1, [r4, #16]
  402146:	f8cd c000 	str.w	ip, [sp]
  40214a:	f000 fbf1 	bl	402930 <memcpy>
  40214e:	89a2      	ldrh	r2, [r4, #12]
  402150:	f8dd c000 	ldr.w	ip, [sp]
  402154:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  402158:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40215c:	81a2      	strh	r2, [r4, #12]
  40215e:	eb0b 000c 	add.w	r0, fp, ip
  402162:	ebcc 0207 	rsb	r2, ip, r7
  402166:	f8c4 b010 	str.w	fp, [r4, #16]
  40216a:	6167      	str	r7, [r4, #20]
  40216c:	6020      	str	r0, [r4, #0]
  40216e:	60a2      	str	r2, [r4, #8]
  402170:	4647      	mov	r7, r8
  402172:	46c3      	mov	fp, r8
  402174:	e717      	b.n	401fa6 <__sfvwrite_r+0xa6>
  402176:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  40217a:	4590      	cmp	r8, r2
  40217c:	bf38      	it	cc
  40217e:	4642      	movcc	r2, r8
  402180:	fb92 f2f3 	sdiv	r2, r2, r3
  402184:	fb02 f303 	mul.w	r3, r2, r3
  402188:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40218a:	69e1      	ldr	r1, [r4, #28]
  40218c:	4648      	mov	r0, r9
  40218e:	4652      	mov	r2, sl
  402190:	47b8      	blx	r7
  402192:	2800      	cmp	r0, #0
  402194:	f77f af31 	ble.w	401ffa <__sfvwrite_r+0xfa>
  402198:	4602      	mov	r2, r0
  40219a:	e710      	b.n	401fbe <__sfvwrite_r+0xbe>
  40219c:	4662      	mov	r2, ip
  40219e:	4659      	mov	r1, fp
  4021a0:	f8cd c000 	str.w	ip, [sp]
  4021a4:	f000 fc5e 	bl	402a64 <memmove>
  4021a8:	f8dd c000 	ldr.w	ip, [sp]
  4021ac:	6823      	ldr	r3, [r4, #0]
  4021ae:	4463      	add	r3, ip
  4021b0:	6023      	str	r3, [r4, #0]
  4021b2:	4648      	mov	r0, r9
  4021b4:	4621      	mov	r1, r4
  4021b6:	f8cd c000 	str.w	ip, [sp]
  4021ba:	f7ff fc75 	bl	401aa8 <_fflush_r>
  4021be:	f8dd c000 	ldr.w	ip, [sp]
  4021c2:	2800      	cmp	r0, #0
  4021c4:	f47f af19 	bne.w	401ffa <__sfvwrite_r+0xfa>
  4021c8:	4667      	mov	r7, ip
  4021ca:	e743      	b.n	402054 <__sfvwrite_r+0x154>
  4021cc:	4648      	mov	r0, r9
  4021ce:	f8cd c000 	str.w	ip, [sp]
  4021d2:	f000 fcab 	bl	402b2c <_realloc_r>
  4021d6:	f8dd c000 	ldr.w	ip, [sp]
  4021da:	4683      	mov	fp, r0
  4021dc:	2800      	cmp	r0, #0
  4021de:	d1be      	bne.n	40215e <__sfvwrite_r+0x25e>
  4021e0:	4648      	mov	r0, r9
  4021e2:	6921      	ldr	r1, [r4, #16]
  4021e4:	f7ff fdbe 	bl	401d64 <_free_r>
  4021e8:	89a3      	ldrh	r3, [r4, #12]
  4021ea:	220c      	movs	r2, #12
  4021ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4021f0:	b29b      	uxth	r3, r3
  4021f2:	f8c9 2000 	str.w	r2, [r9]
  4021f6:	e701      	b.n	401ffc <__sfvwrite_r+0xfc>
  4021f8:	2701      	movs	r7, #1
  4021fa:	f108 0a01 	add.w	sl, r8, #1
  4021fe:	9701      	str	r7, [sp, #4]
  402200:	e70e      	b.n	402020 <__sfvwrite_r+0x120>
  402202:	f04f 30ff 	mov.w	r0, #4294967295
  402206:	e6aa      	b.n	401f5e <__sfvwrite_r+0x5e>
  402208:	230c      	movs	r3, #12
  40220a:	f8c9 3000 	str.w	r3, [r9]
  40220e:	89a3      	ldrh	r3, [r4, #12]
  402210:	e6f4      	b.n	401ffc <__sfvwrite_r+0xfc>
  402212:	bf00      	nop
  402214:	7ffffc00 	.word	0x7ffffc00

00402218 <_fwalk>:
  402218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40221c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402220:	4688      	mov	r8, r1
  402222:	d01a      	beq.n	40225a <_fwalk+0x42>
  402224:	2600      	movs	r6, #0
  402226:	687d      	ldr	r5, [r7, #4]
  402228:	68bc      	ldr	r4, [r7, #8]
  40222a:	3d01      	subs	r5, #1
  40222c:	d40f      	bmi.n	40224e <_fwalk+0x36>
  40222e:	89a3      	ldrh	r3, [r4, #12]
  402230:	2b01      	cmp	r3, #1
  402232:	f105 35ff 	add.w	r5, r5, #4294967295
  402236:	d906      	bls.n	402246 <_fwalk+0x2e>
  402238:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40223c:	3301      	adds	r3, #1
  40223e:	4620      	mov	r0, r4
  402240:	d001      	beq.n	402246 <_fwalk+0x2e>
  402242:	47c0      	blx	r8
  402244:	4306      	orrs	r6, r0
  402246:	1c6b      	adds	r3, r5, #1
  402248:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40224c:	d1ef      	bne.n	40222e <_fwalk+0x16>
  40224e:	683f      	ldr	r7, [r7, #0]
  402250:	2f00      	cmp	r7, #0
  402252:	d1e8      	bne.n	402226 <_fwalk+0xe>
  402254:	4630      	mov	r0, r6
  402256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40225a:	463e      	mov	r6, r7
  40225c:	4630      	mov	r0, r6
  40225e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402262:	bf00      	nop

00402264 <__locale_charset>:
  402264:	4800      	ldr	r0, [pc, #0]	; (402268 <__locale_charset+0x4>)
  402266:	4770      	bx	lr
  402268:	20000434 	.word	0x20000434

0040226c <__locale_mb_cur_max>:
  40226c:	4b01      	ldr	r3, [pc, #4]	; (402274 <__locale_mb_cur_max+0x8>)
  40226e:	6818      	ldr	r0, [r3, #0]
  402270:	4770      	bx	lr
  402272:	bf00      	nop
  402274:	20000454 	.word	0x20000454

00402278 <__smakebuf_r>:
  402278:	b5f0      	push	{r4, r5, r6, r7, lr}
  40227a:	898b      	ldrh	r3, [r1, #12]
  40227c:	b29a      	uxth	r2, r3
  40227e:	0796      	lsls	r6, r2, #30
  402280:	b091      	sub	sp, #68	; 0x44
  402282:	460c      	mov	r4, r1
  402284:	4605      	mov	r5, r0
  402286:	d437      	bmi.n	4022f8 <__smakebuf_r+0x80>
  402288:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40228c:	2900      	cmp	r1, #0
  40228e:	db17      	blt.n	4022c0 <__smakebuf_r+0x48>
  402290:	aa01      	add	r2, sp, #4
  402292:	f001 f801 	bl	403298 <_fstat_r>
  402296:	2800      	cmp	r0, #0
  402298:	db10      	blt.n	4022bc <__smakebuf_r+0x44>
  40229a:	9b02      	ldr	r3, [sp, #8]
  40229c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  4022a0:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
  4022a4:	424f      	negs	r7, r1
  4022a6:	414f      	adcs	r7, r1
  4022a8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  4022ac:	d02c      	beq.n	402308 <__smakebuf_r+0x90>
  4022ae:	89a3      	ldrh	r3, [r4, #12]
  4022b0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4022b4:	81a3      	strh	r3, [r4, #12]
  4022b6:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4022ba:	e00b      	b.n	4022d4 <__smakebuf_r+0x5c>
  4022bc:	89a3      	ldrh	r3, [r4, #12]
  4022be:	b29a      	uxth	r2, r3
  4022c0:	f012 0f80 	tst.w	r2, #128	; 0x80
  4022c4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4022c8:	81a3      	strh	r3, [r4, #12]
  4022ca:	bf14      	ite	ne
  4022cc:	2640      	movne	r6, #64	; 0x40
  4022ce:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  4022d2:	2700      	movs	r7, #0
  4022d4:	4628      	mov	r0, r5
  4022d6:	4631      	mov	r1, r6
  4022d8:	f000 f846 	bl	402368 <_malloc_r>
  4022dc:	89a3      	ldrh	r3, [r4, #12]
  4022de:	2800      	cmp	r0, #0
  4022e0:	d029      	beq.n	402336 <__smakebuf_r+0xbe>
  4022e2:	4a1b      	ldr	r2, [pc, #108]	; (402350 <__smakebuf_r+0xd8>)
  4022e4:	63ea      	str	r2, [r5, #60]	; 0x3c
  4022e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4022ea:	81a3      	strh	r3, [r4, #12]
  4022ec:	6020      	str	r0, [r4, #0]
  4022ee:	6120      	str	r0, [r4, #16]
  4022f0:	6166      	str	r6, [r4, #20]
  4022f2:	b9a7      	cbnz	r7, 40231e <__smakebuf_r+0xa6>
  4022f4:	b011      	add	sp, #68	; 0x44
  4022f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4022f8:	f101 0343 	add.w	r3, r1, #67	; 0x43
  4022fc:	2201      	movs	r2, #1
  4022fe:	600b      	str	r3, [r1, #0]
  402300:	610b      	str	r3, [r1, #16]
  402302:	614a      	str	r2, [r1, #20]
  402304:	b011      	add	sp, #68	; 0x44
  402306:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402308:	4a12      	ldr	r2, [pc, #72]	; (402354 <__smakebuf_r+0xdc>)
  40230a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  40230c:	4293      	cmp	r3, r2
  40230e:	d1ce      	bne.n	4022ae <__smakebuf_r+0x36>
  402310:	89a3      	ldrh	r3, [r4, #12]
  402312:	f44f 6680 	mov.w	r6, #1024	; 0x400
  402316:	4333      	orrs	r3, r6
  402318:	81a3      	strh	r3, [r4, #12]
  40231a:	64e6      	str	r6, [r4, #76]	; 0x4c
  40231c:	e7da      	b.n	4022d4 <__smakebuf_r+0x5c>
  40231e:	4628      	mov	r0, r5
  402320:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402324:	f000 ffcc 	bl	4032c0 <_isatty_r>
  402328:	2800      	cmp	r0, #0
  40232a:	d0e3      	beq.n	4022f4 <__smakebuf_r+0x7c>
  40232c:	89a3      	ldrh	r3, [r4, #12]
  40232e:	f043 0301 	orr.w	r3, r3, #1
  402332:	81a3      	strh	r3, [r4, #12]
  402334:	e7de      	b.n	4022f4 <__smakebuf_r+0x7c>
  402336:	059a      	lsls	r2, r3, #22
  402338:	d4dc      	bmi.n	4022f4 <__smakebuf_r+0x7c>
  40233a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40233e:	f043 0302 	orr.w	r3, r3, #2
  402342:	2101      	movs	r1, #1
  402344:	81a3      	strh	r3, [r4, #12]
  402346:	6022      	str	r2, [r4, #0]
  402348:	6122      	str	r2, [r4, #16]
  40234a:	6161      	str	r1, [r4, #20]
  40234c:	e7d2      	b.n	4022f4 <__smakebuf_r+0x7c>
  40234e:	bf00      	nop
  402350:	00401ad5 	.word	0x00401ad5
  402354:	00402f79 	.word	0x00402f79

00402358 <malloc>:
  402358:	4b02      	ldr	r3, [pc, #8]	; (402364 <malloc+0xc>)
  40235a:	4601      	mov	r1, r0
  40235c:	6818      	ldr	r0, [r3, #0]
  40235e:	f000 b803 	b.w	402368 <_malloc_r>
  402362:	bf00      	nop
  402364:	20000430 	.word	0x20000430

00402368 <_malloc_r>:
  402368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40236c:	f101 050b 	add.w	r5, r1, #11
  402370:	2d16      	cmp	r5, #22
  402372:	b083      	sub	sp, #12
  402374:	4606      	mov	r6, r0
  402376:	d927      	bls.n	4023c8 <_malloc_r+0x60>
  402378:	f035 0507 	bics.w	r5, r5, #7
  40237c:	d427      	bmi.n	4023ce <_malloc_r+0x66>
  40237e:	42a9      	cmp	r1, r5
  402380:	d825      	bhi.n	4023ce <_malloc_r+0x66>
  402382:	4630      	mov	r0, r6
  402384:	f000 fbce 	bl	402b24 <__malloc_lock>
  402388:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  40238c:	d226      	bcs.n	4023dc <_malloc_r+0x74>
  40238e:	4fc1      	ldr	r7, [pc, #772]	; (402694 <_malloc_r+0x32c>)
  402390:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
  402394:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
  402398:	68dc      	ldr	r4, [r3, #12]
  40239a:	429c      	cmp	r4, r3
  40239c:	f000 81d2 	beq.w	402744 <_malloc_r+0x3dc>
  4023a0:	6863      	ldr	r3, [r4, #4]
  4023a2:	68e2      	ldr	r2, [r4, #12]
  4023a4:	68a1      	ldr	r1, [r4, #8]
  4023a6:	f023 0303 	bic.w	r3, r3, #3
  4023aa:	4423      	add	r3, r4
  4023ac:	4630      	mov	r0, r6
  4023ae:	685d      	ldr	r5, [r3, #4]
  4023b0:	60ca      	str	r2, [r1, #12]
  4023b2:	f045 0501 	orr.w	r5, r5, #1
  4023b6:	6091      	str	r1, [r2, #8]
  4023b8:	605d      	str	r5, [r3, #4]
  4023ba:	f000 fbb5 	bl	402b28 <__malloc_unlock>
  4023be:	3408      	adds	r4, #8
  4023c0:	4620      	mov	r0, r4
  4023c2:	b003      	add	sp, #12
  4023c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4023c8:	2510      	movs	r5, #16
  4023ca:	42a9      	cmp	r1, r5
  4023cc:	d9d9      	bls.n	402382 <_malloc_r+0x1a>
  4023ce:	2400      	movs	r4, #0
  4023d0:	230c      	movs	r3, #12
  4023d2:	4620      	mov	r0, r4
  4023d4:	6033      	str	r3, [r6, #0]
  4023d6:	b003      	add	sp, #12
  4023d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4023dc:	ea5f 2c55 	movs.w	ip, r5, lsr #9
  4023e0:	f000 808a 	beq.w	4024f8 <_malloc_r+0x190>
  4023e4:	f1bc 0f04 	cmp.w	ip, #4
  4023e8:	f200 8160 	bhi.w	4026ac <_malloc_r+0x344>
  4023ec:	ea4f 1c95 	mov.w	ip, r5, lsr #6
  4023f0:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
  4023f4:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4023f8:	4fa6      	ldr	r7, [pc, #664]	; (402694 <_malloc_r+0x32c>)
  4023fa:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  4023fe:	68cc      	ldr	r4, [r1, #12]
  402400:	42a1      	cmp	r1, r4
  402402:	d105      	bne.n	402410 <_malloc_r+0xa8>
  402404:	e00c      	b.n	402420 <_malloc_r+0xb8>
  402406:	2b00      	cmp	r3, #0
  402408:	da7a      	bge.n	402500 <_malloc_r+0x198>
  40240a:	68e4      	ldr	r4, [r4, #12]
  40240c:	42a1      	cmp	r1, r4
  40240e:	d007      	beq.n	402420 <_malloc_r+0xb8>
  402410:	6862      	ldr	r2, [r4, #4]
  402412:	f022 0203 	bic.w	r2, r2, #3
  402416:	1b53      	subs	r3, r2, r5
  402418:	2b0f      	cmp	r3, #15
  40241a:	ddf4      	ble.n	402406 <_malloc_r+0x9e>
  40241c:	f10c 3cff 	add.w	ip, ip, #4294967295
  402420:	f10c 0c01 	add.w	ip, ip, #1
  402424:	4b9b      	ldr	r3, [pc, #620]	; (402694 <_malloc_r+0x32c>)
  402426:	693c      	ldr	r4, [r7, #16]
  402428:	f103 0e08 	add.w	lr, r3, #8
  40242c:	4574      	cmp	r4, lr
  40242e:	f000 817e 	beq.w	40272e <_malloc_r+0x3c6>
  402432:	6861      	ldr	r1, [r4, #4]
  402434:	f021 0103 	bic.w	r1, r1, #3
  402438:	1b4a      	subs	r2, r1, r5
  40243a:	2a0f      	cmp	r2, #15
  40243c:	f300 8164 	bgt.w	402708 <_malloc_r+0x3a0>
  402440:	2a00      	cmp	r2, #0
  402442:	f8c3 e014 	str.w	lr, [r3, #20]
  402446:	f8c3 e010 	str.w	lr, [r3, #16]
  40244a:	da6a      	bge.n	402522 <_malloc_r+0x1ba>
  40244c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  402450:	f080 813a 	bcs.w	4026c8 <_malloc_r+0x360>
  402454:	08c9      	lsrs	r1, r1, #3
  402456:	eb03 00c1 	add.w	r0, r3, r1, lsl #3
  40245a:	ea4f 08a1 	mov.w	r8, r1, asr #2
  40245e:	685a      	ldr	r2, [r3, #4]
  402460:	6881      	ldr	r1, [r0, #8]
  402462:	60a1      	str	r1, [r4, #8]
  402464:	f04f 0901 	mov.w	r9, #1
  402468:	fa09 f808 	lsl.w	r8, r9, r8
  40246c:	ea48 0202 	orr.w	r2, r8, r2
  402470:	60e0      	str	r0, [r4, #12]
  402472:	605a      	str	r2, [r3, #4]
  402474:	6084      	str	r4, [r0, #8]
  402476:	60cc      	str	r4, [r1, #12]
  402478:	ea4f 03ac 	mov.w	r3, ip, asr #2
  40247c:	2001      	movs	r0, #1
  40247e:	4098      	lsls	r0, r3
  402480:	4290      	cmp	r0, r2
  402482:	d85b      	bhi.n	40253c <_malloc_r+0x1d4>
  402484:	4202      	tst	r2, r0
  402486:	d106      	bne.n	402496 <_malloc_r+0x12e>
  402488:	f02c 0c03 	bic.w	ip, ip, #3
  40248c:	0040      	lsls	r0, r0, #1
  40248e:	4202      	tst	r2, r0
  402490:	f10c 0c04 	add.w	ip, ip, #4
  402494:	d0fa      	beq.n	40248c <_malloc_r+0x124>
  402496:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
  40249a:	4644      	mov	r4, r8
  40249c:	46e1      	mov	r9, ip
  40249e:	68e3      	ldr	r3, [r4, #12]
  4024a0:	429c      	cmp	r4, r3
  4024a2:	d107      	bne.n	4024b4 <_malloc_r+0x14c>
  4024a4:	e145      	b.n	402732 <_malloc_r+0x3ca>
  4024a6:	2a00      	cmp	r2, #0
  4024a8:	f280 8156 	bge.w	402758 <_malloc_r+0x3f0>
  4024ac:	68db      	ldr	r3, [r3, #12]
  4024ae:	429c      	cmp	r4, r3
  4024b0:	f000 813f 	beq.w	402732 <_malloc_r+0x3ca>
  4024b4:	6859      	ldr	r1, [r3, #4]
  4024b6:	f021 0103 	bic.w	r1, r1, #3
  4024ba:	1b4a      	subs	r2, r1, r5
  4024bc:	2a0f      	cmp	r2, #15
  4024be:	ddf2      	ble.n	4024a6 <_malloc_r+0x13e>
  4024c0:	461c      	mov	r4, r3
  4024c2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4024c6:	f854 8f08 	ldr.w	r8, [r4, #8]!
  4024ca:	1959      	adds	r1, r3, r5
  4024cc:	f045 0901 	orr.w	r9, r5, #1
  4024d0:	f042 0501 	orr.w	r5, r2, #1
  4024d4:	f8c3 9004 	str.w	r9, [r3, #4]
  4024d8:	4630      	mov	r0, r6
  4024da:	f8c8 c00c 	str.w	ip, [r8, #12]
  4024de:	f8cc 8008 	str.w	r8, [ip, #8]
  4024e2:	6179      	str	r1, [r7, #20]
  4024e4:	6139      	str	r1, [r7, #16]
  4024e6:	f8c1 e00c 	str.w	lr, [r1, #12]
  4024ea:	f8c1 e008 	str.w	lr, [r1, #8]
  4024ee:	604d      	str	r5, [r1, #4]
  4024f0:	508a      	str	r2, [r1, r2]
  4024f2:	f000 fb19 	bl	402b28 <__malloc_unlock>
  4024f6:	e763      	b.n	4023c0 <_malloc_r+0x58>
  4024f8:	217e      	movs	r1, #126	; 0x7e
  4024fa:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
  4024fe:	e77b      	b.n	4023f8 <_malloc_r+0x90>
  402500:	4422      	add	r2, r4
  402502:	68e3      	ldr	r3, [r4, #12]
  402504:	6850      	ldr	r0, [r2, #4]
  402506:	68a1      	ldr	r1, [r4, #8]
  402508:	f040 0501 	orr.w	r5, r0, #1
  40250c:	60cb      	str	r3, [r1, #12]
  40250e:	4630      	mov	r0, r6
  402510:	6099      	str	r1, [r3, #8]
  402512:	6055      	str	r5, [r2, #4]
  402514:	f000 fb08 	bl	402b28 <__malloc_unlock>
  402518:	3408      	adds	r4, #8
  40251a:	4620      	mov	r0, r4
  40251c:	b003      	add	sp, #12
  40251e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402522:	4421      	add	r1, r4
  402524:	4630      	mov	r0, r6
  402526:	684b      	ldr	r3, [r1, #4]
  402528:	f043 0301 	orr.w	r3, r3, #1
  40252c:	604b      	str	r3, [r1, #4]
  40252e:	f000 fafb 	bl	402b28 <__malloc_unlock>
  402532:	3408      	adds	r4, #8
  402534:	4620      	mov	r0, r4
  402536:	b003      	add	sp, #12
  402538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40253c:	68bc      	ldr	r4, [r7, #8]
  40253e:	6863      	ldr	r3, [r4, #4]
  402540:	f023 0903 	bic.w	r9, r3, #3
  402544:	45a9      	cmp	r9, r5
  402546:	d304      	bcc.n	402552 <_malloc_r+0x1ea>
  402548:	ebc5 0309 	rsb	r3, r5, r9
  40254c:	2b0f      	cmp	r3, #15
  40254e:	f300 8091 	bgt.w	402674 <_malloc_r+0x30c>
  402552:	4b51      	ldr	r3, [pc, #324]	; (402698 <_malloc_r+0x330>)
  402554:	4a51      	ldr	r2, [pc, #324]	; (40269c <_malloc_r+0x334>)
  402556:	6819      	ldr	r1, [r3, #0]
  402558:	6813      	ldr	r3, [r2, #0]
  40255a:	3301      	adds	r3, #1
  40255c:	eb05 0a01 	add.w	sl, r5, r1
  402560:	eb04 0b09 	add.w	fp, r4, r9
  402564:	f000 8161 	beq.w	40282a <_malloc_r+0x4c2>
  402568:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
  40256c:	f10a 0a0f 	add.w	sl, sl, #15
  402570:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
  402574:	f02a 0a0f 	bic.w	sl, sl, #15
  402578:	4630      	mov	r0, r6
  40257a:	4651      	mov	r1, sl
  40257c:	9201      	str	r2, [sp, #4]
  40257e:	f000 fcbb 	bl	402ef8 <_sbrk_r>
  402582:	f1b0 3fff 	cmp.w	r0, #4294967295
  402586:	4680      	mov	r8, r0
  402588:	9a01      	ldr	r2, [sp, #4]
  40258a:	f000 8100 	beq.w	40278e <_malloc_r+0x426>
  40258e:	4583      	cmp	fp, r0
  402590:	f200 80fa 	bhi.w	402788 <_malloc_r+0x420>
  402594:	f8df c110 	ldr.w	ip, [pc, #272]	; 4026a8 <_malloc_r+0x340>
  402598:	f8dc 3000 	ldr.w	r3, [ip]
  40259c:	45c3      	cmp	fp, r8
  40259e:	4453      	add	r3, sl
  4025a0:	f8cc 3000 	str.w	r3, [ip]
  4025a4:	f000 814a 	beq.w	40283c <_malloc_r+0x4d4>
  4025a8:	6812      	ldr	r2, [r2, #0]
  4025aa:	493c      	ldr	r1, [pc, #240]	; (40269c <_malloc_r+0x334>)
  4025ac:	3201      	adds	r2, #1
  4025ae:	bf1b      	ittet	ne
  4025b0:	ebcb 0b08 	rsbne	fp, fp, r8
  4025b4:	445b      	addne	r3, fp
  4025b6:	f8c1 8000 	streq.w	r8, [r1]
  4025ba:	f8cc 3000 	strne.w	r3, [ip]
  4025be:	f018 0307 	ands.w	r3, r8, #7
  4025c2:	f000 8113 	beq.w	4027ec <_malloc_r+0x484>
  4025c6:	f1c3 0208 	rsb	r2, r3, #8
  4025ca:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
  4025ce:	4490      	add	r8, r2
  4025d0:	3308      	adds	r3, #8
  4025d2:	44c2      	add	sl, r8
  4025d4:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
  4025d8:	ebca 0a03 	rsb	sl, sl, r3
  4025dc:	4651      	mov	r1, sl
  4025de:	4630      	mov	r0, r6
  4025e0:	f8cd c004 	str.w	ip, [sp, #4]
  4025e4:	f000 fc88 	bl	402ef8 <_sbrk_r>
  4025e8:	1c43      	adds	r3, r0, #1
  4025ea:	f8dd c004 	ldr.w	ip, [sp, #4]
  4025ee:	f000 8135 	beq.w	40285c <_malloc_r+0x4f4>
  4025f2:	ebc8 0200 	rsb	r2, r8, r0
  4025f6:	4452      	add	r2, sl
  4025f8:	f042 0201 	orr.w	r2, r2, #1
  4025fc:	f8dc 3000 	ldr.w	r3, [ip]
  402600:	f8c7 8008 	str.w	r8, [r7, #8]
  402604:	4453      	add	r3, sl
  402606:	42bc      	cmp	r4, r7
  402608:	f8c8 2004 	str.w	r2, [r8, #4]
  40260c:	f8cc 3000 	str.w	r3, [ip]
  402610:	f8df a094 	ldr.w	sl, [pc, #148]	; 4026a8 <_malloc_r+0x340>
  402614:	d015      	beq.n	402642 <_malloc_r+0x2da>
  402616:	f1b9 0f0f 	cmp.w	r9, #15
  40261a:	f240 80ea 	bls.w	4027f2 <_malloc_r+0x48a>
  40261e:	6861      	ldr	r1, [r4, #4]
  402620:	f1a9 020c 	sub.w	r2, r9, #12
  402624:	f022 0207 	bic.w	r2, r2, #7
  402628:	f001 0e01 	and.w	lr, r1, #1
  40262c:	18a1      	adds	r1, r4, r2
  40262e:	2005      	movs	r0, #5
  402630:	ea42 0e0e 	orr.w	lr, r2, lr
  402634:	2a0f      	cmp	r2, #15
  402636:	f8c4 e004 	str.w	lr, [r4, #4]
  40263a:	6048      	str	r0, [r1, #4]
  40263c:	6088      	str	r0, [r1, #8]
  40263e:	f200 8111 	bhi.w	402864 <_malloc_r+0x4fc>
  402642:	4a17      	ldr	r2, [pc, #92]	; (4026a0 <_malloc_r+0x338>)
  402644:	68bc      	ldr	r4, [r7, #8]
  402646:	6811      	ldr	r1, [r2, #0]
  402648:	428b      	cmp	r3, r1
  40264a:	bf88      	it	hi
  40264c:	6013      	strhi	r3, [r2, #0]
  40264e:	4a15      	ldr	r2, [pc, #84]	; (4026a4 <_malloc_r+0x33c>)
  402650:	6811      	ldr	r1, [r2, #0]
  402652:	428b      	cmp	r3, r1
  402654:	bf88      	it	hi
  402656:	6013      	strhi	r3, [r2, #0]
  402658:	6862      	ldr	r2, [r4, #4]
  40265a:	f022 0203 	bic.w	r2, r2, #3
  40265e:	4295      	cmp	r5, r2
  402660:	ebc5 0302 	rsb	r3, r5, r2
  402664:	d801      	bhi.n	40266a <_malloc_r+0x302>
  402666:	2b0f      	cmp	r3, #15
  402668:	dc04      	bgt.n	402674 <_malloc_r+0x30c>
  40266a:	4630      	mov	r0, r6
  40266c:	f000 fa5c 	bl	402b28 <__malloc_unlock>
  402670:	2400      	movs	r4, #0
  402672:	e6a5      	b.n	4023c0 <_malloc_r+0x58>
  402674:	1962      	adds	r2, r4, r5
  402676:	f043 0301 	orr.w	r3, r3, #1
  40267a:	f045 0501 	orr.w	r5, r5, #1
  40267e:	6065      	str	r5, [r4, #4]
  402680:	4630      	mov	r0, r6
  402682:	60ba      	str	r2, [r7, #8]
  402684:	6053      	str	r3, [r2, #4]
  402686:	f000 fa4f 	bl	402b28 <__malloc_unlock>
  40268a:	3408      	adds	r4, #8
  40268c:	4620      	mov	r0, r4
  40268e:	b003      	add	sp, #12
  402690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402694:	20000458 	.word	0x20000458
  402698:	20000898 	.word	0x20000898
  40269c:	20000864 	.word	0x20000864
  4026a0:	20000894 	.word	0x20000894
  4026a4:	20000890 	.word	0x20000890
  4026a8:	2000089c 	.word	0x2000089c
  4026ac:	f1bc 0f14 	cmp.w	ip, #20
  4026b0:	d961      	bls.n	402776 <_malloc_r+0x40e>
  4026b2:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
  4026b6:	f200 808f 	bhi.w	4027d8 <_malloc_r+0x470>
  4026ba:	ea4f 3c15 	mov.w	ip, r5, lsr #12
  4026be:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
  4026c2:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4026c6:	e697      	b.n	4023f8 <_malloc_r+0x90>
  4026c8:	0a4b      	lsrs	r3, r1, #9
  4026ca:	2b04      	cmp	r3, #4
  4026cc:	d958      	bls.n	402780 <_malloc_r+0x418>
  4026ce:	2b14      	cmp	r3, #20
  4026d0:	f200 80ae 	bhi.w	402830 <_malloc_r+0x4c8>
  4026d4:	f103 025b 	add.w	r2, r3, #91	; 0x5b
  4026d8:	0050      	lsls	r0, r2, #1
  4026da:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  4026de:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 40289c <_malloc_r+0x534>
  4026e2:	6883      	ldr	r3, [r0, #8]
  4026e4:	4283      	cmp	r3, r0
  4026e6:	f000 808a 	beq.w	4027fe <_malloc_r+0x496>
  4026ea:	685a      	ldr	r2, [r3, #4]
  4026ec:	f022 0203 	bic.w	r2, r2, #3
  4026f0:	4291      	cmp	r1, r2
  4026f2:	d202      	bcs.n	4026fa <_malloc_r+0x392>
  4026f4:	689b      	ldr	r3, [r3, #8]
  4026f6:	4298      	cmp	r0, r3
  4026f8:	d1f7      	bne.n	4026ea <_malloc_r+0x382>
  4026fa:	68d9      	ldr	r1, [r3, #12]
  4026fc:	687a      	ldr	r2, [r7, #4]
  4026fe:	60e1      	str	r1, [r4, #12]
  402700:	60a3      	str	r3, [r4, #8]
  402702:	608c      	str	r4, [r1, #8]
  402704:	60dc      	str	r4, [r3, #12]
  402706:	e6b7      	b.n	402478 <_malloc_r+0x110>
  402708:	1961      	adds	r1, r4, r5
  40270a:	f042 0701 	orr.w	r7, r2, #1
  40270e:	f045 0501 	orr.w	r5, r5, #1
  402712:	6065      	str	r5, [r4, #4]
  402714:	4630      	mov	r0, r6
  402716:	6159      	str	r1, [r3, #20]
  402718:	6119      	str	r1, [r3, #16]
  40271a:	f8c1 e00c 	str.w	lr, [r1, #12]
  40271e:	f8c1 e008 	str.w	lr, [r1, #8]
  402722:	604f      	str	r7, [r1, #4]
  402724:	508a      	str	r2, [r1, r2]
  402726:	3408      	adds	r4, #8
  402728:	f000 f9fe 	bl	402b28 <__malloc_unlock>
  40272c:	e648      	b.n	4023c0 <_malloc_r+0x58>
  40272e:	685a      	ldr	r2, [r3, #4]
  402730:	e6a2      	b.n	402478 <_malloc_r+0x110>
  402732:	f109 0901 	add.w	r9, r9, #1
  402736:	f019 0f03 	tst.w	r9, #3
  40273a:	f104 0408 	add.w	r4, r4, #8
  40273e:	f47f aeae 	bne.w	40249e <_malloc_r+0x136>
  402742:	e02d      	b.n	4027a0 <_malloc_r+0x438>
  402744:	f104 0308 	add.w	r3, r4, #8
  402748:	6964      	ldr	r4, [r4, #20]
  40274a:	42a3      	cmp	r3, r4
  40274c:	bf08      	it	eq
  40274e:	f10c 0c02 	addeq.w	ip, ip, #2
  402752:	f43f ae67 	beq.w	402424 <_malloc_r+0xbc>
  402756:	e623      	b.n	4023a0 <_malloc_r+0x38>
  402758:	4419      	add	r1, r3
  40275a:	461c      	mov	r4, r3
  40275c:	6848      	ldr	r0, [r1, #4]
  40275e:	68db      	ldr	r3, [r3, #12]
  402760:	f854 2f08 	ldr.w	r2, [r4, #8]!
  402764:	f040 0501 	orr.w	r5, r0, #1
  402768:	604d      	str	r5, [r1, #4]
  40276a:	4630      	mov	r0, r6
  40276c:	60d3      	str	r3, [r2, #12]
  40276e:	609a      	str	r2, [r3, #8]
  402770:	f000 f9da 	bl	402b28 <__malloc_unlock>
  402774:	e624      	b.n	4023c0 <_malloc_r+0x58>
  402776:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
  40277a:	ea4f 014c 	mov.w	r1, ip, lsl #1
  40277e:	e63b      	b.n	4023f8 <_malloc_r+0x90>
  402780:	098a      	lsrs	r2, r1, #6
  402782:	3238      	adds	r2, #56	; 0x38
  402784:	0050      	lsls	r0, r2, #1
  402786:	e7a8      	b.n	4026da <_malloc_r+0x372>
  402788:	42bc      	cmp	r4, r7
  40278a:	f43f af03 	beq.w	402594 <_malloc_r+0x22c>
  40278e:	68bc      	ldr	r4, [r7, #8]
  402790:	6862      	ldr	r2, [r4, #4]
  402792:	f022 0203 	bic.w	r2, r2, #3
  402796:	e762      	b.n	40265e <_malloc_r+0x2f6>
  402798:	f8d8 8000 	ldr.w	r8, [r8]
  40279c:	4598      	cmp	r8, r3
  40279e:	d17b      	bne.n	402898 <_malloc_r+0x530>
  4027a0:	f01c 0f03 	tst.w	ip, #3
  4027a4:	f1a8 0308 	sub.w	r3, r8, #8
  4027a8:	f10c 3cff 	add.w	ip, ip, #4294967295
  4027ac:	d1f4      	bne.n	402798 <_malloc_r+0x430>
  4027ae:	687b      	ldr	r3, [r7, #4]
  4027b0:	ea23 0300 	bic.w	r3, r3, r0
  4027b4:	607b      	str	r3, [r7, #4]
  4027b6:	0040      	lsls	r0, r0, #1
  4027b8:	4298      	cmp	r0, r3
  4027ba:	f63f aebf 	bhi.w	40253c <_malloc_r+0x1d4>
  4027be:	2800      	cmp	r0, #0
  4027c0:	f43f aebc 	beq.w	40253c <_malloc_r+0x1d4>
  4027c4:	4203      	tst	r3, r0
  4027c6:	46cc      	mov	ip, r9
  4027c8:	f47f ae65 	bne.w	402496 <_malloc_r+0x12e>
  4027cc:	0040      	lsls	r0, r0, #1
  4027ce:	4203      	tst	r3, r0
  4027d0:	f10c 0c04 	add.w	ip, ip, #4
  4027d4:	d0fa      	beq.n	4027cc <_malloc_r+0x464>
  4027d6:	e65e      	b.n	402496 <_malloc_r+0x12e>
  4027d8:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
  4027dc:	d81a      	bhi.n	402814 <_malloc_r+0x4ac>
  4027de:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
  4027e2:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
  4027e6:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4027ea:	e605      	b.n	4023f8 <_malloc_r+0x90>
  4027ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4027f0:	e6ef      	b.n	4025d2 <_malloc_r+0x26a>
  4027f2:	2301      	movs	r3, #1
  4027f4:	f8c8 3004 	str.w	r3, [r8, #4]
  4027f8:	4644      	mov	r4, r8
  4027fa:	2200      	movs	r2, #0
  4027fc:	e72f      	b.n	40265e <_malloc_r+0x2f6>
  4027fe:	1091      	asrs	r1, r2, #2
  402800:	2001      	movs	r0, #1
  402802:	f8d8 2004 	ldr.w	r2, [r8, #4]
  402806:	fa00 f101 	lsl.w	r1, r0, r1
  40280a:	430a      	orrs	r2, r1
  40280c:	f8c8 2004 	str.w	r2, [r8, #4]
  402810:	4619      	mov	r1, r3
  402812:	e774      	b.n	4026fe <_malloc_r+0x396>
  402814:	f240 5354 	movw	r3, #1364	; 0x554
  402818:	459c      	cmp	ip, r3
  40281a:	d81b      	bhi.n	402854 <_malloc_r+0x4ec>
  40281c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  402820:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
  402824:	ea4f 014c 	mov.w	r1, ip, lsl #1
  402828:	e5e6      	b.n	4023f8 <_malloc_r+0x90>
  40282a:	f10a 0a10 	add.w	sl, sl, #16
  40282e:	e6a3      	b.n	402578 <_malloc_r+0x210>
  402830:	2b54      	cmp	r3, #84	; 0x54
  402832:	d81f      	bhi.n	402874 <_malloc_r+0x50c>
  402834:	0b0a      	lsrs	r2, r1, #12
  402836:	326e      	adds	r2, #110	; 0x6e
  402838:	0050      	lsls	r0, r2, #1
  40283a:	e74e      	b.n	4026da <_malloc_r+0x372>
  40283c:	f3cb 010b 	ubfx	r1, fp, #0, #12
  402840:	2900      	cmp	r1, #0
  402842:	f47f aeb1 	bne.w	4025a8 <_malloc_r+0x240>
  402846:	eb0a 0109 	add.w	r1, sl, r9
  40284a:	68ba      	ldr	r2, [r7, #8]
  40284c:	f041 0101 	orr.w	r1, r1, #1
  402850:	6051      	str	r1, [r2, #4]
  402852:	e6f6      	b.n	402642 <_malloc_r+0x2da>
  402854:	21fc      	movs	r1, #252	; 0xfc
  402856:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
  40285a:	e5cd      	b.n	4023f8 <_malloc_r+0x90>
  40285c:	2201      	movs	r2, #1
  40285e:	f04f 0a00 	mov.w	sl, #0
  402862:	e6cb      	b.n	4025fc <_malloc_r+0x294>
  402864:	f104 0108 	add.w	r1, r4, #8
  402868:	4630      	mov	r0, r6
  40286a:	f7ff fa7b 	bl	401d64 <_free_r>
  40286e:	f8da 3000 	ldr.w	r3, [sl]
  402872:	e6e6      	b.n	402642 <_malloc_r+0x2da>
  402874:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402878:	d803      	bhi.n	402882 <_malloc_r+0x51a>
  40287a:	0bca      	lsrs	r2, r1, #15
  40287c:	3277      	adds	r2, #119	; 0x77
  40287e:	0050      	lsls	r0, r2, #1
  402880:	e72b      	b.n	4026da <_malloc_r+0x372>
  402882:	f240 5254 	movw	r2, #1364	; 0x554
  402886:	4293      	cmp	r3, r2
  402888:	d803      	bhi.n	402892 <_malloc_r+0x52a>
  40288a:	0c8a      	lsrs	r2, r1, #18
  40288c:	327c      	adds	r2, #124	; 0x7c
  40288e:	0050      	lsls	r0, r2, #1
  402890:	e723      	b.n	4026da <_malloc_r+0x372>
  402892:	20fc      	movs	r0, #252	; 0xfc
  402894:	227e      	movs	r2, #126	; 0x7e
  402896:	e720      	b.n	4026da <_malloc_r+0x372>
  402898:	687b      	ldr	r3, [r7, #4]
  40289a:	e78c      	b.n	4027b6 <_malloc_r+0x44e>
  40289c:	20000458 	.word	0x20000458

004028a0 <memchr>:
  4028a0:	0783      	lsls	r3, r0, #30
  4028a2:	b470      	push	{r4, r5, r6}
  4028a4:	b2c9      	uxtb	r1, r1
  4028a6:	d03f      	beq.n	402928 <memchr+0x88>
  4028a8:	1e54      	subs	r4, r2, #1
  4028aa:	b32a      	cbz	r2, 4028f8 <memchr+0x58>
  4028ac:	7803      	ldrb	r3, [r0, #0]
  4028ae:	428b      	cmp	r3, r1
  4028b0:	d023      	beq.n	4028fa <memchr+0x5a>
  4028b2:	1c43      	adds	r3, r0, #1
  4028b4:	e004      	b.n	4028c0 <memchr+0x20>
  4028b6:	b1fc      	cbz	r4, 4028f8 <memchr+0x58>
  4028b8:	7804      	ldrb	r4, [r0, #0]
  4028ba:	428c      	cmp	r4, r1
  4028bc:	d01d      	beq.n	4028fa <memchr+0x5a>
  4028be:	4614      	mov	r4, r2
  4028c0:	f013 0f03 	tst.w	r3, #3
  4028c4:	4618      	mov	r0, r3
  4028c6:	f104 32ff 	add.w	r2, r4, #4294967295
  4028ca:	f103 0301 	add.w	r3, r3, #1
  4028ce:	d1f2      	bne.n	4028b6 <memchr+0x16>
  4028d0:	2c03      	cmp	r4, #3
  4028d2:	d814      	bhi.n	4028fe <memchr+0x5e>
  4028d4:	1e65      	subs	r5, r4, #1
  4028d6:	b34c      	cbz	r4, 40292c <memchr+0x8c>
  4028d8:	7803      	ldrb	r3, [r0, #0]
  4028da:	428b      	cmp	r3, r1
  4028dc:	d00d      	beq.n	4028fa <memchr+0x5a>
  4028de:	1c42      	adds	r2, r0, #1
  4028e0:	2300      	movs	r3, #0
  4028e2:	e002      	b.n	4028ea <memchr+0x4a>
  4028e4:	7804      	ldrb	r4, [r0, #0]
  4028e6:	428c      	cmp	r4, r1
  4028e8:	d007      	beq.n	4028fa <memchr+0x5a>
  4028ea:	42ab      	cmp	r3, r5
  4028ec:	4610      	mov	r0, r2
  4028ee:	f103 0301 	add.w	r3, r3, #1
  4028f2:	f102 0201 	add.w	r2, r2, #1
  4028f6:	d1f5      	bne.n	4028e4 <memchr+0x44>
  4028f8:	2000      	movs	r0, #0
  4028fa:	bc70      	pop	{r4, r5, r6}
  4028fc:	4770      	bx	lr
  4028fe:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  402902:	4603      	mov	r3, r0
  402904:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  402908:	4618      	mov	r0, r3
  40290a:	3304      	adds	r3, #4
  40290c:	6802      	ldr	r2, [r0, #0]
  40290e:	4072      	eors	r2, r6
  402910:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
  402914:	ea25 0202 	bic.w	r2, r5, r2
  402918:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40291c:	d1da      	bne.n	4028d4 <memchr+0x34>
  40291e:	3c04      	subs	r4, #4
  402920:	2c03      	cmp	r4, #3
  402922:	4618      	mov	r0, r3
  402924:	d8f0      	bhi.n	402908 <memchr+0x68>
  402926:	e7d5      	b.n	4028d4 <memchr+0x34>
  402928:	4614      	mov	r4, r2
  40292a:	e7d1      	b.n	4028d0 <memchr+0x30>
  40292c:	4620      	mov	r0, r4
  40292e:	e7e4      	b.n	4028fa <memchr+0x5a>

00402930 <memcpy>:
  402930:	4684      	mov	ip, r0
  402932:	ea41 0300 	orr.w	r3, r1, r0
  402936:	f013 0303 	ands.w	r3, r3, #3
  40293a:	d16d      	bne.n	402a18 <memcpy+0xe8>
  40293c:	3a40      	subs	r2, #64	; 0x40
  40293e:	d341      	bcc.n	4029c4 <memcpy+0x94>
  402940:	f851 3b04 	ldr.w	r3, [r1], #4
  402944:	f840 3b04 	str.w	r3, [r0], #4
  402948:	f851 3b04 	ldr.w	r3, [r1], #4
  40294c:	f840 3b04 	str.w	r3, [r0], #4
  402950:	f851 3b04 	ldr.w	r3, [r1], #4
  402954:	f840 3b04 	str.w	r3, [r0], #4
  402958:	f851 3b04 	ldr.w	r3, [r1], #4
  40295c:	f840 3b04 	str.w	r3, [r0], #4
  402960:	f851 3b04 	ldr.w	r3, [r1], #4
  402964:	f840 3b04 	str.w	r3, [r0], #4
  402968:	f851 3b04 	ldr.w	r3, [r1], #4
  40296c:	f840 3b04 	str.w	r3, [r0], #4
  402970:	f851 3b04 	ldr.w	r3, [r1], #4
  402974:	f840 3b04 	str.w	r3, [r0], #4
  402978:	f851 3b04 	ldr.w	r3, [r1], #4
  40297c:	f840 3b04 	str.w	r3, [r0], #4
  402980:	f851 3b04 	ldr.w	r3, [r1], #4
  402984:	f840 3b04 	str.w	r3, [r0], #4
  402988:	f851 3b04 	ldr.w	r3, [r1], #4
  40298c:	f840 3b04 	str.w	r3, [r0], #4
  402990:	f851 3b04 	ldr.w	r3, [r1], #4
  402994:	f840 3b04 	str.w	r3, [r0], #4
  402998:	f851 3b04 	ldr.w	r3, [r1], #4
  40299c:	f840 3b04 	str.w	r3, [r0], #4
  4029a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4029a4:	f840 3b04 	str.w	r3, [r0], #4
  4029a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4029ac:	f840 3b04 	str.w	r3, [r0], #4
  4029b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4029b4:	f840 3b04 	str.w	r3, [r0], #4
  4029b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4029bc:	f840 3b04 	str.w	r3, [r0], #4
  4029c0:	3a40      	subs	r2, #64	; 0x40
  4029c2:	d2bd      	bcs.n	402940 <memcpy+0x10>
  4029c4:	3230      	adds	r2, #48	; 0x30
  4029c6:	d311      	bcc.n	4029ec <memcpy+0xbc>
  4029c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4029cc:	f840 3b04 	str.w	r3, [r0], #4
  4029d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4029d4:	f840 3b04 	str.w	r3, [r0], #4
  4029d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4029dc:	f840 3b04 	str.w	r3, [r0], #4
  4029e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4029e4:	f840 3b04 	str.w	r3, [r0], #4
  4029e8:	3a10      	subs	r2, #16
  4029ea:	d2ed      	bcs.n	4029c8 <memcpy+0x98>
  4029ec:	320c      	adds	r2, #12
  4029ee:	d305      	bcc.n	4029fc <memcpy+0xcc>
  4029f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4029f4:	f840 3b04 	str.w	r3, [r0], #4
  4029f8:	3a04      	subs	r2, #4
  4029fa:	d2f9      	bcs.n	4029f0 <memcpy+0xc0>
  4029fc:	3204      	adds	r2, #4
  4029fe:	d008      	beq.n	402a12 <memcpy+0xe2>
  402a00:	07d2      	lsls	r2, r2, #31
  402a02:	bf1c      	itt	ne
  402a04:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402a08:	f800 3b01 	strbne.w	r3, [r0], #1
  402a0c:	d301      	bcc.n	402a12 <memcpy+0xe2>
  402a0e:	880b      	ldrh	r3, [r1, #0]
  402a10:	8003      	strh	r3, [r0, #0]
  402a12:	4660      	mov	r0, ip
  402a14:	4770      	bx	lr
  402a16:	bf00      	nop
  402a18:	2a08      	cmp	r2, #8
  402a1a:	d313      	bcc.n	402a44 <memcpy+0x114>
  402a1c:	078b      	lsls	r3, r1, #30
  402a1e:	d08d      	beq.n	40293c <memcpy+0xc>
  402a20:	f010 0303 	ands.w	r3, r0, #3
  402a24:	d08a      	beq.n	40293c <memcpy+0xc>
  402a26:	f1c3 0304 	rsb	r3, r3, #4
  402a2a:	1ad2      	subs	r2, r2, r3
  402a2c:	07db      	lsls	r3, r3, #31
  402a2e:	bf1c      	itt	ne
  402a30:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402a34:	f800 3b01 	strbne.w	r3, [r0], #1
  402a38:	d380      	bcc.n	40293c <memcpy+0xc>
  402a3a:	f831 3b02 	ldrh.w	r3, [r1], #2
  402a3e:	f820 3b02 	strh.w	r3, [r0], #2
  402a42:	e77b      	b.n	40293c <memcpy+0xc>
  402a44:	3a04      	subs	r2, #4
  402a46:	d3d9      	bcc.n	4029fc <memcpy+0xcc>
  402a48:	3a01      	subs	r2, #1
  402a4a:	f811 3b01 	ldrb.w	r3, [r1], #1
  402a4e:	f800 3b01 	strb.w	r3, [r0], #1
  402a52:	d2f9      	bcs.n	402a48 <memcpy+0x118>
  402a54:	780b      	ldrb	r3, [r1, #0]
  402a56:	7003      	strb	r3, [r0, #0]
  402a58:	784b      	ldrb	r3, [r1, #1]
  402a5a:	7043      	strb	r3, [r0, #1]
  402a5c:	788b      	ldrb	r3, [r1, #2]
  402a5e:	7083      	strb	r3, [r0, #2]
  402a60:	4660      	mov	r0, ip
  402a62:	4770      	bx	lr

00402a64 <memmove>:
  402a64:	4288      	cmp	r0, r1
  402a66:	b4f0      	push	{r4, r5, r6, r7}
  402a68:	d910      	bls.n	402a8c <memmove+0x28>
  402a6a:	188c      	adds	r4, r1, r2
  402a6c:	42a0      	cmp	r0, r4
  402a6e:	d20d      	bcs.n	402a8c <memmove+0x28>
  402a70:	1885      	adds	r5, r0, r2
  402a72:	1e53      	subs	r3, r2, #1
  402a74:	b142      	cbz	r2, 402a88 <memmove+0x24>
  402a76:	4621      	mov	r1, r4
  402a78:	462a      	mov	r2, r5
  402a7a:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
  402a7e:	f802 4d01 	strb.w	r4, [r2, #-1]!
  402a82:	3b01      	subs	r3, #1
  402a84:	1c5c      	adds	r4, r3, #1
  402a86:	d1f8      	bne.n	402a7a <memmove+0x16>
  402a88:	bcf0      	pop	{r4, r5, r6, r7}
  402a8a:	4770      	bx	lr
  402a8c:	2a0f      	cmp	r2, #15
  402a8e:	d93f      	bls.n	402b10 <memmove+0xac>
  402a90:	ea40 0301 	orr.w	r3, r0, r1
  402a94:	079b      	lsls	r3, r3, #30
  402a96:	d13f      	bne.n	402b18 <memmove+0xb4>
  402a98:	f1a2 0710 	sub.w	r7, r2, #16
  402a9c:	093f      	lsrs	r7, r7, #4
  402a9e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
  402aa2:	3610      	adds	r6, #16
  402aa4:	460c      	mov	r4, r1
  402aa6:	4603      	mov	r3, r0
  402aa8:	6825      	ldr	r5, [r4, #0]
  402aaa:	601d      	str	r5, [r3, #0]
  402aac:	6865      	ldr	r5, [r4, #4]
  402aae:	605d      	str	r5, [r3, #4]
  402ab0:	68a5      	ldr	r5, [r4, #8]
  402ab2:	609d      	str	r5, [r3, #8]
  402ab4:	68e5      	ldr	r5, [r4, #12]
  402ab6:	60dd      	str	r5, [r3, #12]
  402ab8:	3310      	adds	r3, #16
  402aba:	42b3      	cmp	r3, r6
  402abc:	f104 0410 	add.w	r4, r4, #16
  402ac0:	d1f2      	bne.n	402aa8 <memmove+0x44>
  402ac2:	1c7b      	adds	r3, r7, #1
  402ac4:	f002 0c0f 	and.w	ip, r2, #15
  402ac8:	011b      	lsls	r3, r3, #4
  402aca:	f1bc 0f03 	cmp.w	ip, #3
  402ace:	4419      	add	r1, r3
  402ad0:	4403      	add	r3, r0
  402ad2:	d923      	bls.n	402b1c <memmove+0xb8>
  402ad4:	460e      	mov	r6, r1
  402ad6:	461d      	mov	r5, r3
  402ad8:	4664      	mov	r4, ip
  402ada:	3c04      	subs	r4, #4
  402adc:	f856 7b04 	ldr.w	r7, [r6], #4
  402ae0:	f845 7b04 	str.w	r7, [r5], #4
  402ae4:	2c03      	cmp	r4, #3
  402ae6:	d8f8      	bhi.n	402ada <memmove+0x76>
  402ae8:	f1ac 0404 	sub.w	r4, ip, #4
  402aec:	f024 0403 	bic.w	r4, r4, #3
  402af0:	3404      	adds	r4, #4
  402af2:	f002 0203 	and.w	r2, r2, #3
  402af6:	4423      	add	r3, r4
  402af8:	4421      	add	r1, r4
  402afa:	2a00      	cmp	r2, #0
  402afc:	d0c4      	beq.n	402a88 <memmove+0x24>
  402afe:	441a      	add	r2, r3
  402b00:	f811 4b01 	ldrb.w	r4, [r1], #1
  402b04:	f803 4b01 	strb.w	r4, [r3], #1
  402b08:	4293      	cmp	r3, r2
  402b0a:	d1f9      	bne.n	402b00 <memmove+0x9c>
  402b0c:	bcf0      	pop	{r4, r5, r6, r7}
  402b0e:	4770      	bx	lr
  402b10:	4603      	mov	r3, r0
  402b12:	2a00      	cmp	r2, #0
  402b14:	d1f3      	bne.n	402afe <memmove+0x9a>
  402b16:	e7b7      	b.n	402a88 <memmove+0x24>
  402b18:	4603      	mov	r3, r0
  402b1a:	e7f0      	b.n	402afe <memmove+0x9a>
  402b1c:	4662      	mov	r2, ip
  402b1e:	2a00      	cmp	r2, #0
  402b20:	d1ed      	bne.n	402afe <memmove+0x9a>
  402b22:	e7b1      	b.n	402a88 <memmove+0x24>

00402b24 <__malloc_lock>:
  402b24:	4770      	bx	lr
  402b26:	bf00      	nop

00402b28 <__malloc_unlock>:
  402b28:	4770      	bx	lr
  402b2a:	bf00      	nop

00402b2c <_realloc_r>:
  402b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402b30:	460c      	mov	r4, r1
  402b32:	b083      	sub	sp, #12
  402b34:	4690      	mov	r8, r2
  402b36:	4681      	mov	r9, r0
  402b38:	2900      	cmp	r1, #0
  402b3a:	f000 80e2 	beq.w	402d02 <_realloc_r+0x1d6>
  402b3e:	f7ff fff1 	bl	402b24 <__malloc_lock>
  402b42:	f108 060b 	add.w	r6, r8, #11
  402b46:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402b4a:	2e16      	cmp	r6, #22
  402b4c:	f023 0503 	bic.w	r5, r3, #3
  402b50:	f1a4 0708 	sub.w	r7, r4, #8
  402b54:	d84b      	bhi.n	402bee <_realloc_r+0xc2>
  402b56:	2110      	movs	r1, #16
  402b58:	460e      	mov	r6, r1
  402b5a:	45b0      	cmp	r8, r6
  402b5c:	d84c      	bhi.n	402bf8 <_realloc_r+0xcc>
  402b5e:	428d      	cmp	r5, r1
  402b60:	da78      	bge.n	402c54 <_realloc_r+0x128>
  402b62:	f8df b390 	ldr.w	fp, [pc, #912]	; 402ef4 <_realloc_r+0x3c8>
  402b66:	f8db e008 	ldr.w	lr, [fp, #8]
  402b6a:	1978      	adds	r0, r7, r5
  402b6c:	4586      	cmp	lr, r0
  402b6e:	f000 80ce 	beq.w	402d0e <_realloc_r+0x1e2>
  402b72:	6842      	ldr	r2, [r0, #4]
  402b74:	f022 0c01 	bic.w	ip, r2, #1
  402b78:	4484      	add	ip, r0
  402b7a:	f8dc c004 	ldr.w	ip, [ip, #4]
  402b7e:	f01c 0f01 	tst.w	ip, #1
  402b82:	d07a      	beq.n	402c7a <_realloc_r+0x14e>
  402b84:	2200      	movs	r2, #0
  402b86:	4610      	mov	r0, r2
  402b88:	07db      	lsls	r3, r3, #31
  402b8a:	f100 8092 	bmi.w	402cb2 <_realloc_r+0x186>
  402b8e:	f854 3c08 	ldr.w	r3, [r4, #-8]
  402b92:	ebc3 0a07 	rsb	sl, r3, r7
  402b96:	f8da 3004 	ldr.w	r3, [sl, #4]
  402b9a:	f023 0303 	bic.w	r3, r3, #3
  402b9e:	442b      	add	r3, r5
  402ba0:	b388      	cbz	r0, 402c06 <_realloc_r+0xda>
  402ba2:	4570      	cmp	r0, lr
  402ba4:	f000 80ed 	beq.w	402d82 <_realloc_r+0x256>
  402ba8:	eb02 0e03 	add.w	lr, r2, r3
  402bac:	458e      	cmp	lr, r1
  402bae:	db2a      	blt.n	402c06 <_realloc_r+0xda>
  402bb0:	68c3      	ldr	r3, [r0, #12]
  402bb2:	6882      	ldr	r2, [r0, #8]
  402bb4:	4657      	mov	r7, sl
  402bb6:	60d3      	str	r3, [r2, #12]
  402bb8:	609a      	str	r2, [r3, #8]
  402bba:	f857 1f08 	ldr.w	r1, [r7, #8]!
  402bbe:	f8da 300c 	ldr.w	r3, [sl, #12]
  402bc2:	60cb      	str	r3, [r1, #12]
  402bc4:	1f2a      	subs	r2, r5, #4
  402bc6:	2a24      	cmp	r2, #36	; 0x24
  402bc8:	6099      	str	r1, [r3, #8]
  402bca:	f200 8126 	bhi.w	402e1a <_realloc_r+0x2ee>
  402bce:	2a13      	cmp	r2, #19
  402bd0:	f240 80b3 	bls.w	402d3a <_realloc_r+0x20e>
  402bd4:	6823      	ldr	r3, [r4, #0]
  402bd6:	f8ca 3008 	str.w	r3, [sl, #8]
  402bda:	6863      	ldr	r3, [r4, #4]
  402bdc:	f8ca 300c 	str.w	r3, [sl, #12]
  402be0:	2a1b      	cmp	r2, #27
  402be2:	f200 8130 	bhi.w	402e46 <_realloc_r+0x31a>
  402be6:	3408      	adds	r4, #8
  402be8:	f10a 0310 	add.w	r3, sl, #16
  402bec:	e0a6      	b.n	402d3c <_realloc_r+0x210>
  402bee:	f026 0607 	bic.w	r6, r6, #7
  402bf2:	2e00      	cmp	r6, #0
  402bf4:	4631      	mov	r1, r6
  402bf6:	dab0      	bge.n	402b5a <_realloc_r+0x2e>
  402bf8:	230c      	movs	r3, #12
  402bfa:	2000      	movs	r0, #0
  402bfc:	f8c9 3000 	str.w	r3, [r9]
  402c00:	b003      	add	sp, #12
  402c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c06:	428b      	cmp	r3, r1
  402c08:	db53      	blt.n	402cb2 <_realloc_r+0x186>
  402c0a:	4657      	mov	r7, sl
  402c0c:	f8da 100c 	ldr.w	r1, [sl, #12]
  402c10:	f857 0f08 	ldr.w	r0, [r7, #8]!
  402c14:	1f2a      	subs	r2, r5, #4
  402c16:	2a24      	cmp	r2, #36	; 0x24
  402c18:	60c1      	str	r1, [r0, #12]
  402c1a:	6088      	str	r0, [r1, #8]
  402c1c:	f200 8109 	bhi.w	402e32 <_realloc_r+0x306>
  402c20:	2a13      	cmp	r2, #19
  402c22:	f240 8104 	bls.w	402e2e <_realloc_r+0x302>
  402c26:	6821      	ldr	r1, [r4, #0]
  402c28:	f8ca 1008 	str.w	r1, [sl, #8]
  402c2c:	6861      	ldr	r1, [r4, #4]
  402c2e:	f8ca 100c 	str.w	r1, [sl, #12]
  402c32:	2a1b      	cmp	r2, #27
  402c34:	f200 811c 	bhi.w	402e70 <_realloc_r+0x344>
  402c38:	3408      	adds	r4, #8
  402c3a:	f10a 0210 	add.w	r2, sl, #16
  402c3e:	6821      	ldr	r1, [r4, #0]
  402c40:	6011      	str	r1, [r2, #0]
  402c42:	6861      	ldr	r1, [r4, #4]
  402c44:	6051      	str	r1, [r2, #4]
  402c46:	68a1      	ldr	r1, [r4, #8]
  402c48:	6091      	str	r1, [r2, #8]
  402c4a:	461d      	mov	r5, r3
  402c4c:	f8da 3004 	ldr.w	r3, [sl, #4]
  402c50:	463c      	mov	r4, r7
  402c52:	4657      	mov	r7, sl
  402c54:	1baa      	subs	r2, r5, r6
  402c56:	2a0f      	cmp	r2, #15
  402c58:	f003 0301 	and.w	r3, r3, #1
  402c5c:	d819      	bhi.n	402c92 <_realloc_r+0x166>
  402c5e:	432b      	orrs	r3, r5
  402c60:	443d      	add	r5, r7
  402c62:	607b      	str	r3, [r7, #4]
  402c64:	686b      	ldr	r3, [r5, #4]
  402c66:	f043 0301 	orr.w	r3, r3, #1
  402c6a:	606b      	str	r3, [r5, #4]
  402c6c:	4648      	mov	r0, r9
  402c6e:	f7ff ff5b 	bl	402b28 <__malloc_unlock>
  402c72:	4620      	mov	r0, r4
  402c74:	b003      	add	sp, #12
  402c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c7a:	f022 0203 	bic.w	r2, r2, #3
  402c7e:	eb02 0c05 	add.w	ip, r2, r5
  402c82:	458c      	cmp	ip, r1
  402c84:	db80      	blt.n	402b88 <_realloc_r+0x5c>
  402c86:	68c2      	ldr	r2, [r0, #12]
  402c88:	6881      	ldr	r1, [r0, #8]
  402c8a:	4665      	mov	r5, ip
  402c8c:	60ca      	str	r2, [r1, #12]
  402c8e:	6091      	str	r1, [r2, #8]
  402c90:	e7e0      	b.n	402c54 <_realloc_r+0x128>
  402c92:	19b9      	adds	r1, r7, r6
  402c94:	f042 0001 	orr.w	r0, r2, #1
  402c98:	431e      	orrs	r6, r3
  402c9a:	440a      	add	r2, r1
  402c9c:	607e      	str	r6, [r7, #4]
  402c9e:	6048      	str	r0, [r1, #4]
  402ca0:	6853      	ldr	r3, [r2, #4]
  402ca2:	f043 0301 	orr.w	r3, r3, #1
  402ca6:	3108      	adds	r1, #8
  402ca8:	6053      	str	r3, [r2, #4]
  402caa:	4648      	mov	r0, r9
  402cac:	f7ff f85a 	bl	401d64 <_free_r>
  402cb0:	e7dc      	b.n	402c6c <_realloc_r+0x140>
  402cb2:	4641      	mov	r1, r8
  402cb4:	4648      	mov	r0, r9
  402cb6:	f7ff fb57 	bl	402368 <_malloc_r>
  402cba:	4680      	mov	r8, r0
  402cbc:	b1d0      	cbz	r0, 402cf4 <_realloc_r+0x1c8>
  402cbe:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402cc2:	f023 0201 	bic.w	r2, r3, #1
  402cc6:	443a      	add	r2, r7
  402cc8:	f1a0 0108 	sub.w	r1, r0, #8
  402ccc:	4291      	cmp	r1, r2
  402cce:	f000 809e 	beq.w	402e0e <_realloc_r+0x2e2>
  402cd2:	1f2a      	subs	r2, r5, #4
  402cd4:	2a24      	cmp	r2, #36	; 0x24
  402cd6:	d850      	bhi.n	402d7a <_realloc_r+0x24e>
  402cd8:	2a13      	cmp	r2, #19
  402cda:	d823      	bhi.n	402d24 <_realloc_r+0x1f8>
  402cdc:	4603      	mov	r3, r0
  402cde:	4622      	mov	r2, r4
  402ce0:	6811      	ldr	r1, [r2, #0]
  402ce2:	6019      	str	r1, [r3, #0]
  402ce4:	6851      	ldr	r1, [r2, #4]
  402ce6:	6059      	str	r1, [r3, #4]
  402ce8:	6892      	ldr	r2, [r2, #8]
  402cea:	609a      	str	r2, [r3, #8]
  402cec:	4621      	mov	r1, r4
  402cee:	4648      	mov	r0, r9
  402cf0:	f7ff f838 	bl	401d64 <_free_r>
  402cf4:	4648      	mov	r0, r9
  402cf6:	f7ff ff17 	bl	402b28 <__malloc_unlock>
  402cfa:	4640      	mov	r0, r8
  402cfc:	b003      	add	sp, #12
  402cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d02:	4611      	mov	r1, r2
  402d04:	b003      	add	sp, #12
  402d06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d0a:	f7ff bb2d 	b.w	402368 <_malloc_r>
  402d0e:	f8de 2004 	ldr.w	r2, [lr, #4]
  402d12:	f022 0203 	bic.w	r2, r2, #3
  402d16:	1950      	adds	r0, r2, r5
  402d18:	f106 0c10 	add.w	ip, r6, #16
  402d1c:	4560      	cmp	r0, ip
  402d1e:	da19      	bge.n	402d54 <_realloc_r+0x228>
  402d20:	4670      	mov	r0, lr
  402d22:	e731      	b.n	402b88 <_realloc_r+0x5c>
  402d24:	6823      	ldr	r3, [r4, #0]
  402d26:	6003      	str	r3, [r0, #0]
  402d28:	6863      	ldr	r3, [r4, #4]
  402d2a:	6043      	str	r3, [r0, #4]
  402d2c:	2a1b      	cmp	r2, #27
  402d2e:	d863      	bhi.n	402df8 <_realloc_r+0x2cc>
  402d30:	f100 0308 	add.w	r3, r0, #8
  402d34:	f104 0208 	add.w	r2, r4, #8
  402d38:	e7d2      	b.n	402ce0 <_realloc_r+0x1b4>
  402d3a:	463b      	mov	r3, r7
  402d3c:	6822      	ldr	r2, [r4, #0]
  402d3e:	601a      	str	r2, [r3, #0]
  402d40:	6862      	ldr	r2, [r4, #4]
  402d42:	605a      	str	r2, [r3, #4]
  402d44:	68a2      	ldr	r2, [r4, #8]
  402d46:	609a      	str	r2, [r3, #8]
  402d48:	463c      	mov	r4, r7
  402d4a:	4675      	mov	r5, lr
  402d4c:	f8da 3004 	ldr.w	r3, [sl, #4]
  402d50:	4657      	mov	r7, sl
  402d52:	e77f      	b.n	402c54 <_realloc_r+0x128>
  402d54:	4437      	add	r7, r6
  402d56:	1b83      	subs	r3, r0, r6
  402d58:	f043 0301 	orr.w	r3, r3, #1
  402d5c:	f8cb 7008 	str.w	r7, [fp, #8]
  402d60:	607b      	str	r3, [r7, #4]
  402d62:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402d66:	f003 0301 	and.w	r3, r3, #1
  402d6a:	431e      	orrs	r6, r3
  402d6c:	4648      	mov	r0, r9
  402d6e:	f844 6c04 	str.w	r6, [r4, #-4]
  402d72:	f7ff fed9 	bl	402b28 <__malloc_unlock>
  402d76:	4620      	mov	r0, r4
  402d78:	e77c      	b.n	402c74 <_realloc_r+0x148>
  402d7a:	4621      	mov	r1, r4
  402d7c:	f7ff fe72 	bl	402a64 <memmove>
  402d80:	e7b4      	b.n	402cec <_realloc_r+0x1c0>
  402d82:	eb02 0c03 	add.w	ip, r2, r3
  402d86:	f106 0210 	add.w	r2, r6, #16
  402d8a:	4594      	cmp	ip, r2
  402d8c:	f6ff af3b 	blt.w	402c06 <_realloc_r+0xda>
  402d90:	4657      	mov	r7, sl
  402d92:	f8da 300c 	ldr.w	r3, [sl, #12]
  402d96:	f857 1f08 	ldr.w	r1, [r7, #8]!
  402d9a:	1f2a      	subs	r2, r5, #4
  402d9c:	2a24      	cmp	r2, #36	; 0x24
  402d9e:	60cb      	str	r3, [r1, #12]
  402da0:	6099      	str	r1, [r3, #8]
  402da2:	f200 8087 	bhi.w	402eb4 <_realloc_r+0x388>
  402da6:	2a13      	cmp	r2, #19
  402da8:	d978      	bls.n	402e9c <_realloc_r+0x370>
  402daa:	6823      	ldr	r3, [r4, #0]
  402dac:	f8ca 3008 	str.w	r3, [sl, #8]
  402db0:	6863      	ldr	r3, [r4, #4]
  402db2:	f8ca 300c 	str.w	r3, [sl, #12]
  402db6:	2a1b      	cmp	r2, #27
  402db8:	f200 8085 	bhi.w	402ec6 <_realloc_r+0x39a>
  402dbc:	3408      	adds	r4, #8
  402dbe:	f10a 0310 	add.w	r3, sl, #16
  402dc2:	6822      	ldr	r2, [r4, #0]
  402dc4:	601a      	str	r2, [r3, #0]
  402dc6:	6862      	ldr	r2, [r4, #4]
  402dc8:	605a      	str	r2, [r3, #4]
  402dca:	68a2      	ldr	r2, [r4, #8]
  402dcc:	609a      	str	r2, [r3, #8]
  402dce:	eb0a 0306 	add.w	r3, sl, r6
  402dd2:	ebc6 020c 	rsb	r2, r6, ip
  402dd6:	f042 0201 	orr.w	r2, r2, #1
  402dda:	f8cb 3008 	str.w	r3, [fp, #8]
  402dde:	605a      	str	r2, [r3, #4]
  402de0:	f8da 3004 	ldr.w	r3, [sl, #4]
  402de4:	f003 0301 	and.w	r3, r3, #1
  402de8:	431e      	orrs	r6, r3
  402dea:	4648      	mov	r0, r9
  402dec:	f8ca 6004 	str.w	r6, [sl, #4]
  402df0:	f7ff fe9a 	bl	402b28 <__malloc_unlock>
  402df4:	4638      	mov	r0, r7
  402df6:	e73d      	b.n	402c74 <_realloc_r+0x148>
  402df8:	68a3      	ldr	r3, [r4, #8]
  402dfa:	6083      	str	r3, [r0, #8]
  402dfc:	68e3      	ldr	r3, [r4, #12]
  402dfe:	60c3      	str	r3, [r0, #12]
  402e00:	2a24      	cmp	r2, #36	; 0x24
  402e02:	d02c      	beq.n	402e5e <_realloc_r+0x332>
  402e04:	f100 0310 	add.w	r3, r0, #16
  402e08:	f104 0210 	add.w	r2, r4, #16
  402e0c:	e768      	b.n	402ce0 <_realloc_r+0x1b4>
  402e0e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  402e12:	f022 0203 	bic.w	r2, r2, #3
  402e16:	4415      	add	r5, r2
  402e18:	e71c      	b.n	402c54 <_realloc_r+0x128>
  402e1a:	4621      	mov	r1, r4
  402e1c:	4638      	mov	r0, r7
  402e1e:	4675      	mov	r5, lr
  402e20:	463c      	mov	r4, r7
  402e22:	f7ff fe1f 	bl	402a64 <memmove>
  402e26:	4657      	mov	r7, sl
  402e28:	f8da 3004 	ldr.w	r3, [sl, #4]
  402e2c:	e712      	b.n	402c54 <_realloc_r+0x128>
  402e2e:	463a      	mov	r2, r7
  402e30:	e705      	b.n	402c3e <_realloc_r+0x112>
  402e32:	4621      	mov	r1, r4
  402e34:	4638      	mov	r0, r7
  402e36:	461d      	mov	r5, r3
  402e38:	463c      	mov	r4, r7
  402e3a:	f7ff fe13 	bl	402a64 <memmove>
  402e3e:	4657      	mov	r7, sl
  402e40:	f8da 3004 	ldr.w	r3, [sl, #4]
  402e44:	e706      	b.n	402c54 <_realloc_r+0x128>
  402e46:	68a3      	ldr	r3, [r4, #8]
  402e48:	f8ca 3010 	str.w	r3, [sl, #16]
  402e4c:	68e3      	ldr	r3, [r4, #12]
  402e4e:	f8ca 3014 	str.w	r3, [sl, #20]
  402e52:	2a24      	cmp	r2, #36	; 0x24
  402e54:	d018      	beq.n	402e88 <_realloc_r+0x35c>
  402e56:	3410      	adds	r4, #16
  402e58:	f10a 0318 	add.w	r3, sl, #24
  402e5c:	e76e      	b.n	402d3c <_realloc_r+0x210>
  402e5e:	6923      	ldr	r3, [r4, #16]
  402e60:	6103      	str	r3, [r0, #16]
  402e62:	6963      	ldr	r3, [r4, #20]
  402e64:	6143      	str	r3, [r0, #20]
  402e66:	f104 0218 	add.w	r2, r4, #24
  402e6a:	f100 0318 	add.w	r3, r0, #24
  402e6e:	e737      	b.n	402ce0 <_realloc_r+0x1b4>
  402e70:	68a1      	ldr	r1, [r4, #8]
  402e72:	f8ca 1010 	str.w	r1, [sl, #16]
  402e76:	68e1      	ldr	r1, [r4, #12]
  402e78:	f8ca 1014 	str.w	r1, [sl, #20]
  402e7c:	2a24      	cmp	r2, #36	; 0x24
  402e7e:	d00f      	beq.n	402ea0 <_realloc_r+0x374>
  402e80:	3410      	adds	r4, #16
  402e82:	f10a 0218 	add.w	r2, sl, #24
  402e86:	e6da      	b.n	402c3e <_realloc_r+0x112>
  402e88:	6923      	ldr	r3, [r4, #16]
  402e8a:	f8ca 3018 	str.w	r3, [sl, #24]
  402e8e:	6963      	ldr	r3, [r4, #20]
  402e90:	f8ca 301c 	str.w	r3, [sl, #28]
  402e94:	3418      	adds	r4, #24
  402e96:	f10a 0320 	add.w	r3, sl, #32
  402e9a:	e74f      	b.n	402d3c <_realloc_r+0x210>
  402e9c:	463b      	mov	r3, r7
  402e9e:	e790      	b.n	402dc2 <_realloc_r+0x296>
  402ea0:	6922      	ldr	r2, [r4, #16]
  402ea2:	f8ca 2018 	str.w	r2, [sl, #24]
  402ea6:	6962      	ldr	r2, [r4, #20]
  402ea8:	f8ca 201c 	str.w	r2, [sl, #28]
  402eac:	3418      	adds	r4, #24
  402eae:	f10a 0220 	add.w	r2, sl, #32
  402eb2:	e6c4      	b.n	402c3e <_realloc_r+0x112>
  402eb4:	4621      	mov	r1, r4
  402eb6:	4638      	mov	r0, r7
  402eb8:	f8cd c004 	str.w	ip, [sp, #4]
  402ebc:	f7ff fdd2 	bl	402a64 <memmove>
  402ec0:	f8dd c004 	ldr.w	ip, [sp, #4]
  402ec4:	e783      	b.n	402dce <_realloc_r+0x2a2>
  402ec6:	68a3      	ldr	r3, [r4, #8]
  402ec8:	f8ca 3010 	str.w	r3, [sl, #16]
  402ecc:	68e3      	ldr	r3, [r4, #12]
  402ece:	f8ca 3014 	str.w	r3, [sl, #20]
  402ed2:	2a24      	cmp	r2, #36	; 0x24
  402ed4:	d003      	beq.n	402ede <_realloc_r+0x3b2>
  402ed6:	3410      	adds	r4, #16
  402ed8:	f10a 0318 	add.w	r3, sl, #24
  402edc:	e771      	b.n	402dc2 <_realloc_r+0x296>
  402ede:	6923      	ldr	r3, [r4, #16]
  402ee0:	f8ca 3018 	str.w	r3, [sl, #24]
  402ee4:	6963      	ldr	r3, [r4, #20]
  402ee6:	f8ca 301c 	str.w	r3, [sl, #28]
  402eea:	3418      	adds	r4, #24
  402eec:	f10a 0320 	add.w	r3, sl, #32
  402ef0:	e767      	b.n	402dc2 <_realloc_r+0x296>
  402ef2:	bf00      	nop
  402ef4:	20000458 	.word	0x20000458

00402ef8 <_sbrk_r>:
  402ef8:	b538      	push	{r3, r4, r5, lr}
  402efa:	4c07      	ldr	r4, [pc, #28]	; (402f18 <_sbrk_r+0x20>)
  402efc:	2300      	movs	r3, #0
  402efe:	4605      	mov	r5, r0
  402f00:	4608      	mov	r0, r1
  402f02:	6023      	str	r3, [r4, #0]
  402f04:	f7fd fbde 	bl	4006c4 <_sbrk>
  402f08:	1c43      	adds	r3, r0, #1
  402f0a:	d000      	beq.n	402f0e <_sbrk_r+0x16>
  402f0c:	bd38      	pop	{r3, r4, r5, pc}
  402f0e:	6823      	ldr	r3, [r4, #0]
  402f10:	2b00      	cmp	r3, #0
  402f12:	d0fb      	beq.n	402f0c <_sbrk_r+0x14>
  402f14:	602b      	str	r3, [r5, #0]
  402f16:	bd38      	pop	{r3, r4, r5, pc}
  402f18:	200008d0 	.word	0x200008d0

00402f1c <__sread>:
  402f1c:	b510      	push	{r4, lr}
  402f1e:	460c      	mov	r4, r1
  402f20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402f24:	f000 f9f2 	bl	40330c <_read_r>
  402f28:	2800      	cmp	r0, #0
  402f2a:	db03      	blt.n	402f34 <__sread+0x18>
  402f2c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  402f2e:	4403      	add	r3, r0
  402f30:	6523      	str	r3, [r4, #80]	; 0x50
  402f32:	bd10      	pop	{r4, pc}
  402f34:	89a3      	ldrh	r3, [r4, #12]
  402f36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  402f3a:	81a3      	strh	r3, [r4, #12]
  402f3c:	bd10      	pop	{r4, pc}
  402f3e:	bf00      	nop

00402f40 <__swrite>:
  402f40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402f44:	460c      	mov	r4, r1
  402f46:	8989      	ldrh	r1, [r1, #12]
  402f48:	461d      	mov	r5, r3
  402f4a:	05cb      	lsls	r3, r1, #23
  402f4c:	4616      	mov	r6, r2
  402f4e:	4607      	mov	r7, r0
  402f50:	d506      	bpl.n	402f60 <__swrite+0x20>
  402f52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402f56:	2200      	movs	r2, #0
  402f58:	2302      	movs	r3, #2
  402f5a:	f000 f9c3 	bl	4032e4 <_lseek_r>
  402f5e:	89a1      	ldrh	r1, [r4, #12]
  402f60:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  402f64:	81a1      	strh	r1, [r4, #12]
  402f66:	4638      	mov	r0, r7
  402f68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402f6c:	4632      	mov	r2, r6
  402f6e:	462b      	mov	r3, r5
  402f70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402f74:	f000 b8ce 	b.w	403114 <_write_r>

00402f78 <__sseek>:
  402f78:	b510      	push	{r4, lr}
  402f7a:	460c      	mov	r4, r1
  402f7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402f80:	f000 f9b0 	bl	4032e4 <_lseek_r>
  402f84:	89a3      	ldrh	r3, [r4, #12]
  402f86:	1c42      	adds	r2, r0, #1
  402f88:	bf0e      	itee	eq
  402f8a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  402f8e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  402f92:	6520      	strne	r0, [r4, #80]	; 0x50
  402f94:	81a3      	strh	r3, [r4, #12]
  402f96:	bd10      	pop	{r4, pc}

00402f98 <__sclose>:
  402f98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402f9c:	f000 b922 	b.w	4031e4 <_close_r>

00402fa0 <strlen>:
  402fa0:	f020 0103 	bic.w	r1, r0, #3
  402fa4:	f010 0003 	ands.w	r0, r0, #3
  402fa8:	f1c0 0000 	rsb	r0, r0, #0
  402fac:	f851 3b04 	ldr.w	r3, [r1], #4
  402fb0:	f100 0c04 	add.w	ip, r0, #4
  402fb4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  402fb8:	f06f 0200 	mvn.w	r2, #0
  402fbc:	bf1c      	itt	ne
  402fbe:	fa22 f20c 	lsrne.w	r2, r2, ip
  402fc2:	4313      	orrne	r3, r2
  402fc4:	f04f 0c01 	mov.w	ip, #1
  402fc8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  402fcc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  402fd0:	eba3 020c 	sub.w	r2, r3, ip
  402fd4:	ea22 0203 	bic.w	r2, r2, r3
  402fd8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  402fdc:	bf04      	itt	eq
  402fde:	f851 3b04 	ldreq.w	r3, [r1], #4
  402fe2:	3004      	addeq	r0, #4
  402fe4:	d0f4      	beq.n	402fd0 <strlen+0x30>
  402fe6:	f013 0fff 	tst.w	r3, #255	; 0xff
  402fea:	bf1f      	itttt	ne
  402fec:	3001      	addne	r0, #1
  402fee:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
  402ff2:	3001      	addne	r0, #1
  402ff4:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
  402ff8:	bf18      	it	ne
  402ffa:	3001      	addne	r0, #1
  402ffc:	4770      	bx	lr
  402ffe:	bf00      	nop

00403000 <__swbuf_r>:
  403000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403002:	460d      	mov	r5, r1
  403004:	4614      	mov	r4, r2
  403006:	4607      	mov	r7, r0
  403008:	b110      	cbz	r0, 403010 <__swbuf_r+0x10>
  40300a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40300c:	2b00      	cmp	r3, #0
  40300e:	d048      	beq.n	4030a2 <__swbuf_r+0xa2>
  403010:	89a2      	ldrh	r2, [r4, #12]
  403012:	69a3      	ldr	r3, [r4, #24]
  403014:	60a3      	str	r3, [r4, #8]
  403016:	b293      	uxth	r3, r2
  403018:	0718      	lsls	r0, r3, #28
  40301a:	d538      	bpl.n	40308e <__swbuf_r+0x8e>
  40301c:	6926      	ldr	r6, [r4, #16]
  40301e:	2e00      	cmp	r6, #0
  403020:	d035      	beq.n	40308e <__swbuf_r+0x8e>
  403022:	0499      	lsls	r1, r3, #18
  403024:	b2ed      	uxtb	r5, r5
  403026:	d515      	bpl.n	403054 <__swbuf_r+0x54>
  403028:	6823      	ldr	r3, [r4, #0]
  40302a:	6962      	ldr	r2, [r4, #20]
  40302c:	1b9e      	subs	r6, r3, r6
  40302e:	4296      	cmp	r6, r2
  403030:	da1c      	bge.n	40306c <__swbuf_r+0x6c>
  403032:	3601      	adds	r6, #1
  403034:	68a2      	ldr	r2, [r4, #8]
  403036:	1c59      	adds	r1, r3, #1
  403038:	3a01      	subs	r2, #1
  40303a:	60a2      	str	r2, [r4, #8]
  40303c:	6021      	str	r1, [r4, #0]
  40303e:	701d      	strb	r5, [r3, #0]
  403040:	6963      	ldr	r3, [r4, #20]
  403042:	42b3      	cmp	r3, r6
  403044:	d01a      	beq.n	40307c <__swbuf_r+0x7c>
  403046:	89a3      	ldrh	r3, [r4, #12]
  403048:	07db      	lsls	r3, r3, #31
  40304a:	d501      	bpl.n	403050 <__swbuf_r+0x50>
  40304c:	2d0a      	cmp	r5, #10
  40304e:	d015      	beq.n	40307c <__swbuf_r+0x7c>
  403050:	4628      	mov	r0, r5
  403052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403054:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403056:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40305a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40305e:	6663      	str	r3, [r4, #100]	; 0x64
  403060:	6823      	ldr	r3, [r4, #0]
  403062:	81a2      	strh	r2, [r4, #12]
  403064:	6962      	ldr	r2, [r4, #20]
  403066:	1b9e      	subs	r6, r3, r6
  403068:	4296      	cmp	r6, r2
  40306a:	dbe2      	blt.n	403032 <__swbuf_r+0x32>
  40306c:	4638      	mov	r0, r7
  40306e:	4621      	mov	r1, r4
  403070:	f7fe fd1a 	bl	401aa8 <_fflush_r>
  403074:	b940      	cbnz	r0, 403088 <__swbuf_r+0x88>
  403076:	6823      	ldr	r3, [r4, #0]
  403078:	2601      	movs	r6, #1
  40307a:	e7db      	b.n	403034 <__swbuf_r+0x34>
  40307c:	4638      	mov	r0, r7
  40307e:	4621      	mov	r1, r4
  403080:	f7fe fd12 	bl	401aa8 <_fflush_r>
  403084:	2800      	cmp	r0, #0
  403086:	d0e3      	beq.n	403050 <__swbuf_r+0x50>
  403088:	f04f 30ff 	mov.w	r0, #4294967295
  40308c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40308e:	4638      	mov	r0, r7
  403090:	4621      	mov	r1, r4
  403092:	f7fe fbed 	bl	401870 <__swsetup_r>
  403096:	2800      	cmp	r0, #0
  403098:	d1f6      	bne.n	403088 <__swbuf_r+0x88>
  40309a:	89a2      	ldrh	r2, [r4, #12]
  40309c:	6926      	ldr	r6, [r4, #16]
  40309e:	b293      	uxth	r3, r2
  4030a0:	e7bf      	b.n	403022 <__swbuf_r+0x22>
  4030a2:	f7fe fd1d 	bl	401ae0 <__sinit>
  4030a6:	e7b3      	b.n	403010 <__swbuf_r+0x10>

004030a8 <_wcrtomb_r>:
  4030a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4030ac:	461e      	mov	r6, r3
  4030ae:	b086      	sub	sp, #24
  4030b0:	460c      	mov	r4, r1
  4030b2:	4605      	mov	r5, r0
  4030b4:	4617      	mov	r7, r2
  4030b6:	4b0f      	ldr	r3, [pc, #60]	; (4030f4 <_wcrtomb_r+0x4c>)
  4030b8:	b191      	cbz	r1, 4030e0 <_wcrtomb_r+0x38>
  4030ba:	f8d3 8000 	ldr.w	r8, [r3]
  4030be:	f7ff f8d1 	bl	402264 <__locale_charset>
  4030c2:	9600      	str	r6, [sp, #0]
  4030c4:	4603      	mov	r3, r0
  4030c6:	4621      	mov	r1, r4
  4030c8:	463a      	mov	r2, r7
  4030ca:	4628      	mov	r0, r5
  4030cc:	47c0      	blx	r8
  4030ce:	1c43      	adds	r3, r0, #1
  4030d0:	d103      	bne.n	4030da <_wcrtomb_r+0x32>
  4030d2:	2200      	movs	r2, #0
  4030d4:	238a      	movs	r3, #138	; 0x8a
  4030d6:	6032      	str	r2, [r6, #0]
  4030d8:	602b      	str	r3, [r5, #0]
  4030da:	b006      	add	sp, #24
  4030dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4030e0:	681f      	ldr	r7, [r3, #0]
  4030e2:	f7ff f8bf 	bl	402264 <__locale_charset>
  4030e6:	9600      	str	r6, [sp, #0]
  4030e8:	4603      	mov	r3, r0
  4030ea:	4622      	mov	r2, r4
  4030ec:	4628      	mov	r0, r5
  4030ee:	a903      	add	r1, sp, #12
  4030f0:	47b8      	blx	r7
  4030f2:	e7ec      	b.n	4030ce <_wcrtomb_r+0x26>
  4030f4:	20000868 	.word	0x20000868

004030f8 <__ascii_wctomb>:
  4030f8:	b121      	cbz	r1, 403104 <__ascii_wctomb+0xc>
  4030fa:	2aff      	cmp	r2, #255	; 0xff
  4030fc:	d804      	bhi.n	403108 <__ascii_wctomb+0x10>
  4030fe:	700a      	strb	r2, [r1, #0]
  403100:	2001      	movs	r0, #1
  403102:	4770      	bx	lr
  403104:	4608      	mov	r0, r1
  403106:	4770      	bx	lr
  403108:	238a      	movs	r3, #138	; 0x8a
  40310a:	6003      	str	r3, [r0, #0]
  40310c:	f04f 30ff 	mov.w	r0, #4294967295
  403110:	4770      	bx	lr
  403112:	bf00      	nop

00403114 <_write_r>:
  403114:	b570      	push	{r4, r5, r6, lr}
  403116:	4c08      	ldr	r4, [pc, #32]	; (403138 <_write_r+0x24>)
  403118:	4606      	mov	r6, r0
  40311a:	2500      	movs	r5, #0
  40311c:	4608      	mov	r0, r1
  40311e:	4611      	mov	r1, r2
  403120:	461a      	mov	r2, r3
  403122:	6025      	str	r5, [r4, #0]
  403124:	f7fd f81c 	bl	400160 <_write>
  403128:	1c43      	adds	r3, r0, #1
  40312a:	d000      	beq.n	40312e <_write_r+0x1a>
  40312c:	bd70      	pop	{r4, r5, r6, pc}
  40312e:	6823      	ldr	r3, [r4, #0]
  403130:	2b00      	cmp	r3, #0
  403132:	d0fb      	beq.n	40312c <_write_r+0x18>
  403134:	6033      	str	r3, [r6, #0]
  403136:	bd70      	pop	{r4, r5, r6, pc}
  403138:	200008d0 	.word	0x200008d0

0040313c <__register_exitproc>:
  40313c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40313e:	4c27      	ldr	r4, [pc, #156]	; (4031dc <__register_exitproc+0xa0>)
  403140:	6826      	ldr	r6, [r4, #0]
  403142:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  403146:	b085      	sub	sp, #20
  403148:	4607      	mov	r7, r0
  40314a:	2c00      	cmp	r4, #0
  40314c:	d041      	beq.n	4031d2 <__register_exitproc+0x96>
  40314e:	6865      	ldr	r5, [r4, #4]
  403150:	2d1f      	cmp	r5, #31
  403152:	dd1e      	ble.n	403192 <__register_exitproc+0x56>
  403154:	4822      	ldr	r0, [pc, #136]	; (4031e0 <__register_exitproc+0xa4>)
  403156:	b918      	cbnz	r0, 403160 <__register_exitproc+0x24>
  403158:	f04f 30ff 	mov.w	r0, #4294967295
  40315c:	b005      	add	sp, #20
  40315e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403160:	f44f 70c8 	mov.w	r0, #400	; 0x190
  403164:	9103      	str	r1, [sp, #12]
  403166:	9202      	str	r2, [sp, #8]
  403168:	9301      	str	r3, [sp, #4]
  40316a:	f7ff f8f5 	bl	402358 <malloc>
  40316e:	9903      	ldr	r1, [sp, #12]
  403170:	9a02      	ldr	r2, [sp, #8]
  403172:	9b01      	ldr	r3, [sp, #4]
  403174:	4604      	mov	r4, r0
  403176:	2800      	cmp	r0, #0
  403178:	d0ee      	beq.n	403158 <__register_exitproc+0x1c>
  40317a:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
  40317e:	6025      	str	r5, [r4, #0]
  403180:	2000      	movs	r0, #0
  403182:	6060      	str	r0, [r4, #4]
  403184:	4605      	mov	r5, r0
  403186:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  40318a:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  40318e:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  403192:	b93f      	cbnz	r7, 4031a4 <__register_exitproc+0x68>
  403194:	1cab      	adds	r3, r5, #2
  403196:	2000      	movs	r0, #0
  403198:	3501      	adds	r5, #1
  40319a:	6065      	str	r5, [r4, #4]
  40319c:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
  4031a0:	b005      	add	sp, #20
  4031a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4031a4:	eb04 0085 	add.w	r0, r4, r5, lsl #2
  4031a8:	f04f 0c01 	mov.w	ip, #1
  4031ac:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
  4031b0:	f8d4 6188 	ldr.w	r6, [r4, #392]	; 0x188
  4031b4:	fa0c f205 	lsl.w	r2, ip, r5
  4031b8:	4316      	orrs	r6, r2
  4031ba:	2f02      	cmp	r7, #2
  4031bc:	f8c4 6188 	str.w	r6, [r4, #392]	; 0x188
  4031c0:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
  4031c4:	d1e6      	bne.n	403194 <__register_exitproc+0x58>
  4031c6:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  4031ca:	431a      	orrs	r2, r3
  4031cc:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  4031d0:	e7e0      	b.n	403194 <__register_exitproc+0x58>
  4031d2:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  4031d6:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4031da:	e7b8      	b.n	40314e <__register_exitproc+0x12>
  4031dc:	004038ec 	.word	0x004038ec
  4031e0:	00402359 	.word	0x00402359

004031e4 <_close_r>:
  4031e4:	b538      	push	{r3, r4, r5, lr}
  4031e6:	4c07      	ldr	r4, [pc, #28]	; (403204 <_close_r+0x20>)
  4031e8:	2300      	movs	r3, #0
  4031ea:	4605      	mov	r5, r0
  4031ec:	4608      	mov	r0, r1
  4031ee:	6023      	str	r3, [r4, #0]
  4031f0:	f7fd fa82 	bl	4006f8 <_close>
  4031f4:	1c43      	adds	r3, r0, #1
  4031f6:	d000      	beq.n	4031fa <_close_r+0x16>
  4031f8:	bd38      	pop	{r3, r4, r5, pc}
  4031fa:	6823      	ldr	r3, [r4, #0]
  4031fc:	2b00      	cmp	r3, #0
  4031fe:	d0fb      	beq.n	4031f8 <_close_r+0x14>
  403200:	602b      	str	r3, [r5, #0]
  403202:	bd38      	pop	{r3, r4, r5, pc}
  403204:	200008d0 	.word	0x200008d0

00403208 <_fclose_r>:
  403208:	b570      	push	{r4, r5, r6, lr}
  40320a:	460c      	mov	r4, r1
  40320c:	4605      	mov	r5, r0
  40320e:	b131      	cbz	r1, 40321e <_fclose_r+0x16>
  403210:	b110      	cbz	r0, 403218 <_fclose_r+0x10>
  403212:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403214:	2b00      	cmp	r3, #0
  403216:	d02f      	beq.n	403278 <_fclose_r+0x70>
  403218:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40321c:	b90b      	cbnz	r3, 403222 <_fclose_r+0x1a>
  40321e:	2000      	movs	r0, #0
  403220:	bd70      	pop	{r4, r5, r6, pc}
  403222:	4628      	mov	r0, r5
  403224:	4621      	mov	r1, r4
  403226:	f7fe fc3f 	bl	401aa8 <_fflush_r>
  40322a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40322c:	4606      	mov	r6, r0
  40322e:	b133      	cbz	r3, 40323e <_fclose_r+0x36>
  403230:	4628      	mov	r0, r5
  403232:	69e1      	ldr	r1, [r4, #28]
  403234:	4798      	blx	r3
  403236:	2800      	cmp	r0, #0
  403238:	bfb8      	it	lt
  40323a:	f04f 36ff 	movlt.w	r6, #4294967295
  40323e:	89a3      	ldrh	r3, [r4, #12]
  403240:	061b      	lsls	r3, r3, #24
  403242:	d41c      	bmi.n	40327e <_fclose_r+0x76>
  403244:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403246:	b141      	cbz	r1, 40325a <_fclose_r+0x52>
  403248:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40324c:	4299      	cmp	r1, r3
  40324e:	d002      	beq.n	403256 <_fclose_r+0x4e>
  403250:	4628      	mov	r0, r5
  403252:	f7fe fd87 	bl	401d64 <_free_r>
  403256:	2300      	movs	r3, #0
  403258:	6323      	str	r3, [r4, #48]	; 0x30
  40325a:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40325c:	b121      	cbz	r1, 403268 <_fclose_r+0x60>
  40325e:	4628      	mov	r0, r5
  403260:	f7fe fd80 	bl	401d64 <_free_r>
  403264:	2300      	movs	r3, #0
  403266:	6463      	str	r3, [r4, #68]	; 0x44
  403268:	f7fe fcb4 	bl	401bd4 <__sfp_lock_acquire>
  40326c:	2300      	movs	r3, #0
  40326e:	81a3      	strh	r3, [r4, #12]
  403270:	f7fe fcb2 	bl	401bd8 <__sfp_lock_release>
  403274:	4630      	mov	r0, r6
  403276:	bd70      	pop	{r4, r5, r6, pc}
  403278:	f7fe fc32 	bl	401ae0 <__sinit>
  40327c:	e7cc      	b.n	403218 <_fclose_r+0x10>
  40327e:	4628      	mov	r0, r5
  403280:	6921      	ldr	r1, [r4, #16]
  403282:	f7fe fd6f 	bl	401d64 <_free_r>
  403286:	e7dd      	b.n	403244 <_fclose_r+0x3c>

00403288 <fclose>:
  403288:	4b02      	ldr	r3, [pc, #8]	; (403294 <fclose+0xc>)
  40328a:	4601      	mov	r1, r0
  40328c:	6818      	ldr	r0, [r3, #0]
  40328e:	f7ff bfbb 	b.w	403208 <_fclose_r>
  403292:	bf00      	nop
  403294:	20000430 	.word	0x20000430

00403298 <_fstat_r>:
  403298:	b538      	push	{r3, r4, r5, lr}
  40329a:	4c08      	ldr	r4, [pc, #32]	; (4032bc <_fstat_r+0x24>)
  40329c:	2300      	movs	r3, #0
  40329e:	4605      	mov	r5, r0
  4032a0:	4608      	mov	r0, r1
  4032a2:	4611      	mov	r1, r2
  4032a4:	6023      	str	r3, [r4, #0]
  4032a6:	f7fd fa2b 	bl	400700 <_fstat>
  4032aa:	1c43      	adds	r3, r0, #1
  4032ac:	d000      	beq.n	4032b0 <_fstat_r+0x18>
  4032ae:	bd38      	pop	{r3, r4, r5, pc}
  4032b0:	6823      	ldr	r3, [r4, #0]
  4032b2:	2b00      	cmp	r3, #0
  4032b4:	d0fb      	beq.n	4032ae <_fstat_r+0x16>
  4032b6:	602b      	str	r3, [r5, #0]
  4032b8:	bd38      	pop	{r3, r4, r5, pc}
  4032ba:	bf00      	nop
  4032bc:	200008d0 	.word	0x200008d0

004032c0 <_isatty_r>:
  4032c0:	b538      	push	{r3, r4, r5, lr}
  4032c2:	4c07      	ldr	r4, [pc, #28]	; (4032e0 <_isatty_r+0x20>)
  4032c4:	2300      	movs	r3, #0
  4032c6:	4605      	mov	r5, r0
  4032c8:	4608      	mov	r0, r1
  4032ca:	6023      	str	r3, [r4, #0]
  4032cc:	f7fd fa1e 	bl	40070c <_isatty>
  4032d0:	1c43      	adds	r3, r0, #1
  4032d2:	d000      	beq.n	4032d6 <_isatty_r+0x16>
  4032d4:	bd38      	pop	{r3, r4, r5, pc}
  4032d6:	6823      	ldr	r3, [r4, #0]
  4032d8:	2b00      	cmp	r3, #0
  4032da:	d0fb      	beq.n	4032d4 <_isatty_r+0x14>
  4032dc:	602b      	str	r3, [r5, #0]
  4032de:	bd38      	pop	{r3, r4, r5, pc}
  4032e0:	200008d0 	.word	0x200008d0

004032e4 <_lseek_r>:
  4032e4:	b570      	push	{r4, r5, r6, lr}
  4032e6:	4c08      	ldr	r4, [pc, #32]	; (403308 <_lseek_r+0x24>)
  4032e8:	4606      	mov	r6, r0
  4032ea:	2500      	movs	r5, #0
  4032ec:	4608      	mov	r0, r1
  4032ee:	4611      	mov	r1, r2
  4032f0:	461a      	mov	r2, r3
  4032f2:	6025      	str	r5, [r4, #0]
  4032f4:	f7fd fa0c 	bl	400710 <_lseek>
  4032f8:	1c43      	adds	r3, r0, #1
  4032fa:	d000      	beq.n	4032fe <_lseek_r+0x1a>
  4032fc:	bd70      	pop	{r4, r5, r6, pc}
  4032fe:	6823      	ldr	r3, [r4, #0]
  403300:	2b00      	cmp	r3, #0
  403302:	d0fb      	beq.n	4032fc <_lseek_r+0x18>
  403304:	6033      	str	r3, [r6, #0]
  403306:	bd70      	pop	{r4, r5, r6, pc}
  403308:	200008d0 	.word	0x200008d0

0040330c <_read_r>:
  40330c:	b570      	push	{r4, r5, r6, lr}
  40330e:	4c08      	ldr	r4, [pc, #32]	; (403330 <_read_r+0x24>)
  403310:	4606      	mov	r6, r0
  403312:	2500      	movs	r5, #0
  403314:	4608      	mov	r0, r1
  403316:	4611      	mov	r1, r2
  403318:	461a      	mov	r2, r3
  40331a:	6025      	str	r5, [r4, #0]
  40331c:	f7fc ff00 	bl	400120 <_read>
  403320:	1c43      	adds	r3, r0, #1
  403322:	d000      	beq.n	403326 <_read_r+0x1a>
  403324:	bd70      	pop	{r4, r5, r6, pc}
  403326:	6823      	ldr	r3, [r4, #0]
  403328:	2b00      	cmp	r3, #0
  40332a:	d0fb      	beq.n	403324 <_read_r+0x18>
  40332c:	6033      	str	r3, [r6, #0]
  40332e:	bd70      	pop	{r4, r5, r6, pc}
  403330:	200008d0 	.word	0x200008d0

00403334 <__aeabi_uldivmod>:
  403334:	b94b      	cbnz	r3, 40334a <__aeabi_uldivmod+0x16>
  403336:	b942      	cbnz	r2, 40334a <__aeabi_uldivmod+0x16>
  403338:	2900      	cmp	r1, #0
  40333a:	bf08      	it	eq
  40333c:	2800      	cmpeq	r0, #0
  40333e:	d002      	beq.n	403346 <__aeabi_uldivmod+0x12>
  403340:	f04f 31ff 	mov.w	r1, #4294967295
  403344:	4608      	mov	r0, r1
  403346:	f000 b83b 	b.w	4033c0 <__aeabi_idiv0>
  40334a:	b082      	sub	sp, #8
  40334c:	46ec      	mov	ip, sp
  40334e:	e92d 5000 	stmdb	sp!, {ip, lr}
  403352:	f000 f81d 	bl	403390 <__gnu_uldivmod_helper>
  403356:	f8dd e004 	ldr.w	lr, [sp, #4]
  40335a:	b002      	add	sp, #8
  40335c:	bc0c      	pop	{r2, r3}
  40335e:	4770      	bx	lr

00403360 <__gnu_ldivmod_helper>:
  403360:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  403364:	9e06      	ldr	r6, [sp, #24]
  403366:	4614      	mov	r4, r2
  403368:	461d      	mov	r5, r3
  40336a:	4680      	mov	r8, r0
  40336c:	4689      	mov	r9, r1
  40336e:	f000 f829 	bl	4033c4 <__divdi3>
  403372:	fb04 f301 	mul.w	r3, r4, r1
  403376:	fb00 3305 	mla	r3, r0, r5, r3
  40337a:	fba4 4500 	umull	r4, r5, r4, r0
  40337e:	441d      	add	r5, r3
  403380:	ebb8 0404 	subs.w	r4, r8, r4
  403384:	eb69 0505 	sbc.w	r5, r9, r5
  403388:	e9c6 4500 	strd	r4, r5, [r6]
  40338c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

00403390 <__gnu_uldivmod_helper>:
  403390:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  403394:	9e06      	ldr	r6, [sp, #24]
  403396:	4614      	mov	r4, r2
  403398:	4680      	mov	r8, r0
  40339a:	4689      	mov	r9, r1
  40339c:	461d      	mov	r5, r3
  40339e:	f000 f95d 	bl	40365c <__udivdi3>
  4033a2:	fb00 f505 	mul.w	r5, r0, r5
  4033a6:	fb04 5301 	mla	r3, r4, r1, r5
  4033aa:	fba0 4504 	umull	r4, r5, r0, r4
  4033ae:	441d      	add	r5, r3
  4033b0:	ebb8 0404 	subs.w	r4, r8, r4
  4033b4:	eb69 0505 	sbc.w	r5, r9, r5
  4033b8:	e9c6 4500 	strd	r4, r5, [r6]
  4033bc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

004033c0 <__aeabi_idiv0>:
  4033c0:	4770      	bx	lr
  4033c2:	bf00      	nop

004033c4 <__divdi3>:
  4033c4:	2900      	cmp	r1, #0
  4033c6:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4033ca:	f2c0 809f 	blt.w	40350c <__divdi3+0x148>
  4033ce:	2400      	movs	r4, #0
  4033d0:	2b00      	cmp	r3, #0
  4033d2:	f2c0 8096 	blt.w	403502 <__divdi3+0x13e>
  4033d6:	4615      	mov	r5, r2
  4033d8:	4606      	mov	r6, r0
  4033da:	460f      	mov	r7, r1
  4033dc:	2b00      	cmp	r3, #0
  4033de:	d13e      	bne.n	40345e <__divdi3+0x9a>
  4033e0:	428a      	cmp	r2, r1
  4033e2:	d957      	bls.n	403494 <__divdi3+0xd0>
  4033e4:	fab2 f382 	clz	r3, r2
  4033e8:	b14b      	cbz	r3, 4033fe <__divdi3+0x3a>
  4033ea:	f1c3 0220 	rsb	r2, r3, #32
  4033ee:	fa01 f703 	lsl.w	r7, r1, r3
  4033f2:	fa20 f202 	lsr.w	r2, r0, r2
  4033f6:	409d      	lsls	r5, r3
  4033f8:	4317      	orrs	r7, r2
  4033fa:	fa00 f603 	lsl.w	r6, r0, r3
  4033fe:	0c29      	lsrs	r1, r5, #16
  403400:	fbb7 f2f1 	udiv	r2, r7, r1
  403404:	0c33      	lsrs	r3, r6, #16
  403406:	fb01 7c12 	mls	ip, r1, r2, r7
  40340a:	b2a8      	uxth	r0, r5
  40340c:	ea43 470c 	orr.w	r7, r3, ip, lsl #16
  403410:	fb00 f302 	mul.w	r3, r0, r2
  403414:	42bb      	cmp	r3, r7
  403416:	d909      	bls.n	40342c <__divdi3+0x68>
  403418:	197f      	adds	r7, r7, r5
  40341a:	f102 3cff 	add.w	ip, r2, #4294967295
  40341e:	f080 8101 	bcs.w	403624 <__divdi3+0x260>
  403422:	42bb      	cmp	r3, r7
  403424:	f240 80fe 	bls.w	403624 <__divdi3+0x260>
  403428:	3a02      	subs	r2, #2
  40342a:	442f      	add	r7, r5
  40342c:	1aff      	subs	r7, r7, r3
  40342e:	fbb7 f3f1 	udiv	r3, r7, r1
  403432:	b2b6      	uxth	r6, r6
  403434:	fb01 7113 	mls	r1, r1, r3, r7
  403438:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
  40343c:	fb00 f003 	mul.w	r0, r0, r3
  403440:	4288      	cmp	r0, r1
  403442:	d908      	bls.n	403456 <__divdi3+0x92>
  403444:	1949      	adds	r1, r1, r5
  403446:	f103 37ff 	add.w	r7, r3, #4294967295
  40344a:	f080 80ed 	bcs.w	403628 <__divdi3+0x264>
  40344e:	4288      	cmp	r0, r1
  403450:	f240 80ea 	bls.w	403628 <__divdi3+0x264>
  403454:	3b02      	subs	r3, #2
  403456:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  40345a:	2300      	movs	r3, #0
  40345c:	e003      	b.n	403466 <__divdi3+0xa2>
  40345e:	428b      	cmp	r3, r1
  403460:	d90a      	bls.n	403478 <__divdi3+0xb4>
  403462:	2300      	movs	r3, #0
  403464:	461a      	mov	r2, r3
  403466:	4610      	mov	r0, r2
  403468:	4619      	mov	r1, r3
  40346a:	b114      	cbz	r4, 403472 <__divdi3+0xae>
  40346c:	4240      	negs	r0, r0
  40346e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403472:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403476:	4770      	bx	lr
  403478:	fab3 f883 	clz	r8, r3
  40347c:	f1b8 0f00 	cmp.w	r8, #0
  403480:	f040 8084 	bne.w	40358c <__divdi3+0x1c8>
  403484:	428b      	cmp	r3, r1
  403486:	d302      	bcc.n	40348e <__divdi3+0xca>
  403488:	4282      	cmp	r2, r0
  40348a:	f200 80de 	bhi.w	40364a <__divdi3+0x286>
  40348e:	2300      	movs	r3, #0
  403490:	2201      	movs	r2, #1
  403492:	e7e8      	b.n	403466 <__divdi3+0xa2>
  403494:	b912      	cbnz	r2, 40349c <__divdi3+0xd8>
  403496:	2301      	movs	r3, #1
  403498:	fbb3 f5f2 	udiv	r5, r3, r2
  40349c:	fab5 f285 	clz	r2, r5
  4034a0:	2a00      	cmp	r2, #0
  4034a2:	d139      	bne.n	403518 <__divdi3+0x154>
  4034a4:	1b7f      	subs	r7, r7, r5
  4034a6:	0c28      	lsrs	r0, r5, #16
  4034a8:	fa1f fc85 	uxth.w	ip, r5
  4034ac:	2301      	movs	r3, #1
  4034ae:	fbb7 f1f0 	udiv	r1, r7, r0
  4034b2:	0c32      	lsrs	r2, r6, #16
  4034b4:	fb00 7711 	mls	r7, r0, r1, r7
  4034b8:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  4034bc:	fb0c f201 	mul.w	r2, ip, r1
  4034c0:	42ba      	cmp	r2, r7
  4034c2:	d907      	bls.n	4034d4 <__divdi3+0x110>
  4034c4:	197f      	adds	r7, r7, r5
  4034c6:	f101 38ff 	add.w	r8, r1, #4294967295
  4034ca:	d202      	bcs.n	4034d2 <__divdi3+0x10e>
  4034cc:	42ba      	cmp	r2, r7
  4034ce:	f200 80c1 	bhi.w	403654 <__divdi3+0x290>
  4034d2:	4641      	mov	r1, r8
  4034d4:	1abf      	subs	r7, r7, r2
  4034d6:	fbb7 f2f0 	udiv	r2, r7, r0
  4034da:	b2b6      	uxth	r6, r6
  4034dc:	fb00 7012 	mls	r0, r0, r2, r7
  4034e0:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
  4034e4:	fb0c fc02 	mul.w	ip, ip, r2
  4034e8:	4584      	cmp	ip, r0
  4034ea:	d907      	bls.n	4034fc <__divdi3+0x138>
  4034ec:	1940      	adds	r0, r0, r5
  4034ee:	f102 37ff 	add.w	r7, r2, #4294967295
  4034f2:	d202      	bcs.n	4034fa <__divdi3+0x136>
  4034f4:	4584      	cmp	ip, r0
  4034f6:	f200 80ab 	bhi.w	403650 <__divdi3+0x28c>
  4034fa:	463a      	mov	r2, r7
  4034fc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  403500:	e7b1      	b.n	403466 <__divdi3+0xa2>
  403502:	43e4      	mvns	r4, r4
  403504:	4252      	negs	r2, r2
  403506:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40350a:	e764      	b.n	4033d6 <__divdi3+0x12>
  40350c:	4240      	negs	r0, r0
  40350e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403512:	f04f 34ff 	mov.w	r4, #4294967295
  403516:	e75b      	b.n	4033d0 <__divdi3+0xc>
  403518:	4095      	lsls	r5, r2
  40351a:	f1c2 0320 	rsb	r3, r2, #32
  40351e:	fa27 f103 	lsr.w	r1, r7, r3
  403522:	0c28      	lsrs	r0, r5, #16
  403524:	fa26 f303 	lsr.w	r3, r6, r3
  403528:	4097      	lsls	r7, r2
  40352a:	fbb1 f8f0 	udiv	r8, r1, r0
  40352e:	431f      	orrs	r7, r3
  403530:	0c3b      	lsrs	r3, r7, #16
  403532:	fb00 1118 	mls	r1, r0, r8, r1
  403536:	fa1f fc85 	uxth.w	ip, r5
  40353a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  40353e:	fb0c f308 	mul.w	r3, ip, r8
  403542:	428b      	cmp	r3, r1
  403544:	fa06 f602 	lsl.w	r6, r6, r2
  403548:	d908      	bls.n	40355c <__divdi3+0x198>
  40354a:	1949      	adds	r1, r1, r5
  40354c:	f108 32ff 	add.w	r2, r8, #4294967295
  403550:	d279      	bcs.n	403646 <__divdi3+0x282>
  403552:	428b      	cmp	r3, r1
  403554:	d977      	bls.n	403646 <__divdi3+0x282>
  403556:	f1a8 0802 	sub.w	r8, r8, #2
  40355a:	4429      	add	r1, r5
  40355c:	1ac9      	subs	r1, r1, r3
  40355e:	fbb1 f3f0 	udiv	r3, r1, r0
  403562:	b2bf      	uxth	r7, r7
  403564:	fb00 1113 	mls	r1, r0, r3, r1
  403568:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
  40356c:	fb0c f203 	mul.w	r2, ip, r3
  403570:	42ba      	cmp	r2, r7
  403572:	d907      	bls.n	403584 <__divdi3+0x1c0>
  403574:	197f      	adds	r7, r7, r5
  403576:	f103 31ff 	add.w	r1, r3, #4294967295
  40357a:	d260      	bcs.n	40363e <__divdi3+0x27a>
  40357c:	42ba      	cmp	r2, r7
  40357e:	d95e      	bls.n	40363e <__divdi3+0x27a>
  403580:	3b02      	subs	r3, #2
  403582:	442f      	add	r7, r5
  403584:	1abf      	subs	r7, r7, r2
  403586:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  40358a:	e790      	b.n	4034ae <__divdi3+0xea>
  40358c:	f1c8 0220 	rsb	r2, r8, #32
  403590:	fa03 fc08 	lsl.w	ip, r3, r8
  403594:	fa25 f302 	lsr.w	r3, r5, r2
  403598:	ea43 0c0c 	orr.w	ip, r3, ip
  40359c:	ea4f 491c 	mov.w	r9, ip, lsr #16
  4035a0:	fa21 f302 	lsr.w	r3, r1, r2
  4035a4:	fa01 f708 	lsl.w	r7, r1, r8
  4035a8:	fa20 f202 	lsr.w	r2, r0, r2
  4035ac:	fbb3 f1f9 	udiv	r1, r3, r9
  4035b0:	4317      	orrs	r7, r2
  4035b2:	fb09 3311 	mls	r3, r9, r1, r3
  4035b6:	0c3a      	lsrs	r2, r7, #16
  4035b8:	fa1f fb8c 	uxth.w	fp, ip
  4035bc:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  4035c0:	fb0b fa01 	mul.w	sl, fp, r1
  4035c4:	459a      	cmp	sl, r3
  4035c6:	fa05 f008 	lsl.w	r0, r5, r8
  4035ca:	d908      	bls.n	4035de <__divdi3+0x21a>
  4035cc:	eb13 030c 	adds.w	r3, r3, ip
  4035d0:	f101 32ff 	add.w	r2, r1, #4294967295
  4035d4:	d235      	bcs.n	403642 <__divdi3+0x27e>
  4035d6:	459a      	cmp	sl, r3
  4035d8:	d933      	bls.n	403642 <__divdi3+0x27e>
  4035da:	3902      	subs	r1, #2
  4035dc:	4463      	add	r3, ip
  4035de:	ebca 0303 	rsb	r3, sl, r3
  4035e2:	fbb3 f2f9 	udiv	r2, r3, r9
  4035e6:	fb09 3312 	mls	r3, r9, r2, r3
  4035ea:	b2bf      	uxth	r7, r7
  4035ec:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  4035f0:	fb0b f902 	mul.w	r9, fp, r2
  4035f4:	45b9      	cmp	r9, r7
  4035f6:	d908      	bls.n	40360a <__divdi3+0x246>
  4035f8:	eb17 070c 	adds.w	r7, r7, ip
  4035fc:	f102 33ff 	add.w	r3, r2, #4294967295
  403600:	d21b      	bcs.n	40363a <__divdi3+0x276>
  403602:	45b9      	cmp	r9, r7
  403604:	d919      	bls.n	40363a <__divdi3+0x276>
  403606:	3a02      	subs	r2, #2
  403608:	4467      	add	r7, ip
  40360a:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
  40360e:	fba5 0100 	umull	r0, r1, r5, r0
  403612:	ebc9 0707 	rsb	r7, r9, r7
  403616:	428f      	cmp	r7, r1
  403618:	f04f 0300 	mov.w	r3, #0
  40361c:	d30a      	bcc.n	403634 <__divdi3+0x270>
  40361e:	d005      	beq.n	40362c <__divdi3+0x268>
  403620:	462a      	mov	r2, r5
  403622:	e720      	b.n	403466 <__divdi3+0xa2>
  403624:	4662      	mov	r2, ip
  403626:	e701      	b.n	40342c <__divdi3+0x68>
  403628:	463b      	mov	r3, r7
  40362a:	e714      	b.n	403456 <__divdi3+0x92>
  40362c:	fa06 f608 	lsl.w	r6, r6, r8
  403630:	4286      	cmp	r6, r0
  403632:	d2f5      	bcs.n	403620 <__divdi3+0x25c>
  403634:	1e6a      	subs	r2, r5, #1
  403636:	2300      	movs	r3, #0
  403638:	e715      	b.n	403466 <__divdi3+0xa2>
  40363a:	461a      	mov	r2, r3
  40363c:	e7e5      	b.n	40360a <__divdi3+0x246>
  40363e:	460b      	mov	r3, r1
  403640:	e7a0      	b.n	403584 <__divdi3+0x1c0>
  403642:	4611      	mov	r1, r2
  403644:	e7cb      	b.n	4035de <__divdi3+0x21a>
  403646:	4690      	mov	r8, r2
  403648:	e788      	b.n	40355c <__divdi3+0x198>
  40364a:	4643      	mov	r3, r8
  40364c:	4642      	mov	r2, r8
  40364e:	e70a      	b.n	403466 <__divdi3+0xa2>
  403650:	3a02      	subs	r2, #2
  403652:	e753      	b.n	4034fc <__divdi3+0x138>
  403654:	3902      	subs	r1, #2
  403656:	442f      	add	r7, r5
  403658:	e73c      	b.n	4034d4 <__divdi3+0x110>
  40365a:	bf00      	nop

0040365c <__udivdi3>:
  40365c:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403660:	4614      	mov	r4, r2
  403662:	4605      	mov	r5, r0
  403664:	460e      	mov	r6, r1
  403666:	2b00      	cmp	r3, #0
  403668:	d143      	bne.n	4036f2 <__udivdi3+0x96>
  40366a:	428a      	cmp	r2, r1
  40366c:	d953      	bls.n	403716 <__udivdi3+0xba>
  40366e:	fab2 f782 	clz	r7, r2
  403672:	b157      	cbz	r7, 40368a <__udivdi3+0x2e>
  403674:	f1c7 0620 	rsb	r6, r7, #32
  403678:	fa20 f606 	lsr.w	r6, r0, r6
  40367c:	fa01 f307 	lsl.w	r3, r1, r7
  403680:	fa02 f407 	lsl.w	r4, r2, r7
  403684:	431e      	orrs	r6, r3
  403686:	fa00 f507 	lsl.w	r5, r0, r7
  40368a:	0c21      	lsrs	r1, r4, #16
  40368c:	fbb6 f2f1 	udiv	r2, r6, r1
  403690:	0c2b      	lsrs	r3, r5, #16
  403692:	fb01 6712 	mls	r7, r1, r2, r6
  403696:	b2a0      	uxth	r0, r4
  403698:	ea43 4607 	orr.w	r6, r3, r7, lsl #16
  40369c:	fb00 f302 	mul.w	r3, r0, r2
  4036a0:	42b3      	cmp	r3, r6
  4036a2:	d909      	bls.n	4036b8 <__udivdi3+0x5c>
  4036a4:	1936      	adds	r6, r6, r4
  4036a6:	f102 37ff 	add.w	r7, r2, #4294967295
  4036aa:	f080 80f6 	bcs.w	40389a <__udivdi3+0x23e>
  4036ae:	42b3      	cmp	r3, r6
  4036b0:	f240 80f3 	bls.w	40389a <__udivdi3+0x23e>
  4036b4:	3a02      	subs	r2, #2
  4036b6:	4426      	add	r6, r4
  4036b8:	1af6      	subs	r6, r6, r3
  4036ba:	fbb6 f3f1 	udiv	r3, r6, r1
  4036be:	b2ad      	uxth	r5, r5
  4036c0:	fb01 6113 	mls	r1, r1, r3, r6
  4036c4:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
  4036c8:	fb00 f003 	mul.w	r0, r0, r3
  4036cc:	4288      	cmp	r0, r1
  4036ce:	d908      	bls.n	4036e2 <__udivdi3+0x86>
  4036d0:	1909      	adds	r1, r1, r4
  4036d2:	f103 36ff 	add.w	r6, r3, #4294967295
  4036d6:	f080 80e2 	bcs.w	40389e <__udivdi3+0x242>
  4036da:	4288      	cmp	r0, r1
  4036dc:	f240 80df 	bls.w	40389e <__udivdi3+0x242>
  4036e0:	3b02      	subs	r3, #2
  4036e2:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  4036e6:	2300      	movs	r3, #0
  4036e8:	4610      	mov	r0, r2
  4036ea:	4619      	mov	r1, r3
  4036ec:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4036f0:	4770      	bx	lr
  4036f2:	428b      	cmp	r3, r1
  4036f4:	d84a      	bhi.n	40378c <__udivdi3+0x130>
  4036f6:	fab3 f683 	clz	r6, r3
  4036fa:	2e00      	cmp	r6, #0
  4036fc:	d14d      	bne.n	40379a <__udivdi3+0x13e>
  4036fe:	428b      	cmp	r3, r1
  403700:	d302      	bcc.n	403708 <__udivdi3+0xac>
  403702:	4282      	cmp	r2, r0
  403704:	f200 80d6 	bhi.w	4038b4 <__udivdi3+0x258>
  403708:	2300      	movs	r3, #0
  40370a:	2201      	movs	r2, #1
  40370c:	4610      	mov	r0, r2
  40370e:	4619      	mov	r1, r3
  403710:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403714:	4770      	bx	lr
  403716:	b912      	cbnz	r2, 40371e <__udivdi3+0xc2>
  403718:	2401      	movs	r4, #1
  40371a:	fbb4 f4f2 	udiv	r4, r4, r2
  40371e:	fab4 f284 	clz	r2, r4
  403722:	2a00      	cmp	r2, #0
  403724:	d17c      	bne.n	403820 <__udivdi3+0x1c4>
  403726:	1b09      	subs	r1, r1, r4
  403728:	0c26      	lsrs	r6, r4, #16
  40372a:	b2a7      	uxth	r7, r4
  40372c:	2301      	movs	r3, #1
  40372e:	fbb1 f0f6 	udiv	r0, r1, r6
  403732:	0c2a      	lsrs	r2, r5, #16
  403734:	fb06 1110 	mls	r1, r6, r0, r1
  403738:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
  40373c:	fb07 f200 	mul.w	r2, r7, r0
  403740:	428a      	cmp	r2, r1
  403742:	d907      	bls.n	403754 <__udivdi3+0xf8>
  403744:	1909      	adds	r1, r1, r4
  403746:	f100 3cff 	add.w	ip, r0, #4294967295
  40374a:	d202      	bcs.n	403752 <__udivdi3+0xf6>
  40374c:	428a      	cmp	r2, r1
  40374e:	f200 80c3 	bhi.w	4038d8 <__udivdi3+0x27c>
  403752:	4660      	mov	r0, ip
  403754:	1a89      	subs	r1, r1, r2
  403756:	fbb1 f2f6 	udiv	r2, r1, r6
  40375a:	b2ad      	uxth	r5, r5
  40375c:	fb06 1112 	mls	r1, r6, r2, r1
  403760:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
  403764:	fb07 f702 	mul.w	r7, r7, r2
  403768:	42af      	cmp	r7, r5
  40376a:	d908      	bls.n	40377e <__udivdi3+0x122>
  40376c:	192c      	adds	r4, r5, r4
  40376e:	f102 31ff 	add.w	r1, r2, #4294967295
  403772:	f080 8096 	bcs.w	4038a2 <__udivdi3+0x246>
  403776:	42a7      	cmp	r7, r4
  403778:	f240 8093 	bls.w	4038a2 <__udivdi3+0x246>
  40377c:	3a02      	subs	r2, #2
  40377e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  403782:	4610      	mov	r0, r2
  403784:	4619      	mov	r1, r3
  403786:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  40378a:	4770      	bx	lr
  40378c:	2300      	movs	r3, #0
  40378e:	461a      	mov	r2, r3
  403790:	4610      	mov	r0, r2
  403792:	4619      	mov	r1, r3
  403794:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403798:	4770      	bx	lr
  40379a:	f1c6 0520 	rsb	r5, r6, #32
  40379e:	fa22 f405 	lsr.w	r4, r2, r5
  4037a2:	40b3      	lsls	r3, r6
  4037a4:	431c      	orrs	r4, r3
  4037a6:	ea4f 4814 	mov.w	r8, r4, lsr #16
  4037aa:	fa21 f305 	lsr.w	r3, r1, r5
  4037ae:	fa01 f706 	lsl.w	r7, r1, r6
  4037b2:	fa20 f505 	lsr.w	r5, r0, r5
  4037b6:	fbb3 fcf8 	udiv	ip, r3, r8
  4037ba:	432f      	orrs	r7, r5
  4037bc:	fb08 331c 	mls	r3, r8, ip, r3
  4037c0:	0c3d      	lsrs	r5, r7, #16
  4037c2:	fa1f fa84 	uxth.w	sl, r4
  4037c6:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
  4037ca:	fb0a f90c 	mul.w	r9, sl, ip
  4037ce:	4599      	cmp	r9, r3
  4037d0:	fa02 fb06 	lsl.w	fp, r2, r6
  4037d4:	d904      	bls.n	4037e0 <__udivdi3+0x184>
  4037d6:	191b      	adds	r3, r3, r4
  4037d8:	f10c 32ff 	add.w	r2, ip, #4294967295
  4037dc:	d36d      	bcc.n	4038ba <__udivdi3+0x25e>
  4037de:	4694      	mov	ip, r2
  4037e0:	ebc9 0303 	rsb	r3, r9, r3
  4037e4:	fbb3 f5f8 	udiv	r5, r3, r8
  4037e8:	fb08 3315 	mls	r3, r8, r5, r3
  4037ec:	b2bf      	uxth	r7, r7
  4037ee:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  4037f2:	fb0a f805 	mul.w	r8, sl, r5
  4037f6:	45b8      	cmp	r8, r7
  4037f8:	d904      	bls.n	403804 <__udivdi3+0x1a8>
  4037fa:	193f      	adds	r7, r7, r4
  4037fc:	f105 33ff 	add.w	r3, r5, #4294967295
  403800:	d361      	bcc.n	4038c6 <__udivdi3+0x26a>
  403802:	461d      	mov	r5, r3
  403804:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
  403808:	fbac 230b 	umull	r2, r3, ip, fp
  40380c:	ebc8 0707 	rsb	r7, r8, r7
  403810:	429f      	cmp	r7, r3
  403812:	f04f 0500 	mov.w	r5, #0
  403816:	d349      	bcc.n	4038ac <__udivdi3+0x250>
  403818:	d045      	beq.n	4038a6 <__udivdi3+0x24a>
  40381a:	4662      	mov	r2, ip
  40381c:	462b      	mov	r3, r5
  40381e:	e763      	b.n	4036e8 <__udivdi3+0x8c>
  403820:	4094      	lsls	r4, r2
  403822:	f1c2 0320 	rsb	r3, r2, #32
  403826:	fa21 fc03 	lsr.w	ip, r1, r3
  40382a:	0c26      	lsrs	r6, r4, #16
  40382c:	fa20 f303 	lsr.w	r3, r0, r3
  403830:	fa01 f502 	lsl.w	r5, r1, r2
  403834:	fbbc f8f6 	udiv	r8, ip, r6
  403838:	ea43 0105 	orr.w	r1, r3, r5
  40383c:	0c0b      	lsrs	r3, r1, #16
  40383e:	fb06 cc18 	mls	ip, r6, r8, ip
  403842:	b2a7      	uxth	r7, r4
  403844:	ea43 4c0c 	orr.w	ip, r3, ip, lsl #16
  403848:	fb07 f308 	mul.w	r3, r7, r8
  40384c:	4563      	cmp	r3, ip
  40384e:	fa00 f502 	lsl.w	r5, r0, r2
  403852:	d909      	bls.n	403868 <__udivdi3+0x20c>
  403854:	eb1c 0c04 	adds.w	ip, ip, r4
  403858:	f108 32ff 	add.w	r2, r8, #4294967295
  40385c:	d23a      	bcs.n	4038d4 <__udivdi3+0x278>
  40385e:	4563      	cmp	r3, ip
  403860:	d938      	bls.n	4038d4 <__udivdi3+0x278>
  403862:	f1a8 0802 	sub.w	r8, r8, #2
  403866:	44a4      	add	ip, r4
  403868:	ebc3 0c0c 	rsb	ip, r3, ip
  40386c:	fbbc f3f6 	udiv	r3, ip, r6
  403870:	b289      	uxth	r1, r1
  403872:	fb06 cc13 	mls	ip, r6, r3, ip
  403876:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
  40387a:	fb07 f203 	mul.w	r2, r7, r3
  40387e:	428a      	cmp	r2, r1
  403880:	d907      	bls.n	403892 <__udivdi3+0x236>
  403882:	1909      	adds	r1, r1, r4
  403884:	f103 30ff 	add.w	r0, r3, #4294967295
  403888:	d222      	bcs.n	4038d0 <__udivdi3+0x274>
  40388a:	428a      	cmp	r2, r1
  40388c:	d920      	bls.n	4038d0 <__udivdi3+0x274>
  40388e:	3b02      	subs	r3, #2
  403890:	4421      	add	r1, r4
  403892:	1a89      	subs	r1, r1, r2
  403894:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  403898:	e749      	b.n	40372e <__udivdi3+0xd2>
  40389a:	463a      	mov	r2, r7
  40389c:	e70c      	b.n	4036b8 <__udivdi3+0x5c>
  40389e:	4633      	mov	r3, r6
  4038a0:	e71f      	b.n	4036e2 <__udivdi3+0x86>
  4038a2:	460a      	mov	r2, r1
  4038a4:	e76b      	b.n	40377e <__udivdi3+0x122>
  4038a6:	40b0      	lsls	r0, r6
  4038a8:	4290      	cmp	r0, r2
  4038aa:	d2b6      	bcs.n	40381a <__udivdi3+0x1be>
  4038ac:	f10c 32ff 	add.w	r2, ip, #4294967295
  4038b0:	2300      	movs	r3, #0
  4038b2:	e719      	b.n	4036e8 <__udivdi3+0x8c>
  4038b4:	4633      	mov	r3, r6
  4038b6:	4632      	mov	r2, r6
  4038b8:	e716      	b.n	4036e8 <__udivdi3+0x8c>
  4038ba:	4599      	cmp	r9, r3
  4038bc:	d98f      	bls.n	4037de <__udivdi3+0x182>
  4038be:	f1ac 0c02 	sub.w	ip, ip, #2
  4038c2:	4423      	add	r3, r4
  4038c4:	e78c      	b.n	4037e0 <__udivdi3+0x184>
  4038c6:	45b8      	cmp	r8, r7
  4038c8:	d99b      	bls.n	403802 <__udivdi3+0x1a6>
  4038ca:	3d02      	subs	r5, #2
  4038cc:	4427      	add	r7, r4
  4038ce:	e799      	b.n	403804 <__udivdi3+0x1a8>
  4038d0:	4603      	mov	r3, r0
  4038d2:	e7de      	b.n	403892 <__udivdi3+0x236>
  4038d4:	4690      	mov	r8, r2
  4038d6:	e7c7      	b.n	403868 <__udivdi3+0x20c>
  4038d8:	3802      	subs	r0, #2
  4038da:	4421      	add	r1, r4
  4038dc:	e73a      	b.n	403754 <__udivdi3+0xf8>
  4038de:	bf00      	nop
  4038e0:	54534554 	.word	0x54534554
  4038e4:	0000000a 	.word	0x0000000a
  4038e8:	00000043 	.word	0x00000043

004038ec <_global_impure_ptr>:
  4038ec:	20000008 33323130 37363534 42413938     ... 0123456789AB
  4038fc:	46454443 00000000 33323130 37363534     CDEF....01234567
  40390c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40391c:	0000296c                                l)..

00403920 <zeroes.6721>:
  403920:	30303030 30303030 30303030 30303030     0000000000000000

00403930 <blanks.6720>:
  403930:	20202020 20202020 20202020 20202020                     

00403940 <_init>:
  403940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403942:	bf00      	nop
  403944:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403946:	bc08      	pop	{r3}
  403948:	469e      	mov	lr, r3
  40394a:	4770      	bx	lr

0040394c <__init_array_start>:
  40394c:	00401935 	.word	0x00401935

00403950 <__frame_dummy_init_array_entry>:
  403950:	004000f1                                ..@.

00403954 <_fini>:
  403954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403956:	bf00      	nop
  403958:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40395a:	bc08      	pop	{r3}
  40395c:	469e      	mov	lr, r3
  40395e:	4770      	bx	lr

00403960 <__fini_array_start>:
  403960:	004000cd 	.word	0x004000cd
