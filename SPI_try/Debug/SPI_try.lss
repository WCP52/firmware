
SPI_try.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000565c  00400000  00400000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040565c  0040565c  0000d65c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000874  20000000  00405664  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000dc  20000874  00405ed8  00010874  2**2
                  ALLOC
  4 .stack        00003000  20000950  00405fb4  00010874  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00010874  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  0001089e  2**0
                  CONTENTS, READONLY
  7 .debug_info   000079a9  00000000  00000000  000108f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000016cd  00000000  00000000  000182a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00002b35  00000000  00000000  0001996f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000005f8  00000000  00000000  0001c4a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000580  00000000  00000000  0001ca9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00011cac  00000000  00000000  0001d01c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000083c9  00000000  00000000  0002ecc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004e362  00000000  00000000  00037091  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001a70  00000000  00000000  000853f4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003950 	.word	0x20003950
  400004:	00400859 	.word	0x00400859
  400008:	00400855 	.word	0x00400855
  40000c:	00400855 	.word	0x00400855
  400010:	00400855 	.word	0x00400855
  400014:	00400855 	.word	0x00400855
  400018:	00400855 	.word	0x00400855
	...
  40002c:	00400855 	.word	0x00400855
  400030:	00400855 	.word	0x00400855
  400034:	00000000 	.word	0x00000000
  400038:	00400855 	.word	0x00400855
  40003c:	00400855 	.word	0x00400855
  400040:	00400855 	.word	0x00400855
  400044:	00400855 	.word	0x00400855
  400048:	00400855 	.word	0x00400855
  40004c:	00400855 	.word	0x00400855
  400050:	00400855 	.word	0x00400855
  400054:	00400855 	.word	0x00400855
  400058:	00400855 	.word	0x00400855
  40005c:	00000000 	.word	0x00000000
  400060:	00400855 	.word	0x00400855
  400064:	00400855 	.word	0x00400855
  400068:	00000000 	.word	0x00000000
  40006c:	004005f5 	.word	0x004005f5
  400070:	00400609 	.word	0x00400609
  400074:	0040061d 	.word	0x0040061d
  400078:	00400855 	.word	0x00400855
  40007c:	00400855 	.word	0x00400855
	...
  400088:	00400855 	.word	0x00400855
  40008c:	00400855 	.word	0x00400855
  400090:	00400855 	.word	0x00400855
  400094:	00400855 	.word	0x00400855
  400098:	00400855 	.word	0x00400855
  40009c:	00400855 	.word	0x00400855
  4000a0:	00400855 	.word	0x00400855
  4000a4:	00400855 	.word	0x00400855
  4000a8:	00400855 	.word	0x00400855
  4000ac:	00400855 	.word	0x00400855
  4000b0:	00400855 	.word	0x00400855
  4000b4:	00400855 	.word	0x00400855
  4000b8:	00400855 	.word	0x00400855
  4000bc:	00400855 	.word	0x00400855
  4000c0:	00400855 	.word	0x00400855
  4000c4:	00400855 	.word	0x00400855
  4000c8:	00400855 	.word	0x00400855

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000874 	.word	0x20000874
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00405664 	.word	0x00405664

004000f0 <frame_dummy>:
  4000f0:	b508      	push	{r3, lr}
  4000f2:	4b06      	ldr	r3, [pc, #24]	; (40010c <frame_dummy+0x1c>)
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4806      	ldr	r0, [pc, #24]	; (400110 <frame_dummy+0x20>)
  4000f8:	4906      	ldr	r1, [pc, #24]	; (400114 <frame_dummy+0x24>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4806      	ldr	r0, [pc, #24]	; (400118 <frame_dummy+0x28>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b113      	cbz	r3, 40010a <frame_dummy+0x1a>
  400104:	4b05      	ldr	r3, [pc, #20]	; (40011c <frame_dummy+0x2c>)
  400106:	b103      	cbz	r3, 40010a <frame_dummy+0x1a>
  400108:	4798      	blx	r3
  40010a:	bd08      	pop	{r3, pc}
  40010c:	00000000 	.word	0x00000000
  400110:	00405664 	.word	0x00405664
  400114:	20000878 	.word	0x20000878
  400118:	00405664 	.word	0x00405664
  40011c:	00000000 	.word	0x00000000

00400120 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400120:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400122:	480e      	ldr	r0, [pc, #56]	; (40015c <sysclk_init+0x3c>)
  400124:	4b0e      	ldr	r3, [pc, #56]	; (400160 <sysclk_init+0x40>)
  400126:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400128:	2000      	movs	r0, #0
  40012a:	213e      	movs	r1, #62	; 0x3e
  40012c:	4b0d      	ldr	r3, [pc, #52]	; (400164 <sysclk_init+0x44>)
  40012e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400130:	4c0d      	ldr	r4, [pc, #52]	; (400168 <sysclk_init+0x48>)
  400132:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400134:	2800      	cmp	r0, #0
  400136:	d0fc      	beq.n	400132 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400138:	4b0c      	ldr	r3, [pc, #48]	; (40016c <sysclk_init+0x4c>)
  40013a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40013c:	4a0c      	ldr	r2, [pc, #48]	; (400170 <sysclk_init+0x50>)
  40013e:	4b0d      	ldr	r3, [pc, #52]	; (400174 <sysclk_init+0x54>)
  400140:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400142:	4c0d      	ldr	r4, [pc, #52]	; (400178 <sysclk_init+0x58>)
  400144:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400146:	2800      	cmp	r0, #0
  400148:	d0fc      	beq.n	400144 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40014a:	2010      	movs	r0, #16
  40014c:	4b0b      	ldr	r3, [pc, #44]	; (40017c <sysclk_init+0x5c>)
  40014e:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400150:	4b0b      	ldr	r3, [pc, #44]	; (400180 <sysclk_init+0x60>)
  400152:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400154:	4801      	ldr	r0, [pc, #4]	; (40015c <sysclk_init+0x3c>)
  400156:	4b02      	ldr	r3, [pc, #8]	; (400160 <sysclk_init+0x40>)
  400158:	4798      	blx	r3
  40015a:	bd10      	pop	{r4, pc}
  40015c:	07270e00 	.word	0x07270e00
  400160:	00400a21 	.word	0x00400a21
  400164:	00400695 	.word	0x00400695
  400168:	004006e9 	.word	0x004006e9
  40016c:	004006f9 	.word	0x004006f9
  400170:	20133f01 	.word	0x20133f01
  400174:	400e0400 	.word	0x400e0400
  400178:	00400709 	.word	0x00400709
  40017c:	00400631 	.word	0x00400631
  400180:	0040090d 	.word	0x0040090d

00400184 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400188:	460c      	mov	r4, r1
  40018a:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
  40018c:	b960      	cbnz	r0, 4001a8 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
  40018e:	2a00      	cmp	r2, #0
  400190:	dd0e      	ble.n	4001b0 <_read+0x2c>
  400192:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400194:	4e09      	ldr	r6, [pc, #36]	; (4001bc <_read+0x38>)
  400196:	4d0a      	ldr	r5, [pc, #40]	; (4001c0 <_read+0x3c>)
  400198:	6830      	ldr	r0, [r6, #0]
  40019a:	4621      	mov	r1, r4
  40019c:	682b      	ldr	r3, [r5, #0]
  40019e:	4798      	blx	r3
		ptr++;
  4001a0:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001a2:	42bc      	cmp	r4, r7
  4001a4:	d1f8      	bne.n	400198 <_read+0x14>
  4001a6:	e006      	b.n	4001b6 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001a8:	f04f 30ff 	mov.w	r0, #4294967295
  4001ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
  4001b0:	2000      	movs	r0, #0
  4001b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4001b6:	4640      	mov	r0, r8
	}
	return nChars;
}
  4001b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001bc:	20000944 	.word	0x20000944
  4001c0:	2000093c 	.word	0x2000093c

004001c4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001c8:	460e      	mov	r6, r1
  4001ca:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001cc:	3801      	subs	r0, #1
  4001ce:	2802      	cmp	r0, #2
  4001d0:	d80f      	bhi.n	4001f2 <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
  4001d2:	b192      	cbz	r2, 4001fa <_write+0x36>
  4001d4:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001d6:	f8df 803c 	ldr.w	r8, [pc, #60]	; 400214 <_write+0x50>
  4001da:	4f0d      	ldr	r7, [pc, #52]	; (400210 <_write+0x4c>)
  4001dc:	f8d8 0000 	ldr.w	r0, [r8]
  4001e0:	5d31      	ldrb	r1, [r6, r4]
  4001e2:	683b      	ldr	r3, [r7, #0]
  4001e4:	4798      	blx	r3
  4001e6:	2800      	cmp	r0, #0
  4001e8:	db0a      	blt.n	400200 <_write+0x3c>
			return -1;
		}
		++nChars;
  4001ea:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001ec:	42a5      	cmp	r5, r4
  4001ee:	d1f5      	bne.n	4001dc <_write+0x18>
  4001f0:	e00a      	b.n	400208 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  4001f2:	f04f 30ff 	mov.w	r0, #4294967295
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
  4001fa:	2000      	movs	r0, #0
  4001fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400200:	f04f 30ff 	mov.w	r0, #4294967295
  400204:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
  400208:	4620      	mov	r0, r4
	}
	return nChars;
}
  40020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40020e:	bf00      	nop
  400210:	20000940 	.word	0x20000940
  400214:	20000944 	.word	0x20000944

00400218 <board_init>:
#include "ioport.h"
#include "pmc.h"
#include "ioport.h"

void board_init(void)
{
  400218:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT 
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40021a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40021e:	4b16      	ldr	r3, [pc, #88]	; (400278 <board_init+0x60>)
  400220:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400222:	200b      	movs	r0, #11
  400224:	4c15      	ldr	r4, [pc, #84]	; (40027c <board_init+0x64>)
  400226:	47a0      	blx	r4
  400228:	200c      	movs	r0, #12
  40022a:	47a0      	blx	r4
  40022c:	200d      	movs	r0, #13
  40022e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400230:	204a      	movs	r0, #74	; 0x4a
  400232:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400236:	4c12      	ldr	r4, [pc, #72]	; (400280 <board_init+0x68>)
  400238:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40023a:	2051      	movs	r0, #81	; 0x51
  40023c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400240:	47a0      	blx	r4
	
	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400242:	2005      	movs	r0, #5
  400244:	490f      	ldr	r1, [pc, #60]	; (400284 <board_init+0x6c>)
  400246:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400248:	480f      	ldr	r0, [pc, #60]	; (400288 <board_init+0x70>)
  40024a:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  40024e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400252:	4b0e      	ldr	r3, [pc, #56]	; (40028c <board_init+0x74>)
  400254:	4798      	blx	r3
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400256:	200c      	movs	r0, #12
  400258:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40025c:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  40025e:	200d      	movs	r0, #13
  400260:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400264:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400266:	200e      	movs	r0, #14
  400268:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40026c:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and 
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */
	
	#ifdef CONF_BOARD_SPI_NPCS0
		gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  40026e:	200b      	movs	r0, #11
  400270:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400274:	47a0      	blx	r4
  400276:	bd10      	pop	{r4, pc}
  400278:	400e1450 	.word	0x400e1450
  40027c:	00400719 	.word	0x00400719
  400280:	00400385 	.word	0x00400385
  400284:	28000079 	.word	0x28000079
  400288:	400e0e00 	.word	0x400e0e00
  40028c:	004004a9 	.word	0x004004a9

00400290 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  400290:	b410      	push	{r4}
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400292:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	switch (ul_type) {
  400294:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400298:	d02e      	beq.n	4002f8 <pio_set_peripheral+0x68>
  40029a:	d808      	bhi.n	4002ae <pio_set_peripheral+0x1e>
  40029c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4002a0:	d014      	beq.n	4002cc <pio_set_peripheral+0x3c>
  4002a2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4002a6:	d01d      	beq.n	4002e4 <pio_set_peripheral+0x54>
  4002a8:	2900      	cmp	r1, #0
  4002aa:	d135      	bne.n	400318 <pio_set_peripheral+0x88>
  4002ac:	e035      	b.n	40031a <pio_set_peripheral+0x8a>
  4002ae:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4002b2:	d032      	beq.n	40031a <pio_set_peripheral+0x8a>
  4002b4:	d803      	bhi.n	4002be <pio_set_peripheral+0x2e>
  4002b6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4002ba:	d027      	beq.n	40030c <pio_set_peripheral+0x7c>
  4002bc:	e02c      	b.n	400318 <pio_set_peripheral+0x88>
  4002be:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002c2:	d02a      	beq.n	40031a <pio_set_peripheral+0x8a>
  4002c4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4002c8:	d027      	beq.n	40031a <pio_set_peripheral+0x8a>
  4002ca:	e025      	b.n	400318 <pio_set_peripheral+0x88>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002cc:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002ce:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4002d0:	43d3      	mvns	r3, r2
  4002d2:	4021      	ands	r1, r4
  4002d4:	4019      	ands	r1, r3
  4002d6:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002d8:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002da:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4002dc:	4021      	ands	r1, r4
  4002de:	400b      	ands	r3, r1
  4002e0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002e2:	e019      	b.n	400318 <pio_set_peripheral+0x88>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002e6:	4313      	orrs	r3, r2
  4002e8:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002ec:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002ee:	400b      	ands	r3, r1
  4002f0:	ea23 0302 	bic.w	r3, r3, r2
  4002f4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002f6:	e00f      	b.n	400318 <pio_set_peripheral+0x88>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002f8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4002fc:	400b      	ands	r3, r1
  4002fe:	ea23 0302 	bic.w	r3, r3, r2
  400302:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400304:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400306:	4313      	orrs	r3, r2
  400308:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40030a:	e005      	b.n	400318 <pio_set_peripheral+0x88>

	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40030c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40030e:	4313      	orrs	r3, r2
  400310:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400312:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400314:	4313      	orrs	r3, r2
  400316:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400318:	6042      	str	r2, [r0, #4]
}
  40031a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40031e:	4770      	bx	lr

00400320 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400320:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400322:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400326:	bf14      	ite	ne
  400328:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40032a:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40032c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400330:	bf14      	ite	ne
  400332:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400334:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  400336:	f012 0f02 	tst.w	r2, #2
  40033a:	d002      	beq.n	400342 <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  40033c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400340:	e004      	b.n	40034c <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  400342:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400346:	bf18      	it	ne
  400348:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  40034c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40034e:	6001      	str	r1, [r0, #0]
  400350:	4770      	bx	lr
  400352:	bf00      	nop

00400354 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400354:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400356:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400358:	9c01      	ldr	r4, [sp, #4]
  40035a:	b10c      	cbz	r4, 400360 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  40035c:	6641      	str	r1, [r0, #100]	; 0x64
  40035e:	e000      	b.n	400362 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400360:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  400362:	b10b      	cbz	r3, 400368 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  400364:	6501      	str	r1, [r0, #80]	; 0x50
  400366:	e000      	b.n	40036a <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400368:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  40036a:	b10a      	cbz	r2, 400370 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  40036c:	6301      	str	r1, [r0, #48]	; 0x30
  40036e:	e000      	b.n	400372 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400370:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  400372:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400374:	6001      	str	r1, [r0, #0]
}
  400376:	f85d 4b04 	ldr.w	r4, [sp], #4
  40037a:	4770      	bx	lr

0040037c <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  40037c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  40037e:	4770      	bx	lr

00400380 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400380:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400382:	4770      	bx	lr

00400384 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400384:	b570      	push	{r4, r5, r6, lr}
  400386:	b082      	sub	sp, #8
  400388:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40038a:	0944      	lsrs	r4, r0, #5
  40038c:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
  400390:	f204 7407 	addw	r4, r4, #1799	; 0x707
  400394:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  400396:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
  40039a:	f1b4 5f00 	cmp.w	r4, #536870912	; 0x20000000
  40039e:	d047      	beq.n	400430 <pio_configure_pin+0xac>
  4003a0:	d809      	bhi.n	4003b6 <pio_configure_pin+0x32>
  4003a2:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
  4003a6:	d021      	beq.n	4003ec <pio_configure_pin+0x68>
  4003a8:	f1b4 5fc0 	cmp.w	r4, #402653184	; 0x18000000
  4003ac:	d02f      	beq.n	40040e <pio_configure_pin+0x8a>
  4003ae:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
  4003b2:	d16f      	bne.n	400494 <pio_configure_pin+0x110>
  4003b4:	e009      	b.n	4003ca <pio_configure_pin+0x46>
  4003b6:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
  4003ba:	d055      	beq.n	400468 <pio_configure_pin+0xe4>
  4003bc:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  4003c0:	d052      	beq.n	400468 <pio_configure_pin+0xe4>
  4003c2:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
  4003c6:	d044      	beq.n	400452 <pio_configure_pin+0xce>
  4003c8:	e064      	b.n	400494 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003ca:	f000 001f 	and.w	r0, r0, #31
  4003ce:	2401      	movs	r4, #1
  4003d0:	4084      	lsls	r4, r0
  4003d2:	4630      	mov	r0, r6
  4003d4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003d8:	4622      	mov	r2, r4
  4003da:	4b30      	ldr	r3, [pc, #192]	; (40049c <pio_configure_pin+0x118>)
  4003dc:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4003de:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003e2:	bf14      	ite	ne
  4003e4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4003e6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4003e8:	2001      	movs	r0, #1
  4003ea:	e054      	b.n	400496 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4003ec:	f000 001f 	and.w	r0, r0, #31
  4003f0:	2401      	movs	r4, #1
  4003f2:	4084      	lsls	r4, r0
  4003f4:	4630      	mov	r0, r6
  4003f6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003fa:	4622      	mov	r2, r4
  4003fc:	4b27      	ldr	r3, [pc, #156]	; (40049c <pio_configure_pin+0x118>)
  4003fe:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400400:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400404:	bf14      	ite	ne
  400406:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400408:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40040a:	2001      	movs	r0, #1
  40040c:	e043      	b.n	400496 <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40040e:	f000 001f 	and.w	r0, r0, #31
  400412:	2401      	movs	r4, #1
  400414:	4084      	lsls	r4, r0
  400416:	4630      	mov	r0, r6
  400418:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40041c:	4622      	mov	r2, r4
  40041e:	4b1f      	ldr	r3, [pc, #124]	; (40049c <pio_configure_pin+0x118>)
  400420:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400422:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400426:	bf14      	ite	ne
  400428:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40042a:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40042c:	2001      	movs	r0, #1
  40042e:	e032      	b.n	400496 <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400430:	f000 001f 	and.w	r0, r0, #31
  400434:	2401      	movs	r4, #1
  400436:	4084      	lsls	r4, r0
  400438:	4630      	mov	r0, r6
  40043a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40043e:	4622      	mov	r2, r4
  400440:	4b16      	ldr	r3, [pc, #88]	; (40049c <pio_configure_pin+0x118>)
  400442:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400444:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400448:	bf14      	ite	ne
  40044a:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40044c:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40044e:	2001      	movs	r0, #1
  400450:	e021      	b.n	400496 <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400452:	f000 011f 	and.w	r1, r0, #31
  400456:	2401      	movs	r4, #1
  400458:	4630      	mov	r0, r6
  40045a:	fa04 f101 	lsl.w	r1, r4, r1
  40045e:	462a      	mov	r2, r5
  400460:	4b0f      	ldr	r3, [pc, #60]	; (4004a0 <pio_configure_pin+0x11c>)
  400462:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400464:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  400466:	e016      	b.n	400496 <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400468:	f000 011f 	and.w	r1, r0, #31
  40046c:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  40046e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400472:	ea05 0304 	and.w	r3, r5, r4
  400476:	9300      	str	r3, [sp, #0]
  400478:	4630      	mov	r0, r6
  40047a:	fa04 f101 	lsl.w	r1, r4, r1
  40047e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400482:	bf14      	ite	ne
  400484:	2200      	movne	r2, #0
  400486:	2201      	moveq	r2, #1
  400488:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40048c:	4d05      	ldr	r5, [pc, #20]	; (4004a4 <pio_configure_pin+0x120>)
  40048e:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
  400490:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400492:	e000      	b.n	400496 <pio_configure_pin+0x112>

	default:
		return 0;
  400494:	2000      	movs	r0, #0
	}

	return 1;
}
  400496:	b002      	add	sp, #8
  400498:	bd70      	pop	{r4, r5, r6, pc}
  40049a:	bf00      	nop
  40049c:	00400291 	.word	0x00400291
  4004a0:	00400321 	.word	0x00400321
  4004a4:	00400355 	.word	0x00400355

004004a8 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  4004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4004aa:	b083      	sub	sp, #12
  4004ac:	4607      	mov	r7, r0
  4004ae:	460e      	mov	r6, r1
  4004b0:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4004b2:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
  4004b6:	f1b4 5f00 	cmp.w	r4, #536870912	; 0x20000000
  4004ba:	d038      	beq.n	40052e <pio_configure_pin_group+0x86>
  4004bc:	d809      	bhi.n	4004d2 <pio_configure_pin_group+0x2a>
  4004be:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
  4004c2:	d01c      	beq.n	4004fe <pio_configure_pin_group+0x56>
  4004c4:	f1b4 5fc0 	cmp.w	r4, #402653184	; 0x18000000
  4004c8:	d025      	beq.n	400516 <pio_configure_pin_group+0x6e>
  4004ca:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
  4004ce:	d150      	bne.n	400572 <pio_configure_pin_group+0xca>
  4004d0:	e009      	b.n	4004e6 <pio_configure_pin_group+0x3e>
  4004d2:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
  4004d6:	d03a      	beq.n	40054e <pio_configure_pin_group+0xa6>
  4004d8:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  4004dc:	d037      	beq.n	40054e <pio_configure_pin_group+0xa6>
  4004de:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
  4004e2:	d030      	beq.n	400546 <pio_configure_pin_group+0x9e>
  4004e4:	e045      	b.n	400572 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  4004e6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4004ea:	4632      	mov	r2, r6
  4004ec:	4b22      	ldr	r3, [pc, #136]	; (400578 <pio_configure_pin_group+0xd0>)
  4004ee:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4004f0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4004f4:	bf14      	ite	ne
  4004f6:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4004f8:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4004fa:	2001      	movs	r0, #1
  4004fc:	e03a      	b.n	400574 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  4004fe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400502:	4632      	mov	r2, r6
  400504:	4b1c      	ldr	r3, [pc, #112]	; (400578 <pio_configure_pin_group+0xd0>)
  400506:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400508:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40050c:	bf14      	ite	ne
  40050e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400510:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400512:	2001      	movs	r0, #1
  400514:	e02e      	b.n	400574 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400516:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40051a:	4632      	mov	r2, r6
  40051c:	4b16      	ldr	r3, [pc, #88]	; (400578 <pio_configure_pin_group+0xd0>)
  40051e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400520:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400524:	bf14      	ite	ne
  400526:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400528:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40052a:	2001      	movs	r0, #1
  40052c:	e022      	b.n	400574 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  40052e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400532:	4632      	mov	r2, r6
  400534:	4b10      	ldr	r3, [pc, #64]	; (400578 <pio_configure_pin_group+0xd0>)
  400536:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400538:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40053c:	bf14      	ite	ne
  40053e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400540:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400542:	2001      	movs	r0, #1
  400544:	e016      	b.n	400574 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  400546:	4b0d      	ldr	r3, [pc, #52]	; (40057c <pio_configure_pin_group+0xd4>)
  400548:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  40054a:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  40054c:	e012      	b.n	400574 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  40054e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  400552:	f005 0301 	and.w	r3, r5, #1
  400556:	9300      	str	r3, [sp, #0]
  400558:	4638      	mov	r0, r7
  40055a:	4631      	mov	r1, r6
  40055c:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400560:	bf14      	ite	ne
  400562:	2200      	movne	r2, #0
  400564:	2201      	moveq	r2, #1
  400566:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40056a:	4c05      	ldr	r4, [pc, #20]	; (400580 <pio_configure_pin_group+0xd8>)
  40056c:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  40056e:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400570:	e000      	b.n	400574 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  400572:	2000      	movs	r0, #0
	}

	return 1;
}
  400574:	b003      	add	sp, #12
  400576:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400578:	00400291 	.word	0x00400291
  40057c:	00400321 	.word	0x00400321
  400580:	00400355 	.word	0x00400355

00400584 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400584:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400588:	4681      	mov	r9, r0
  40058a:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40058c:	4b14      	ldr	r3, [pc, #80]	; (4005e0 <pio_handler_process+0x5c>)
  40058e:	4798      	blx	r3
  400590:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400592:	4648      	mov	r0, r9
  400594:	4b13      	ldr	r3, [pc, #76]	; (4005e4 <pio_handler_process+0x60>)
  400596:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400598:	4005      	ands	r5, r0
  40059a:	d017      	beq.n	4005cc <pio_handler_process+0x48>
  40059c:	4f12      	ldr	r7, [pc, #72]	; (4005e8 <pio_handler_process+0x64>)
  40059e:	f107 040c 	add.w	r4, r7, #12
  4005a2:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4005a4:	f854 3c0c 	ldr.w	r3, [r4, #-12]
  4005a8:	42b3      	cmp	r3, r6
  4005aa:	d10a      	bne.n	4005c2 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005ac:	f854 1c08 	ldr.w	r1, [r4, #-8]
  4005b0:	4229      	tst	r1, r5
  4005b2:	d006      	beq.n	4005c2 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005b4:	6823      	ldr	r3, [r4, #0]
  4005b6:	4630      	mov	r0, r6
  4005b8:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4005ba:	f854 3c08 	ldr.w	r3, [r4, #-8]
  4005be:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005c2:	42bc      	cmp	r4, r7
  4005c4:	d002      	beq.n	4005cc <pio_handler_process+0x48>
  4005c6:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  4005c8:	2d00      	cmp	r5, #0
  4005ca:	d1eb      	bne.n	4005a4 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005cc:	4b07      	ldr	r3, [pc, #28]	; (4005ec <pio_handler_process+0x68>)
  4005ce:	681b      	ldr	r3, [r3, #0]
  4005d0:	b123      	cbz	r3, 4005dc <pio_handler_process+0x58>
		if (pio_capture_handler) {
  4005d2:	4b07      	ldr	r3, [pc, #28]	; (4005f0 <pio_handler_process+0x6c>)
  4005d4:	681b      	ldr	r3, [r3, #0]
  4005d6:	b10b      	cbz	r3, 4005dc <pio_handler_process+0x58>
			pio_capture_handler(p_pio);
  4005d8:	4648      	mov	r0, r9
  4005da:	4798      	blx	r3
  4005dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005e0:	0040037d 	.word	0x0040037d
  4005e4:	00400381 	.word	0x00400381
  4005e8:	20000894 	.word	0x20000894
  4005ec:	20000948 	.word	0x20000948
  4005f0:	20000890 	.word	0x20000890

004005f4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005f4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005f6:	4802      	ldr	r0, [pc, #8]	; (400600 <PIOA_Handler+0xc>)
  4005f8:	210b      	movs	r1, #11
  4005fa:	4b02      	ldr	r3, [pc, #8]	; (400604 <PIOA_Handler+0x10>)
  4005fc:	4798      	blx	r3
  4005fe:	bd08      	pop	{r3, pc}
  400600:	400e0e00 	.word	0x400e0e00
  400604:	00400585 	.word	0x00400585

00400608 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400608:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40060a:	4802      	ldr	r0, [pc, #8]	; (400614 <PIOB_Handler+0xc>)
  40060c:	210c      	movs	r1, #12
  40060e:	4b02      	ldr	r3, [pc, #8]	; (400618 <PIOB_Handler+0x10>)
  400610:	4798      	blx	r3
  400612:	bd08      	pop	{r3, pc}
  400614:	400e1000 	.word	0x400e1000
  400618:	00400585 	.word	0x00400585

0040061c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  40061c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40061e:	4802      	ldr	r0, [pc, #8]	; (400628 <PIOC_Handler+0xc>)
  400620:	210d      	movs	r1, #13
  400622:	4b02      	ldr	r3, [pc, #8]	; (40062c <PIOC_Handler+0x10>)
  400624:	4798      	blx	r3
  400626:	bd08      	pop	{r3, pc}
  400628:	400e1200 	.word	0x400e1200
  40062c:	00400585 	.word	0x00400585

00400630 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400630:	4b17      	ldr	r3, [pc, #92]	; (400690 <pmc_switch_mck_to_pllack+0x60>)
  400632:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400634:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400638:	4310      	orrs	r0, r2
  40063a:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40063c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40063e:	f013 0f08 	tst.w	r3, #8
  400642:	d109      	bne.n	400658 <pmc_switch_mck_to_pllack+0x28>
  400644:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400648:	4911      	ldr	r1, [pc, #68]	; (400690 <pmc_switch_mck_to_pllack+0x60>)
  40064a:	e001      	b.n	400650 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40064c:	3b01      	subs	r3, #1
  40064e:	d019      	beq.n	400684 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400650:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400652:	f012 0f08 	tst.w	r2, #8
  400656:	d0f9      	beq.n	40064c <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400658:	4b0d      	ldr	r3, [pc, #52]	; (400690 <pmc_switch_mck_to_pllack+0x60>)
  40065a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40065c:	f022 0203 	bic.w	r2, r2, #3
  400660:	f042 0202 	orr.w	r2, r2, #2
  400664:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400666:	6e98      	ldr	r0, [r3, #104]	; 0x68
  400668:	f010 0008 	ands.w	r0, r0, #8
  40066c:	d10c      	bne.n	400688 <pmc_switch_mck_to_pllack+0x58>
  40066e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400672:	4907      	ldr	r1, [pc, #28]	; (400690 <pmc_switch_mck_to_pllack+0x60>)
  400674:	e001      	b.n	40067a <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400676:	3b01      	subs	r3, #1
  400678:	d008      	beq.n	40068c <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40067a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40067c:	f012 0f08 	tst.w	r2, #8
  400680:	d0f9      	beq.n	400676 <pmc_switch_mck_to_pllack+0x46>
  400682:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400684:	2001      	movs	r0, #1
  400686:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400688:	2000      	movs	r0, #0
  40068a:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40068c:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40068e:	4770      	bx	lr
  400690:	400e0400 	.word	0x400e0400

00400694 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400694:	b138      	cbz	r0, 4006a6 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400696:	4911      	ldr	r1, [pc, #68]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  400698:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40069a:	4a11      	ldr	r2, [pc, #68]	; (4006e0 <pmc_switch_mainck_to_xtal+0x4c>)
  40069c:	401a      	ands	r2, r3
  40069e:	4b11      	ldr	r3, [pc, #68]	; (4006e4 <pmc_switch_mainck_to_xtal+0x50>)
  4006a0:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006a2:	620b      	str	r3, [r1, #32]
  4006a4:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006a6:	4a0d      	ldr	r2, [pc, #52]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006a8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006aa:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4006ae:	f023 0303 	bic.w	r3, r3, #3
  4006b2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4006b6:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4006ba:	0209      	lsls	r1, r1, #8
  4006bc:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006be:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006c0:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006c2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006c4:	f013 0f01 	tst.w	r3, #1
  4006c8:	d0fb      	beq.n	4006c2 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006ca:	4a04      	ldr	r2, [pc, #16]	; (4006dc <pmc_switch_mainck_to_xtal+0x48>)
  4006cc:	6a13      	ldr	r3, [r2, #32]
  4006ce:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006d2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006d6:	6213      	str	r3, [r2, #32]
  4006d8:	4770      	bx	lr
  4006da:	bf00      	nop
  4006dc:	400e0400 	.word	0x400e0400
  4006e0:	fec8fffc 	.word	0xfec8fffc
  4006e4:	01370002 	.word	0x01370002

004006e8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006e8:	4b02      	ldr	r3, [pc, #8]	; (4006f4 <pmc_osc_is_ready_mainck+0xc>)
  4006ea:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006ec:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006f0:	4770      	bx	lr
  4006f2:	bf00      	nop
  4006f4:	400e0400 	.word	0x400e0400

004006f8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4006f8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4006fc:	4b01      	ldr	r3, [pc, #4]	; (400704 <pmc_disable_pllack+0xc>)
  4006fe:	629a      	str	r2, [r3, #40]	; 0x28
  400700:	4770      	bx	lr
  400702:	bf00      	nop
  400704:	400e0400 	.word	0x400e0400

00400708 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400708:	4b02      	ldr	r3, [pc, #8]	; (400714 <pmc_is_locked_pllack+0xc>)
  40070a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40070c:	f000 0002 	and.w	r0, r0, #2
  400710:	4770      	bx	lr
  400712:	bf00      	nop
  400714:	400e0400 	.word	0x400e0400

00400718 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400718:	2822      	cmp	r0, #34	; 0x22
  40071a:	d820      	bhi.n	40075e <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
  40071c:	281f      	cmp	r0, #31
  40071e:	d80d      	bhi.n	40073c <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400720:	4b12      	ldr	r3, [pc, #72]	; (40076c <pmc_enable_periph_clk+0x54>)
  400722:	699a      	ldr	r2, [r3, #24]
  400724:	2301      	movs	r3, #1
  400726:	4083      	lsls	r3, r0
  400728:	401a      	ands	r2, r3
  40072a:	4293      	cmp	r3, r2
  40072c:	d019      	beq.n	400762 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
  40072e:	2301      	movs	r3, #1
  400730:	fa03 f000 	lsl.w	r0, r3, r0
  400734:	4b0d      	ldr	r3, [pc, #52]	; (40076c <pmc_enable_periph_clk+0x54>)
  400736:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400738:	2000      	movs	r0, #0
  40073a:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40073c:	4b0b      	ldr	r3, [pc, #44]	; (40076c <pmc_enable_periph_clk+0x54>)
  40073e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
  400742:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400744:	2301      	movs	r3, #1
  400746:	4083      	lsls	r3, r0
  400748:	401a      	ands	r2, r3
  40074a:	4293      	cmp	r3, r2
  40074c:	d00b      	beq.n	400766 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
  40074e:	2301      	movs	r3, #1
  400750:	fa03 f000 	lsl.w	r0, r3, r0
  400754:	4b05      	ldr	r3, [pc, #20]	; (40076c <pmc_enable_periph_clk+0x54>)
  400756:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  40075a:	2000      	movs	r0, #0
  40075c:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  40075e:	2001      	movs	r0, #1
  400760:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400762:	2000      	movs	r0, #0
  400764:	4770      	bx	lr
  400766:	2000      	movs	r0, #0
}
  400768:	4770      	bx	lr
  40076a:	bf00      	nop
  40076c:	400e0400 	.word	0x400e0400

00400770 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400770:	b508      	push	{r3, lr}
  400772:	2015      	movs	r0, #21
  400774:	4b01      	ldr	r3, [pc, #4]	; (40077c <spi_enable_clock+0xc>)
  400776:	4798      	blx	r3
  400778:	bd08      	pop	{r3, pc}
  40077a:	bf00      	nop
  40077c:	00400719 	.word	0x00400719

00400780 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400780:	6843      	ldr	r3, [r0, #4]
  400782:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400786:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400788:	6843      	ldr	r3, [r0, #4]
  40078a:	0409      	lsls	r1, r1, #16
  40078c:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400790:	430b      	orrs	r3, r1
  400792:	6043      	str	r3, [r0, #4]
  400794:	4770      	bx	lr
  400796:	bf00      	nop

00400798 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  400798:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40079a:	f643 2499 	movw	r4, #15001	; 0x3a99
  40079e:	e001      	b.n	4007a4 <spi_write+0xc>
		if (!timeout--) {
  4007a0:	3c01      	subs	r4, #1
  4007a2:	d011      	beq.n	4007c8 <spi_write+0x30>
		uint8_t uc_pcs, uint8_t uc_last)
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4007a4:	6905      	ldr	r5, [r0, #16]
  4007a6:	f015 0f02 	tst.w	r5, #2
  4007aa:	d0f9      	beq.n	4007a0 <spi_write+0x8>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4007ac:	6844      	ldr	r4, [r0, #4]
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4007ae:	f014 0f02 	tst.w	r4, #2
  4007b2:	d006      	beq.n	4007c2 <spi_write+0x2a>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4007b4:	0412      	lsls	r2, r2, #16
  4007b6:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4007ba:	4311      	orrs	r1, r2
		if (uc_last) {
  4007bc:	b10b      	cbz	r3, 4007c2 <spi_write+0x2a>
			value |= SPI_TDR_LASTXFER;
  4007be:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4007c2:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4007c4:	2000      	movs	r0, #0
  4007c6:	e000      	b.n	4007ca <spi_write+0x32>
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  4007c8:	2001      	movs	r0, #1
	}

	p_spi->SPI_TDR = value;

	return SPI_OK;
}
  4007ca:	bc30      	pop	{r4, r5}
  4007cc:	4770      	bx	lr
  4007ce:	bf00      	nop

004007d0 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4007d0:	b132      	cbz	r2, 4007e0 <spi_set_clock_polarity+0x10>
  4007d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4007d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4007d8:	f043 0301 	orr.w	r3, r3, #1
  4007dc:	6303      	str	r3, [r0, #48]	; 0x30
  4007de:	4770      	bx	lr
  4007e0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4007e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4007e6:	f023 0301 	bic.w	r3, r3, #1
  4007ea:	6303      	str	r3, [r0, #48]	; 0x30
  4007ec:	4770      	bx	lr
  4007ee:	bf00      	nop

004007f0 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4007f0:	b132      	cbz	r2, 400800 <spi_set_clock_phase+0x10>
  4007f2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4007f6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4007f8:	f043 0302 	orr.w	r3, r3, #2
  4007fc:	6303      	str	r3, [r0, #48]	; 0x30
  4007fe:	4770      	bx	lr
  400800:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400804:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400806:	f023 0302 	bic.w	r3, r3, #2
  40080a:	6303      	str	r3, [r0, #48]	; 0x30
  40080c:	4770      	bx	lr
  40080e:	bf00      	nop

00400810 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400810:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400814:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400816:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40081a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40081c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40081e:	431a      	orrs	r2, r3
  400820:	630a      	str	r2, [r1, #48]	; 0x30
  400822:	4770      	bx	lr

00400824 <spi_set_baudrate_div>:
 * \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 * \param uc_baudrate_divider Baudrate divider from MCK.
 */
void spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
  400824:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400828:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40082a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40082e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400830:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400832:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
  400836:	630a      	str	r2, [r1, #48]	; 0x30
  400838:	4770      	bx	lr
  40083a:	bf00      	nop

0040083c <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  40083c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  400840:	6b08      	ldr	r0, [r1, #48]	; 0x30
  400842:	b280      	uxth	r0, r0
  400844:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  400846:	6b08      	ldr	r0, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
  400848:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  40084c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  400850:	630a      	str	r2, [r1, #48]	; 0x30
  400852:	4770      	bx	lr

00400854 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400854:	e7fe      	b.n	400854 <Dummy_Handler>
  400856:	bf00      	nop

00400858 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400858:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  40085a:	4b20      	ldr	r3, [pc, #128]	; (4008dc <Reset_Handler+0x84>)
  40085c:	4a20      	ldr	r2, [pc, #128]	; (4008e0 <Reset_Handler+0x88>)
  40085e:	429a      	cmp	r2, r3
  400860:	d912      	bls.n	400888 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
  400862:	4b20      	ldr	r3, [pc, #128]	; (4008e4 <Reset_Handler+0x8c>)
  400864:	4a1d      	ldr	r2, [pc, #116]	; (4008dc <Reset_Handler+0x84>)
  400866:	429a      	cmp	r2, r3
  400868:	d21f      	bcs.n	4008aa <Reset_Handler+0x52>
  40086a:	1d13      	adds	r3, r2, #4
  40086c:	4c1e      	ldr	r4, [pc, #120]	; (4008e8 <Reset_Handler+0x90>)
  40086e:	1ae4      	subs	r4, r4, r3
  400870:	f024 0403 	bic.w	r4, r4, #3
  400874:	3404      	adds	r4, #4
  400876:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
  400878:	4610      	mov	r0, r2
  40087a:	4919      	ldr	r1, [pc, #100]	; (4008e0 <Reset_Handler+0x88>)
  40087c:	585a      	ldr	r2, [r3, r1]
  40087e:	501a      	str	r2, [r3, r0]
  400880:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  400882:	42a3      	cmp	r3, r4
  400884:	d1fa      	bne.n	40087c <Reset_Handler+0x24>
  400886:	e010      	b.n	4008aa <Reset_Handler+0x52>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  400888:	4b14      	ldr	r3, [pc, #80]	; (4008dc <Reset_Handler+0x84>)
  40088a:	4a15      	ldr	r2, [pc, #84]	; (4008e0 <Reset_Handler+0x88>)
  40088c:	429a      	cmp	r2, r3
  40088e:	d20c      	bcs.n	4008aa <Reset_Handler+0x52>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  400890:	4a14      	ldr	r2, [pc, #80]	; (4008e4 <Reset_Handler+0x8c>)
  400892:	4619      	mov	r1, r3
  400894:	1ad3      	subs	r3, r2, r3
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400896:	4815      	ldr	r0, [pc, #84]	; (4008ec <Reset_Handler+0x94>)
  400898:	4418      	add	r0, r3
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  40089a:	b133      	cbz	r3, 4008aa <Reset_Handler+0x52>
  40089c:	4613      	mov	r3, r2
  40089e:	1a9c      	subs	r4, r3, r2
			*pDest-- = *pSrc--;
  4008a0:	5824      	ldr	r4, [r4, r0]
  4008a2:	f843 4d04 	str.w	r4, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  4008a6:	4299      	cmp	r1, r3
  4008a8:	d1f9      	bne.n	40089e <Reset_Handler+0x46>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  4008aa:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4008ac:	4b10      	ldr	r3, [pc, #64]	; (4008f0 <Reset_Handler+0x98>)
  4008ae:	4a11      	ldr	r2, [pc, #68]	; (4008f4 <Reset_Handler+0x9c>)
  4008b0:	429a      	cmp	r2, r3
  4008b2:	d20b      	bcs.n	4008cc <Reset_Handler+0x74>
  4008b4:	1f13      	subs	r3, r2, #4
  4008b6:	4910      	ldr	r1, [pc, #64]	; (4008f8 <Reset_Handler+0xa0>)
  4008b8:	1ac9      	subs	r1, r1, r3
  4008ba:	f021 0103 	bic.w	r1, r1, #3
  4008be:	1d1a      	adds	r2, r3, #4
  4008c0:	4411      	add	r1, r2
		*pDest++ = 0;
  4008c2:	2200      	movs	r2, #0
  4008c4:	f843 2f04 	str.w	r2, [r3, #4]!
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4008c8:	428b      	cmp	r3, r1
  4008ca:	d1fb      	bne.n	4008c4 <Reset_Handler+0x6c>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  4008cc:	4b0b      	ldr	r3, [pc, #44]	; (4008fc <Reset_Handler+0xa4>)
  4008ce:	4a0c      	ldr	r2, [pc, #48]	; (400900 <Reset_Handler+0xa8>)
  4008d0:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  4008d2:	4b0c      	ldr	r3, [pc, #48]	; (400904 <Reset_Handler+0xac>)
  4008d4:	4798      	blx	r3

	/* Branch to main function */
	main();
  4008d6:	4b0c      	ldr	r3, [pc, #48]	; (400908 <Reset_Handler+0xb0>)
  4008d8:	4798      	blx	r3
  4008da:	e7fe      	b.n	4008da <Reset_Handler+0x82>
  4008dc:	20000000 	.word	0x20000000
  4008e0:	00405664 	.word	0x00405664
  4008e4:	20000874 	.word	0x20000874
  4008e8:	20000877 	.word	0x20000877
  4008ec:	00405660 	.word	0x00405660
  4008f0:	20000950 	.word	0x20000950
  4008f4:	20000874 	.word	0x20000874
  4008f8:	2000094b 	.word	0x2000094b
  4008fc:	e000ed00 	.word	0xe000ed00
  400900:	00400000 	.word	0x00400000
  400904:	00401341 	.word	0x00401341
  400908:	00400ae5 	.word	0x00400ae5

0040090c <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  40090c:	4b3d      	ldr	r3, [pc, #244]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  40090e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400910:	f003 0303 	and.w	r3, r3, #3
  400914:	2b03      	cmp	r3, #3
  400916:	d85d      	bhi.n	4009d4 <SystemCoreClockUpdate+0xc8>
  400918:	e8df f003 	tbb	[pc, r3]
  40091c:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400920:	4b39      	ldr	r3, [pc, #228]	; (400a08 <SystemCoreClockUpdate+0xfc>)
  400922:	695b      	ldr	r3, [r3, #20]
  400924:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400928:	bf14      	ite	ne
  40092a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40092e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400932:	4b36      	ldr	r3, [pc, #216]	; (400a0c <SystemCoreClockUpdate+0x100>)
  400934:	601a      	str	r2, [r3, #0]
  400936:	e04d      	b.n	4009d4 <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400938:	4b32      	ldr	r3, [pc, #200]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  40093a:	6a1b      	ldr	r3, [r3, #32]
  40093c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400940:	d003      	beq.n	40094a <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400942:	4a33      	ldr	r2, [pc, #204]	; (400a10 <SystemCoreClockUpdate+0x104>)
  400944:	4b31      	ldr	r3, [pc, #196]	; (400a0c <SystemCoreClockUpdate+0x100>)
  400946:	601a      	str	r2, [r3, #0]
  400948:	e044      	b.n	4009d4 <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40094a:	4a32      	ldr	r2, [pc, #200]	; (400a14 <SystemCoreClockUpdate+0x108>)
  40094c:	4b2f      	ldr	r3, [pc, #188]	; (400a0c <SystemCoreClockUpdate+0x100>)
  40094e:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400950:	4b2c      	ldr	r3, [pc, #176]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  400952:	6a1b      	ldr	r3, [r3, #32]
  400954:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400958:	2b10      	cmp	r3, #16
  40095a:	d002      	beq.n	400962 <SystemCoreClockUpdate+0x56>
  40095c:	2b20      	cmp	r3, #32
  40095e:	d004      	beq.n	40096a <SystemCoreClockUpdate+0x5e>
  400960:	e038      	b.n	4009d4 <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400962:	4a2d      	ldr	r2, [pc, #180]	; (400a18 <SystemCoreClockUpdate+0x10c>)
  400964:	4b29      	ldr	r3, [pc, #164]	; (400a0c <SystemCoreClockUpdate+0x100>)
  400966:	601a      	str	r2, [r3, #0]
			break;
  400968:	e034      	b.n	4009d4 <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40096a:	4a29      	ldr	r2, [pc, #164]	; (400a10 <SystemCoreClockUpdate+0x104>)
  40096c:	4b27      	ldr	r3, [pc, #156]	; (400a0c <SystemCoreClockUpdate+0x100>)
  40096e:	601a      	str	r2, [r3, #0]
			break;
  400970:	e030      	b.n	4009d4 <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400972:	4b24      	ldr	r3, [pc, #144]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  400974:	6a1b      	ldr	r3, [r3, #32]
  400976:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40097a:	d003      	beq.n	400984 <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40097c:	4a24      	ldr	r2, [pc, #144]	; (400a10 <SystemCoreClockUpdate+0x104>)
  40097e:	4b23      	ldr	r3, [pc, #140]	; (400a0c <SystemCoreClockUpdate+0x100>)
  400980:	601a      	str	r2, [r3, #0]
  400982:	e012      	b.n	4009aa <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400984:	4a23      	ldr	r2, [pc, #140]	; (400a14 <SystemCoreClockUpdate+0x108>)
  400986:	4b21      	ldr	r3, [pc, #132]	; (400a0c <SystemCoreClockUpdate+0x100>)
  400988:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40098a:	4b1e      	ldr	r3, [pc, #120]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  40098c:	6a1b      	ldr	r3, [r3, #32]
  40098e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400992:	2b10      	cmp	r3, #16
  400994:	d002      	beq.n	40099c <SystemCoreClockUpdate+0x90>
  400996:	2b20      	cmp	r3, #32
  400998:	d004      	beq.n	4009a4 <SystemCoreClockUpdate+0x98>
  40099a:	e006      	b.n	4009aa <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40099c:	4a1e      	ldr	r2, [pc, #120]	; (400a18 <SystemCoreClockUpdate+0x10c>)
  40099e:	4b1b      	ldr	r3, [pc, #108]	; (400a0c <SystemCoreClockUpdate+0x100>)
  4009a0:	601a      	str	r2, [r3, #0]
					break;
  4009a2:	e002      	b.n	4009aa <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4009a4:	4a1a      	ldr	r2, [pc, #104]	; (400a10 <SystemCoreClockUpdate+0x104>)
  4009a6:	4b19      	ldr	r3, [pc, #100]	; (400a0c <SystemCoreClockUpdate+0x100>)
  4009a8:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4009aa:	4b16      	ldr	r3, [pc, #88]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  4009ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009ae:	f003 0303 	and.w	r3, r3, #3
  4009b2:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4009b4:	4b13      	ldr	r3, [pc, #76]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  4009b6:	bf07      	ittee	eq
  4009b8:	6a98      	ldreq	r0, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4009ba:	6a99      	ldreq	r1, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009bc:	6ad8      	ldrne	r0, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009be:	6ad9      	ldrne	r1, [r3, #44]	; 0x2c
  4009c0:	4b12      	ldr	r3, [pc, #72]	; (400a0c <SystemCoreClockUpdate+0x100>)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4009c2:	f3c0 400a 	ubfx	r0, r0, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4009c6:	681a      	ldr	r2, [r3, #0]
  4009c8:	fb00 2202 	mla	r2, r0, r2, r2
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
  4009cc:	b2c9      	uxtb	r1, r1
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4009ce:	fbb2 f2f1 	udiv	r2, r2, r1
  4009d2:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009d4:	4b0b      	ldr	r3, [pc, #44]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  4009d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009d8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009dc:	2b70      	cmp	r3, #112	; 0x70
  4009de:	d107      	bne.n	4009f0 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  4009e0:	4b0a      	ldr	r3, [pc, #40]	; (400a0c <SystemCoreClockUpdate+0x100>)
  4009e2:	681a      	ldr	r2, [r3, #0]
  4009e4:	490d      	ldr	r1, [pc, #52]	; (400a1c <SystemCoreClockUpdate+0x110>)
  4009e6:	fba1 0202 	umull	r0, r2, r1, r2
  4009ea:	0852      	lsrs	r2, r2, #1
  4009ec:	601a      	str	r2, [r3, #0]
  4009ee:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009f0:	4b04      	ldr	r3, [pc, #16]	; (400a04 <SystemCoreClockUpdate+0xf8>)
  4009f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009f4:	4b05      	ldr	r3, [pc, #20]	; (400a0c <SystemCoreClockUpdate+0x100>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009f6:	f3c1 1102 	ubfx	r1, r1, #4, #3
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  4009fa:	681a      	ldr	r2, [r3, #0]
  4009fc:	40ca      	lsrs	r2, r1
  4009fe:	601a      	str	r2, [r3, #0]
  400a00:	4770      	bx	lr
  400a02:	bf00      	nop
  400a04:	400e0400 	.word	0x400e0400
  400a08:	400e1410 	.word	0x400e1410
  400a0c:	20000000 	.word	0x20000000
  400a10:	00b71b00 	.word	0x00b71b00
  400a14:	003d0900 	.word	0x003d0900
  400a18:	007a1200 	.word	0x007a1200
  400a1c:	aaaaaaab 	.word	0xaaaaaaab

00400a20 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400a20:	4b12      	ldr	r3, [pc, #72]	; (400a6c <system_init_flash+0x4c>)
  400a22:	4298      	cmp	r0, r3
  400a24:	d804      	bhi.n	400a30 <system_init_flash+0x10>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400a26:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400a2a:	4b11      	ldr	r3, [pc, #68]	; (400a70 <system_init_flash+0x50>)
  400a2c:	601a      	str	r2, [r3, #0]
  400a2e:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400a30:	4b10      	ldr	r3, [pc, #64]	; (400a74 <system_init_flash+0x54>)
  400a32:	4298      	cmp	r0, r3
  400a34:	d803      	bhi.n	400a3e <system_init_flash+0x1e>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400a36:	4a10      	ldr	r2, [pc, #64]	; (400a78 <system_init_flash+0x58>)
  400a38:	4b0d      	ldr	r3, [pc, #52]	; (400a70 <system_init_flash+0x50>)
  400a3a:	601a      	str	r2, [r3, #0]
  400a3c:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400a3e:	4b0f      	ldr	r3, [pc, #60]	; (400a7c <system_init_flash+0x5c>)
  400a40:	4298      	cmp	r0, r3
  400a42:	d803      	bhi.n	400a4c <system_init_flash+0x2c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400a44:	4a0e      	ldr	r2, [pc, #56]	; (400a80 <system_init_flash+0x60>)
  400a46:	4b0a      	ldr	r3, [pc, #40]	; (400a70 <system_init_flash+0x50>)
  400a48:	601a      	str	r2, [r3, #0]
  400a4a:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400a4c:	4b0d      	ldr	r3, [pc, #52]	; (400a84 <system_init_flash+0x64>)
  400a4e:	4298      	cmp	r0, r3
  400a50:	d803      	bhi.n	400a5a <system_init_flash+0x3a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400a52:	4a0d      	ldr	r2, [pc, #52]	; (400a88 <system_init_flash+0x68>)
  400a54:	4b06      	ldr	r3, [pc, #24]	; (400a70 <system_init_flash+0x50>)
  400a56:	601a      	str	r2, [r3, #0]
  400a58:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400a5a:	4b0c      	ldr	r3, [pc, #48]	; (400a8c <system_init_flash+0x6c>)
  400a5c:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400a5e:	bf94      	ite	ls
  400a60:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400a64:	4a0a      	ldrhi	r2, [pc, #40]	; (400a90 <system_init_flash+0x70>)
  400a66:	4b02      	ldr	r3, [pc, #8]	; (400a70 <system_init_flash+0x50>)
  400a68:	601a      	str	r2, [r3, #0]
  400a6a:	4770      	bx	lr
  400a6c:	01312cff 	.word	0x01312cff
  400a70:	400e0a00 	.word	0x400e0a00
  400a74:	026259ff 	.word	0x026259ff
  400a78:	04000100 	.word	0x04000100
  400a7c:	039386ff 	.word	0x039386ff
  400a80:	04000200 	.word	0x04000200
  400a84:	04c4b3ff 	.word	0x04c4b3ff
  400a88:	04000300 	.word	0x04000300
  400a8c:	05f5e0ff 	.word	0x05f5e0ff
  400a90:	04000500 	.word	0x04000500

00400a94 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400a94:	4b09      	ldr	r3, [pc, #36]	; (400abc <_sbrk+0x28>)
  400a96:	681b      	ldr	r3, [r3, #0]
  400a98:	b913      	cbnz	r3, 400aa0 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400a9a:	4a09      	ldr	r2, [pc, #36]	; (400ac0 <_sbrk+0x2c>)
  400a9c:	4b07      	ldr	r3, [pc, #28]	; (400abc <_sbrk+0x28>)
  400a9e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400aa0:	4b06      	ldr	r3, [pc, #24]	; (400abc <_sbrk+0x28>)
  400aa2:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400aa4:	181a      	adds	r2, r3, r0
  400aa6:	4907      	ldr	r1, [pc, #28]	; (400ac4 <_sbrk+0x30>)
  400aa8:	4291      	cmp	r1, r2
  400aaa:	db04      	blt.n	400ab6 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400aac:	4610      	mov	r0, r2
  400aae:	4a03      	ldr	r2, [pc, #12]	; (400abc <_sbrk+0x28>)
  400ab0:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400ab2:	4618      	mov	r0, r3
  400ab4:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400ab6:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400aba:	4770      	bx	lr
  400abc:	20000904 	.word	0x20000904
  400ac0:	20003950 	.word	0x20003950
  400ac4:	2001fffc 	.word	0x2001fffc

00400ac8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400ac8:	f04f 30ff 	mov.w	r0, #4294967295
  400acc:	4770      	bx	lr
  400ace:	bf00      	nop

00400ad0 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400ad0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400ad4:	604b      	str	r3, [r1, #4]

	return 0;
}
  400ad6:	2000      	movs	r0, #0
  400ad8:	4770      	bx	lr
  400ada:	bf00      	nop

00400adc <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400adc:	2001      	movs	r0, #1
  400ade:	4770      	bx	lr

00400ae0 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400ae0:	2000      	movs	r0, #0
  400ae2:	4770      	bx	lr

00400ae4 <main>:
 * \brief Application entry point for SPI example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400ae4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  400ae8:	b089      	sub	sp, #36	; 0x24
	uint8_t uc_key;

	/* Initialize the SAM system. */
	sysclk_init();
  400aea:	4b8d      	ldr	r3, [pc, #564]	; (400d20 <main+0x23c>)
  400aec:	4798      	blx	r3
	board_init();
  400aee:	4b8d      	ldr	r3, [pc, #564]	; (400d24 <main+0x240>)
  400af0:	4798      	blx	r3
/**
 * \brief Initialize SPI as master.
 */
static void spi_master_initialize(void)
{
	puts("-I- Initialize SPI as master\r");
  400af2:	488d      	ldr	r0, [pc, #564]	; (400d28 <main+0x244>)
  400af4:	4b8d      	ldr	r3, [pc, #564]	; (400d2c <main+0x248>)
  400af6:	4798      	blx	r3

	/* Configure an SPI peripheral. */
	spi_enable_clock(SPI_MASTER_BASE);
  400af8:	4c8d      	ldr	r4, [pc, #564]	; (400d30 <main+0x24c>)
  400afa:	4620      	mov	r0, r4
  400afc:	4b8d      	ldr	r3, [pc, #564]	; (400d34 <main+0x250>)
  400afe:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400b00:	2302      	movs	r3, #2
  400b02:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400b04:	2580      	movs	r5, #128	; 0x80
  400b06:	6025      	str	r5, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_lastxfer(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  400b08:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400b0c:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400b0e:	6863      	ldr	r3, [r4, #4]
  400b10:	f043 0301 	orr.w	r3, r3, #1
  400b14:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400b16:	6863      	ldr	r3, [r4, #4]
  400b18:	f043 0310 	orr.w	r3, r3, #16
  400b1c:	6063      	str	r3, [r4, #4]
	spi_disable(SPI_MASTER_BASE);
	spi_reset(SPI_MASTER_BASE);
	spi_set_lastxfer(SPI_MASTER_BASE);
	spi_set_master_mode(SPI_MASTER_BASE);
	spi_disable_mode_fault_detect(SPI_MASTER_BASE);
	spi_set_peripheral_chip_select_value(SPI_MASTER_BASE, SPI_CHIP_PCS);
  400b1e:	4620      	mov	r0, r4
  400b20:	210e      	movs	r1, #14
  400b22:	4b85      	ldr	r3, [pc, #532]	; (400d38 <main+0x254>)
  400b24:	4798      	blx	r3
	spi_set_clock_polarity(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  400b26:	4620      	mov	r0, r4
  400b28:	2100      	movs	r1, #0
  400b2a:	460a      	mov	r2, r1
  400b2c:	4b83      	ldr	r3, [pc, #524]	; (400d3c <main+0x258>)
  400b2e:	4798      	blx	r3
	spi_set_clock_phase(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  400b30:	4620      	mov	r0, r4
  400b32:	2100      	movs	r1, #0
  400b34:	460a      	mov	r2, r1
  400b36:	4b82      	ldr	r3, [pc, #520]	; (400d40 <main+0x25c>)
  400b38:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400b3a:	4620      	mov	r0, r4
  400b3c:	2100      	movs	r1, #0
  400b3e:	460a      	mov	r2, r1
  400b40:	4b80      	ldr	r3, [pc, #512]	; (400d44 <main+0x260>)
  400b42:	4798      	blx	r3
			SPI_CSR_BITS_8_BIT);
	spi_set_baudrate_div(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400b44:	4620      	mov	r0, r4
  400b46:	2100      	movs	r1, #0
  400b48:	22f0      	movs	r2, #240	; 0xf0
  400b4a:	4b7f      	ldr	r3, [pc, #508]	; (400d48 <main+0x264>)
  400b4c:	4798      	blx	r3
			(sysclk_get_cpu_hz() / gs_ul_spi_clock));
	spi_set_transfer_delay(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_DLYBS,
  400b4e:	4620      	mov	r0, r4
  400b50:	2100      	movs	r1, #0
  400b52:	2240      	movs	r2, #64	; 0x40
  400b54:	2310      	movs	r3, #16
  400b56:	4e7d      	ldr	r6, [pc, #500]	; (400d4c <main+0x268>)
  400b58:	47b0      	blx	r6
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400b5a:	2601      	movs	r6, #1
  400b5c:	6026      	str	r6, [r4, #0]
*/
static void synth_init(void)
{
	
	//set synthesizer to LSB mode
	spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
  400b5e:	4620      	mov	r0, r4
  400b60:	4629      	mov	r1, r5
  400b62:	2200      	movs	r2, #0
  400b64:	4613      	mov	r3, r2
  400b66:	4d7a      	ldr	r5, [pc, #488]	; (400d50 <main+0x26c>)
  400b68:	47a8      	blx	r5
	spi_write(SPI_MASTER_BASE, LSB_MODE_ON, 0, 0);
  400b6a:	4620      	mov	r0, r4
  400b6c:	4631      	mov	r1, r6
  400b6e:	2200      	movs	r2, #0
  400b70:	4613      	mov	r3, r2
  400b72:	47a8      	blx	r5
//instruction byte to write to channel frequency tuning word register
#define CFTW_WRITE 0x84

static void io_update(void)
{
	printf("\nExpecting an IO update here.  Gotta figure out which PIO port is doing it. Writing the function is easy from there\n");
  400b74:	4f77      	ldr	r7, [pc, #476]	; (400d54 <main+0x270>)
  400b76:	4638      	mov	r0, r7
  400b78:	4e77      	ldr	r6, [pc, #476]	; (400d58 <main+0x274>)
  400b7a:	47b0      	blx	r6
	spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
	spi_write(SPI_MASTER_BASE, LSB_MODE_ON, 0, 0);
	io_update();
	
	//set sysclk speed for synthesizer to 500 MHz
	spi_write(SPI_MASTER_BASE, FR1_WRITE, 0, 0);
  400b7c:	4620      	mov	r0, r4
  400b7e:	2181      	movs	r1, #129	; 0x81
  400b80:	2200      	movs	r2, #0
  400b82:	4613      	mov	r3, r2
  400b84:	47a8      	blx	r5
	spi_write(SPI_MASTER_BASE, 0x00, 0, 0);
  400b86:	4620      	mov	r0, r4
  400b88:	2100      	movs	r1, #0
  400b8a:	460a      	mov	r2, r1
  400b8c:	460b      	mov	r3, r1
  400b8e:	47a8      	blx	r5
	spi_write(SPI_MASTER_BASE, SET_SYSCLK, 0, 0);
  400b90:	4620      	mov	r0, r4
  400b92:	210d      	movs	r1, #13
  400b94:	2200      	movs	r2, #0
  400b96:	4613      	mov	r3, r2
  400b98:	47a8      	blx	r5
//instruction byte to write to channel frequency tuning word register
#define CFTW_WRITE 0x84

static void io_update(void)
{
	printf("\nExpecting an IO update here.  Gotta figure out which PIO port is doing it. Writing the function is easy from there\n");
  400b9a:	4638      	mov	r0, r7
  400b9c:	47b0      	blx	r6
{
	char cmd_buf[5];
	char cmd_arg[4];
	int cmd_value;
	
	scanf("%s %s %d", &cmd_buf, &cmd_arg, &cmd_value);
  400b9e:	f8df b1e0 	ldr.w	fp, [pc, #480]	; 400d80 <main+0x29c>
		return;
	}
	uint8_t i, j;
	for (i = 1; i <= 150; i++)
	{
		uint32_t FTW = (i*4294967296)/500;
  400ba2:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 400d84 <main+0x2a0>
		spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
  400ba6:	462f      	mov	r7, r5
{
	char cmd_buf[5];
	char cmd_arg[4];
	int cmd_value;
	
	scanf("%s %s %d", &cmd_buf, &cmd_arg, &cmd_value);
  400ba8:	4658      	mov	r0, fp
  400baa:	a906      	add	r1, sp, #24
  400bac:	aa04      	add	r2, sp, #16
  400bae:	ab05      	add	r3, sp, #20
  400bb0:	4c6a      	ldr	r4, [pc, #424]	; (400d5c <main+0x278>)
  400bb2:	47a0      	blx	r4
	
	if (!strcmp(cmd_buf, "set"))
  400bb4:	a806      	add	r0, sp, #24
  400bb6:	496a      	ldr	r1, [pc, #424]	; (400d60 <main+0x27c>)
  400bb8:	4b6a      	ldr	r3, [pc, #424]	; (400d64 <main+0x280>)
  400bba:	4798      	blx	r3
  400bbc:	2800      	cmp	r0, #0
  400bbe:	d14a      	bne.n	400c56 <main+0x172>
	{
		set(cmd_arg, cmd_value);
  400bc0:	9d05      	ldr	r5, [sp, #20]
	outputs - none
*/
static void set(char cmd_arg[4], int cmd_value)
{
	//First enable the channel that we want to set
	if (!strcmp(cmd_arg, "ch0"))
  400bc2:	a804      	add	r0, sp, #16
  400bc4:	4968      	ldr	r1, [pc, #416]	; (400d68 <main+0x284>)
  400bc6:	4b67      	ldr	r3, [pc, #412]	; (400d64 <main+0x280>)
  400bc8:	4798      	blx	r3
  400bca:	b958      	cbnz	r0, 400be4 <main+0x100>
	{
		spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
  400bcc:	4c58      	ldr	r4, [pc, #352]	; (400d30 <main+0x24c>)
  400bce:	4620      	mov	r0, r4
  400bd0:	2180      	movs	r1, #128	; 0x80
  400bd2:	2200      	movs	r2, #0
  400bd4:	4613      	mov	r3, r2
  400bd6:	47b8      	blx	r7
		spi_write(SPI_MASTER_BASE, CH0_ENABLE, 0, 0);
  400bd8:	4620      	mov	r0, r4
  400bda:	2141      	movs	r1, #65	; 0x41
  400bdc:	2200      	movs	r2, #0
  400bde:	4613      	mov	r3, r2
  400be0:	47b8      	blx	r7
  400be2:	e015      	b.n	400c10 <main+0x12c>
		
	}
	else if (!strcmp(cmd_arg, "ch1"))
  400be4:	a804      	add	r0, sp, #16
  400be6:	4961      	ldr	r1, [pc, #388]	; (400d6c <main+0x288>)
  400be8:	4b5e      	ldr	r3, [pc, #376]	; (400d64 <main+0x280>)
  400bea:	4798      	blx	r3
  400bec:	b958      	cbnz	r0, 400c06 <main+0x122>
	{
		spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
  400bee:	4c50      	ldr	r4, [pc, #320]	; (400d30 <main+0x24c>)
  400bf0:	4620      	mov	r0, r4
  400bf2:	2180      	movs	r1, #128	; 0x80
  400bf4:	2200      	movs	r2, #0
  400bf6:	4613      	mov	r3, r2
  400bf8:	47b8      	blx	r7
		spi_write(SPI_MASTER_BASE, CH1_ENABLE, 0, 0);
  400bfa:	4620      	mov	r0, r4
  400bfc:	2181      	movs	r1, #129	; 0x81
  400bfe:	2200      	movs	r2, #0
  400c00:	4613      	mov	r3, r2
  400c02:	47b8      	blx	r7
  400c04:	e004      	b.n	400c10 <main+0x12c>
	}
	else
	{
		printf("\n%s is not a valid argument\n", cmd_arg);
  400c06:	485a      	ldr	r0, [pc, #360]	; (400d70 <main+0x28c>)
  400c08:	a904      	add	r1, sp, #16
  400c0a:	4b53      	ldr	r3, [pc, #332]	; (400d58 <main+0x274>)
  400c0c:	4798      	blx	r3
  400c0e:	e7cb      	b.n	400ba8 <main+0xc4>
		return;
	}
	
	//write the necessary FTW
	uint8_t i;
	uint32_t FTW = (cmd_value*4294967296)/500;
  400c10:	9503      	str	r5, [sp, #12]
  400c12:	2200      	movs	r2, #0
  400c14:	9202      	str	r2, [sp, #8]
  400c16:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  400c1a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
  400c1e:	2300      	movs	r3, #0
  400c20:	47c8      	blx	r9
  400c22:	4604      	mov	r4, r0
	spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
  400c24:	4842      	ldr	r0, [pc, #264]	; (400d30 <main+0x24c>)
  400c26:	2184      	movs	r1, #132	; 0x84
  400c28:	9a02      	ldr	r2, [sp, #8]
  400c2a:	4613      	mov	r3, r2
  400c2c:	47b8      	blx	r7
  400c2e:	9e02      	ldr	r6, [sp, #8]
	for (i = 0; i < 32; i++)
	{
		spi_write(SPI_MASTER_BASE, FTW & (1 << i), 0, 0);
  400c30:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 400d30 <main+0x24c>
  400c34:	f04f 0801 	mov.w	r8, #1
  400c38:	fa08 f106 	lsl.w	r1, r8, r6
  400c3c:	4021      	ands	r1, r4
  400c3e:	4650      	mov	r0, sl
  400c40:	b289      	uxth	r1, r1
  400c42:	2200      	movs	r2, #0
  400c44:	4613      	mov	r3, r2
  400c46:	47b8      	blx	r7
  400c48:	3601      	adds	r6, #1
	
	//write the necessary FTW
	uint8_t i;
	uint32_t FTW = (cmd_value*4294967296)/500;
	spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
	for (i = 0; i < 32; i++)
  400c4a:	2e20      	cmp	r6, #32
  400c4c:	d1f4      	bne.n	400c38 <main+0x154>
//instruction byte to write to channel frequency tuning word register
#define CFTW_WRITE 0x84

static void io_update(void)
{
	printf("\nExpecting an IO update here.  Gotta figure out which PIO port is doing it. Writing the function is easy from there\n");
  400c4e:	4841      	ldr	r0, [pc, #260]	; (400d54 <main+0x270>)
  400c50:	4b41      	ldr	r3, [pc, #260]	; (400d58 <main+0x274>)
  400c52:	4798      	blx	r3
  400c54:	e7a8      	b.n	400ba8 <main+0xc4>
	
	if (!strcmp(cmd_buf, "set"))
	{
		set(cmd_arg, cmd_value);
	}
	else if (!strcmp(cmd_buf, "sweep"))
  400c56:	a806      	add	r0, sp, #24
  400c58:	4946      	ldr	r1, [pc, #280]	; (400d74 <main+0x290>)
  400c5a:	4b42      	ldr	r3, [pc, #264]	; (400d64 <main+0x280>)
  400c5c:	4798      	blx	r3
  400c5e:	2800      	cmp	r0, #0
  400c60:	d154      	bne.n	400d0c <main+0x228>
}

static void sweep(char cmd_arg[4])
{
	//First, enable the channel that will do the sweep
	if (!strcmp(cmd_arg, "ch0"))
  400c62:	a804      	add	r0, sp, #16
  400c64:	4940      	ldr	r1, [pc, #256]	; (400d68 <main+0x284>)
  400c66:	4b3f      	ldr	r3, [pc, #252]	; (400d64 <main+0x280>)
  400c68:	4798      	blx	r3
  400c6a:	b958      	cbnz	r0, 400c84 <main+0x1a0>
	{
		spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
  400c6c:	4c30      	ldr	r4, [pc, #192]	; (400d30 <main+0x24c>)
  400c6e:	4620      	mov	r0, r4
  400c70:	2180      	movs	r1, #128	; 0x80
  400c72:	2200      	movs	r2, #0
  400c74:	4613      	mov	r3, r2
  400c76:	47b8      	blx	r7
		spi_write(SPI_MASTER_BASE, CH0_ENABLE, 0, 0);
  400c78:	4620      	mov	r0, r4
  400c7a:	2141      	movs	r1, #65	; 0x41
  400c7c:	2200      	movs	r2, #0
  400c7e:	4613      	mov	r3, r2
  400c80:	47b8      	blx	r7
  400c82:	e048      	b.n	400d16 <main+0x232>
	}
	else if (!strcmp(cmd_arg, "ch1"))
  400c84:	a804      	add	r0, sp, #16
  400c86:	4939      	ldr	r1, [pc, #228]	; (400d6c <main+0x288>)
  400c88:	4b36      	ldr	r3, [pc, #216]	; (400d64 <main+0x280>)
  400c8a:	4798      	blx	r3
  400c8c:	b958      	cbnz	r0, 400ca6 <main+0x1c2>
	{
		spi_write(SPI_MASTER_BASE, SCR_WRITE, 0, 0);
  400c8e:	4c28      	ldr	r4, [pc, #160]	; (400d30 <main+0x24c>)
  400c90:	4620      	mov	r0, r4
  400c92:	2180      	movs	r1, #128	; 0x80
  400c94:	2200      	movs	r2, #0
  400c96:	4613      	mov	r3, r2
  400c98:	47b8      	blx	r7
		spi_write(SPI_MASTER_BASE, CH1_ENABLE, 0, 0);
  400c9a:	4620      	mov	r0, r4
  400c9c:	2181      	movs	r1, #129	; 0x81
  400c9e:	2200      	movs	r2, #0
  400ca0:	4613      	mov	r3, r2
  400ca2:	47b8      	blx	r7
  400ca4:	e037      	b.n	400d16 <main+0x232>
	}
	else
	{
		printf("\n%s is not a valid argument\n", cmd_arg);
  400ca6:	4832      	ldr	r0, [pc, #200]	; (400d70 <main+0x28c>)
  400ca8:	a904      	add	r1, sp, #16
  400caa:	4b2b      	ldr	r3, [pc, #172]	; (400d58 <main+0x274>)
  400cac:	4798      	blx	r3
  400cae:	e77b      	b.n	400ba8 <main+0xc4>
		return;
	}
	uint8_t i, j;
	for (i = 1; i <= 150; i++)
	{
		uint32_t FTW = (i*4294967296)/500;
  400cb0:	e9dd 0100 	ldrd	r0, r1, [sp]
  400cb4:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
  400cb8:	2300      	movs	r3, #0
  400cba:	47c8      	blx	r9
  400cbc:	4604      	mov	r4, r0
		spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
  400cbe:	481c      	ldr	r0, [pc, #112]	; (400d30 <main+0x24c>)
  400cc0:	2184      	movs	r1, #132	; 0x84
  400cc2:	2200      	movs	r2, #0
  400cc4:	4613      	mov	r3, r2
  400cc6:	47b8      	blx	r7
  400cc8:	2600      	movs	r6, #0
		for (j = 0; j < 32; j++)
		{
			spi_write(SPI_MASTER_BASE, FTW & (1 << j), 0, 0);
  400cca:	f8df a064 	ldr.w	sl, [pc, #100]	; 400d30 <main+0x24c>
  400cce:	f04f 0801 	mov.w	r8, #1
  400cd2:	fa08 f106 	lsl.w	r1, r8, r6
  400cd6:	4021      	ands	r1, r4
  400cd8:	4650      	mov	r0, sl
  400cda:	b289      	uxth	r1, r1
  400cdc:	2200      	movs	r2, #0
  400cde:	4613      	mov	r3, r2
  400ce0:	47b8      	blx	r7
  400ce2:	3601      	adds	r6, #1
	uint8_t i, j;
	for (i = 1; i <= 150; i++)
	{
		uint32_t FTW = (i*4294967296)/500;
		spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
		for (j = 0; j < 32; j++)
  400ce4:	2e20      	cmp	r6, #32
  400ce6:	d1f4      	bne.n	400cd2 <main+0x1ee>
		{
			spi_write(SPI_MASTER_BASE, FTW & (1 << j), 0, 0);
		}	
		printf("\nSending FTW = %d to synth\n", FTW);
  400ce8:	4823      	ldr	r0, [pc, #140]	; (400d78 <main+0x294>)
  400cea:	4621      	mov	r1, r4
  400cec:	4c1a      	ldr	r4, [pc, #104]	; (400d58 <main+0x274>)
  400cee:	47a0      	blx	r4
//instruction byte to write to channel frequency tuning word register
#define CFTW_WRITE 0x84

static void io_update(void)
{
	printf("\nExpecting an IO update here.  Gotta figure out which PIO port is doing it. Writing the function is easy from there\n");
  400cf0:	4818      	ldr	r0, [pc, #96]	; (400d54 <main+0x270>)
  400cf2:	47a0      	blx	r4
  400cf4:	e9dd 2300 	ldrd	r2, r3, [sp]
  400cf8:	3200      	adds	r2, #0
  400cfa:	f143 0301 	adc.w	r3, r3, #1
  400cfe:	e9cd 2300 	strd	r2, r3, [sp]
	{
		printf("\n%s is not a valid argument\n", cmd_arg);
		return;
	}
	uint8_t i, j;
	for (i = 1; i <= 150; i++)
  400d02:	2b97      	cmp	r3, #151	; 0x97
  400d04:	bf08      	it	eq
  400d06:	2a00      	cmpeq	r2, #0
  400d08:	d1d2      	bne.n	400cb0 <main+0x1cc>
  400d0a:	e74d      	b.n	400ba8 <main+0xc4>
	else if (!strcmp(cmd_buf, "sweep"))
	{
		sweep(cmd_arg);
	}
	else
		printf("\n%d is not a valid command\n", cmd_buf);
  400d0c:	481b      	ldr	r0, [pc, #108]	; (400d7c <main+0x298>)
  400d0e:	a906      	add	r1, sp, #24
  400d10:	4b11      	ldr	r3, [pc, #68]	; (400d58 <main+0x274>)
  400d12:	4798      	blx	r3
  400d14:	e748      	b.n	400ba8 <main+0xc4>
	}
	
	//write the necessary FTW
	uint8_t i;
	uint32_t FTW = (cmd_value*4294967296)/500;
	spi_write(SPI_MASTER_BASE, CFTW_WRITE, 0, 0);
  400d16:	2200      	movs	r2, #0
  400d18:	2301      	movs	r3, #1
  400d1a:	e9cd 2300 	strd	r2, r3, [sp]
  400d1e:	e7c7      	b.n	400cb0 <main+0x1cc>
  400d20:	00400121 	.word	0x00400121
  400d24:	00400219 	.word	0x00400219
  400d28:	004053a4 	.word	0x004053a4
  400d2c:	004014d1 	.word	0x004014d1
  400d30:	40008000 	.word	0x40008000
  400d34:	00400771 	.word	0x00400771
  400d38:	00400781 	.word	0x00400781
  400d3c:	004007d1 	.word	0x004007d1
  400d40:	004007f1 	.word	0x004007f1
  400d44:	00400811 	.word	0x00400811
  400d48:	00400825 	.word	0x00400825
  400d4c:	0040083d 	.word	0x0040083d
  400d50:	00400799 	.word	0x00400799
  400d54:	004053c4 	.word	0x004053c4
  400d58:	00401391 	.word	0x00401391
  400d5c:	004013b9 	.word	0x004013b9
  400d60:	00405448 	.word	0x00405448
  400d64:	004014e1 	.word	0x004014e1
  400d68:	0040544c 	.word	0x0040544c
  400d6c:	00405450 	.word	0x00405450
  400d70:	00405454 	.word	0x00405454
  400d74:	00405474 	.word	0x00405474
  400d78:	0040547c 	.word	0x0040547c
  400d7c:	00405498 	.word	0x00405498
  400d80:	0040543c 	.word	0x0040543c
  400d84:	00400d89 	.word	0x00400d89

00400d88 <__aeabi_ldivmod>:
  400d88:	b973      	cbnz	r3, 400da8 <__aeabi_ldivmod+0x20>
  400d8a:	b96a      	cbnz	r2, 400da8 <__aeabi_ldivmod+0x20>
  400d8c:	2900      	cmp	r1, #0
  400d8e:	bf08      	it	eq
  400d90:	2800      	cmpeq	r0, #0
  400d92:	bfbc      	itt	lt
  400d94:	2000      	movlt	r0, #0
  400d96:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
  400d9a:	bfc4      	itt	gt
  400d9c:	f06f 4100 	mvngt.w	r1, #2147483648	; 0x80000000
  400da0:	f04f 30ff 	movgt.w	r0, #4294967295
  400da4:	f000 b83c 	b.w	400e20 <__aeabi_idiv0>
  400da8:	b082      	sub	sp, #8
  400daa:	46ec      	mov	ip, sp
  400dac:	e92d 5000 	stmdb	sp!, {ip, lr}
  400db0:	f000 f806 	bl	400dc0 <__gnu_ldivmod_helper>
  400db4:	f8dd e004 	ldr.w	lr, [sp, #4]
  400db8:	b002      	add	sp, #8
  400dba:	bc0c      	pop	{r2, r3}
  400dbc:	4770      	bx	lr
  400dbe:	bf00      	nop

00400dc0 <__gnu_ldivmod_helper>:
  400dc0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  400dc4:	9e06      	ldr	r6, [sp, #24]
  400dc6:	4614      	mov	r4, r2
  400dc8:	461d      	mov	r5, r3
  400dca:	4680      	mov	r8, r0
  400dcc:	4689      	mov	r9, r1
  400dce:	f000 f829 	bl	400e24 <__divdi3>
  400dd2:	fb04 f301 	mul.w	r3, r4, r1
  400dd6:	fb00 3305 	mla	r3, r0, r5, r3
  400dda:	fba4 4500 	umull	r4, r5, r4, r0
  400dde:	441d      	add	r5, r3
  400de0:	ebb8 0404 	subs.w	r4, r8, r4
  400de4:	eb69 0505 	sbc.w	r5, r9, r5
  400de8:	e9c6 4500 	strd	r4, r5, [r6]
  400dec:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

00400df0 <__gnu_uldivmod_helper>:
  400df0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  400df4:	9e06      	ldr	r6, [sp, #24]
  400df6:	4614      	mov	r4, r2
  400df8:	4680      	mov	r8, r0
  400dfa:	4689      	mov	r9, r1
  400dfc:	461d      	mov	r5, r3
  400dfe:	f000 f95d 	bl	4010bc <__udivdi3>
  400e02:	fb00 f505 	mul.w	r5, r0, r5
  400e06:	fb04 5301 	mla	r3, r4, r1, r5
  400e0a:	fba0 4504 	umull	r4, r5, r0, r4
  400e0e:	441d      	add	r5, r3
  400e10:	ebb8 0404 	subs.w	r4, r8, r4
  400e14:	eb69 0505 	sbc.w	r5, r9, r5
  400e18:	e9c6 4500 	strd	r4, r5, [r6]
  400e1c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

00400e20 <__aeabi_idiv0>:
  400e20:	4770      	bx	lr
  400e22:	bf00      	nop

00400e24 <__divdi3>:
  400e24:	2900      	cmp	r1, #0
  400e26:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  400e2a:	f2c0 809f 	blt.w	400f6c <__divdi3+0x148>
  400e2e:	2400      	movs	r4, #0
  400e30:	2b00      	cmp	r3, #0
  400e32:	f2c0 8096 	blt.w	400f62 <__divdi3+0x13e>
  400e36:	4615      	mov	r5, r2
  400e38:	4606      	mov	r6, r0
  400e3a:	460f      	mov	r7, r1
  400e3c:	2b00      	cmp	r3, #0
  400e3e:	d13e      	bne.n	400ebe <__divdi3+0x9a>
  400e40:	428a      	cmp	r2, r1
  400e42:	d957      	bls.n	400ef4 <__divdi3+0xd0>
  400e44:	fab2 f382 	clz	r3, r2
  400e48:	b14b      	cbz	r3, 400e5e <__divdi3+0x3a>
  400e4a:	f1c3 0220 	rsb	r2, r3, #32
  400e4e:	fa01 f703 	lsl.w	r7, r1, r3
  400e52:	fa20 f202 	lsr.w	r2, r0, r2
  400e56:	409d      	lsls	r5, r3
  400e58:	4317      	orrs	r7, r2
  400e5a:	fa00 f603 	lsl.w	r6, r0, r3
  400e5e:	0c29      	lsrs	r1, r5, #16
  400e60:	fbb7 f2f1 	udiv	r2, r7, r1
  400e64:	0c33      	lsrs	r3, r6, #16
  400e66:	fb01 7c12 	mls	ip, r1, r2, r7
  400e6a:	b2a8      	uxth	r0, r5
  400e6c:	ea43 470c 	orr.w	r7, r3, ip, lsl #16
  400e70:	fb00 f302 	mul.w	r3, r0, r2
  400e74:	42bb      	cmp	r3, r7
  400e76:	d909      	bls.n	400e8c <__divdi3+0x68>
  400e78:	197f      	adds	r7, r7, r5
  400e7a:	f102 3cff 	add.w	ip, r2, #4294967295
  400e7e:	f080 8101 	bcs.w	401084 <__divdi3+0x260>
  400e82:	42bb      	cmp	r3, r7
  400e84:	f240 80fe 	bls.w	401084 <__divdi3+0x260>
  400e88:	3a02      	subs	r2, #2
  400e8a:	442f      	add	r7, r5
  400e8c:	1aff      	subs	r7, r7, r3
  400e8e:	fbb7 f3f1 	udiv	r3, r7, r1
  400e92:	b2b6      	uxth	r6, r6
  400e94:	fb01 7113 	mls	r1, r1, r3, r7
  400e98:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
  400e9c:	fb00 f003 	mul.w	r0, r0, r3
  400ea0:	4288      	cmp	r0, r1
  400ea2:	d908      	bls.n	400eb6 <__divdi3+0x92>
  400ea4:	1949      	adds	r1, r1, r5
  400ea6:	f103 37ff 	add.w	r7, r3, #4294967295
  400eaa:	f080 80ed 	bcs.w	401088 <__divdi3+0x264>
  400eae:	4288      	cmp	r0, r1
  400eb0:	f240 80ea 	bls.w	401088 <__divdi3+0x264>
  400eb4:	3b02      	subs	r3, #2
  400eb6:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  400eba:	2300      	movs	r3, #0
  400ebc:	e003      	b.n	400ec6 <__divdi3+0xa2>
  400ebe:	428b      	cmp	r3, r1
  400ec0:	d90a      	bls.n	400ed8 <__divdi3+0xb4>
  400ec2:	2300      	movs	r3, #0
  400ec4:	461a      	mov	r2, r3
  400ec6:	4610      	mov	r0, r2
  400ec8:	4619      	mov	r1, r3
  400eca:	b114      	cbz	r4, 400ed2 <__divdi3+0xae>
  400ecc:	4240      	negs	r0, r0
  400ece:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400ed2:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  400ed6:	4770      	bx	lr
  400ed8:	fab3 f883 	clz	r8, r3
  400edc:	f1b8 0f00 	cmp.w	r8, #0
  400ee0:	f040 8084 	bne.w	400fec <__divdi3+0x1c8>
  400ee4:	428b      	cmp	r3, r1
  400ee6:	d302      	bcc.n	400eee <__divdi3+0xca>
  400ee8:	4282      	cmp	r2, r0
  400eea:	f200 80de 	bhi.w	4010aa <__divdi3+0x286>
  400eee:	2300      	movs	r3, #0
  400ef0:	2201      	movs	r2, #1
  400ef2:	e7e8      	b.n	400ec6 <__divdi3+0xa2>
  400ef4:	b912      	cbnz	r2, 400efc <__divdi3+0xd8>
  400ef6:	2301      	movs	r3, #1
  400ef8:	fbb3 f5f2 	udiv	r5, r3, r2
  400efc:	fab5 f285 	clz	r2, r5
  400f00:	2a00      	cmp	r2, #0
  400f02:	d139      	bne.n	400f78 <__divdi3+0x154>
  400f04:	1b7f      	subs	r7, r7, r5
  400f06:	0c28      	lsrs	r0, r5, #16
  400f08:	fa1f fc85 	uxth.w	ip, r5
  400f0c:	2301      	movs	r3, #1
  400f0e:	fbb7 f1f0 	udiv	r1, r7, r0
  400f12:	0c32      	lsrs	r2, r6, #16
  400f14:	fb00 7711 	mls	r7, r0, r1, r7
  400f18:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  400f1c:	fb0c f201 	mul.w	r2, ip, r1
  400f20:	42ba      	cmp	r2, r7
  400f22:	d907      	bls.n	400f34 <__divdi3+0x110>
  400f24:	197f      	adds	r7, r7, r5
  400f26:	f101 38ff 	add.w	r8, r1, #4294967295
  400f2a:	d202      	bcs.n	400f32 <__divdi3+0x10e>
  400f2c:	42ba      	cmp	r2, r7
  400f2e:	f200 80c1 	bhi.w	4010b4 <__divdi3+0x290>
  400f32:	4641      	mov	r1, r8
  400f34:	1abf      	subs	r7, r7, r2
  400f36:	fbb7 f2f0 	udiv	r2, r7, r0
  400f3a:	b2b6      	uxth	r6, r6
  400f3c:	fb00 7012 	mls	r0, r0, r2, r7
  400f40:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
  400f44:	fb0c fc02 	mul.w	ip, ip, r2
  400f48:	4584      	cmp	ip, r0
  400f4a:	d907      	bls.n	400f5c <__divdi3+0x138>
  400f4c:	1940      	adds	r0, r0, r5
  400f4e:	f102 37ff 	add.w	r7, r2, #4294967295
  400f52:	d202      	bcs.n	400f5a <__divdi3+0x136>
  400f54:	4584      	cmp	ip, r0
  400f56:	f200 80ab 	bhi.w	4010b0 <__divdi3+0x28c>
  400f5a:	463a      	mov	r2, r7
  400f5c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  400f60:	e7b1      	b.n	400ec6 <__divdi3+0xa2>
  400f62:	43e4      	mvns	r4, r4
  400f64:	4252      	negs	r2, r2
  400f66:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  400f6a:	e764      	b.n	400e36 <__divdi3+0x12>
  400f6c:	4240      	negs	r0, r0
  400f6e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400f72:	f04f 34ff 	mov.w	r4, #4294967295
  400f76:	e75b      	b.n	400e30 <__divdi3+0xc>
  400f78:	4095      	lsls	r5, r2
  400f7a:	f1c2 0320 	rsb	r3, r2, #32
  400f7e:	fa27 f103 	lsr.w	r1, r7, r3
  400f82:	0c28      	lsrs	r0, r5, #16
  400f84:	fa26 f303 	lsr.w	r3, r6, r3
  400f88:	4097      	lsls	r7, r2
  400f8a:	fbb1 f8f0 	udiv	r8, r1, r0
  400f8e:	431f      	orrs	r7, r3
  400f90:	0c3b      	lsrs	r3, r7, #16
  400f92:	fb00 1118 	mls	r1, r0, r8, r1
  400f96:	fa1f fc85 	uxth.w	ip, r5
  400f9a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  400f9e:	fb0c f308 	mul.w	r3, ip, r8
  400fa2:	428b      	cmp	r3, r1
  400fa4:	fa06 f602 	lsl.w	r6, r6, r2
  400fa8:	d908      	bls.n	400fbc <__divdi3+0x198>
  400faa:	1949      	adds	r1, r1, r5
  400fac:	f108 32ff 	add.w	r2, r8, #4294967295
  400fb0:	d279      	bcs.n	4010a6 <__divdi3+0x282>
  400fb2:	428b      	cmp	r3, r1
  400fb4:	d977      	bls.n	4010a6 <__divdi3+0x282>
  400fb6:	f1a8 0802 	sub.w	r8, r8, #2
  400fba:	4429      	add	r1, r5
  400fbc:	1ac9      	subs	r1, r1, r3
  400fbe:	fbb1 f3f0 	udiv	r3, r1, r0
  400fc2:	b2bf      	uxth	r7, r7
  400fc4:	fb00 1113 	mls	r1, r0, r3, r1
  400fc8:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
  400fcc:	fb0c f203 	mul.w	r2, ip, r3
  400fd0:	42ba      	cmp	r2, r7
  400fd2:	d907      	bls.n	400fe4 <__divdi3+0x1c0>
  400fd4:	197f      	adds	r7, r7, r5
  400fd6:	f103 31ff 	add.w	r1, r3, #4294967295
  400fda:	d260      	bcs.n	40109e <__divdi3+0x27a>
  400fdc:	42ba      	cmp	r2, r7
  400fde:	d95e      	bls.n	40109e <__divdi3+0x27a>
  400fe0:	3b02      	subs	r3, #2
  400fe2:	442f      	add	r7, r5
  400fe4:	1abf      	subs	r7, r7, r2
  400fe6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  400fea:	e790      	b.n	400f0e <__divdi3+0xea>
  400fec:	f1c8 0220 	rsb	r2, r8, #32
  400ff0:	fa03 fc08 	lsl.w	ip, r3, r8
  400ff4:	fa25 f302 	lsr.w	r3, r5, r2
  400ff8:	ea43 0c0c 	orr.w	ip, r3, ip
  400ffc:	ea4f 491c 	mov.w	r9, ip, lsr #16
  401000:	fa21 f302 	lsr.w	r3, r1, r2
  401004:	fa01 f708 	lsl.w	r7, r1, r8
  401008:	fa20 f202 	lsr.w	r2, r0, r2
  40100c:	fbb3 f1f9 	udiv	r1, r3, r9
  401010:	4317      	orrs	r7, r2
  401012:	fb09 3311 	mls	r3, r9, r1, r3
  401016:	0c3a      	lsrs	r2, r7, #16
  401018:	fa1f fb8c 	uxth.w	fp, ip
  40101c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  401020:	fb0b fa01 	mul.w	sl, fp, r1
  401024:	459a      	cmp	sl, r3
  401026:	fa05 f008 	lsl.w	r0, r5, r8
  40102a:	d908      	bls.n	40103e <__divdi3+0x21a>
  40102c:	eb13 030c 	adds.w	r3, r3, ip
  401030:	f101 32ff 	add.w	r2, r1, #4294967295
  401034:	d235      	bcs.n	4010a2 <__divdi3+0x27e>
  401036:	459a      	cmp	sl, r3
  401038:	d933      	bls.n	4010a2 <__divdi3+0x27e>
  40103a:	3902      	subs	r1, #2
  40103c:	4463      	add	r3, ip
  40103e:	ebca 0303 	rsb	r3, sl, r3
  401042:	fbb3 f2f9 	udiv	r2, r3, r9
  401046:	fb09 3312 	mls	r3, r9, r2, r3
  40104a:	b2bf      	uxth	r7, r7
  40104c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  401050:	fb0b f902 	mul.w	r9, fp, r2
  401054:	45b9      	cmp	r9, r7
  401056:	d908      	bls.n	40106a <__divdi3+0x246>
  401058:	eb17 070c 	adds.w	r7, r7, ip
  40105c:	f102 33ff 	add.w	r3, r2, #4294967295
  401060:	d21b      	bcs.n	40109a <__divdi3+0x276>
  401062:	45b9      	cmp	r9, r7
  401064:	d919      	bls.n	40109a <__divdi3+0x276>
  401066:	3a02      	subs	r2, #2
  401068:	4467      	add	r7, ip
  40106a:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
  40106e:	fba5 0100 	umull	r0, r1, r5, r0
  401072:	ebc9 0707 	rsb	r7, r9, r7
  401076:	428f      	cmp	r7, r1
  401078:	f04f 0300 	mov.w	r3, #0
  40107c:	d30a      	bcc.n	401094 <__divdi3+0x270>
  40107e:	d005      	beq.n	40108c <__divdi3+0x268>
  401080:	462a      	mov	r2, r5
  401082:	e720      	b.n	400ec6 <__divdi3+0xa2>
  401084:	4662      	mov	r2, ip
  401086:	e701      	b.n	400e8c <__divdi3+0x68>
  401088:	463b      	mov	r3, r7
  40108a:	e714      	b.n	400eb6 <__divdi3+0x92>
  40108c:	fa06 f608 	lsl.w	r6, r6, r8
  401090:	4286      	cmp	r6, r0
  401092:	d2f5      	bcs.n	401080 <__divdi3+0x25c>
  401094:	1e6a      	subs	r2, r5, #1
  401096:	2300      	movs	r3, #0
  401098:	e715      	b.n	400ec6 <__divdi3+0xa2>
  40109a:	461a      	mov	r2, r3
  40109c:	e7e5      	b.n	40106a <__divdi3+0x246>
  40109e:	460b      	mov	r3, r1
  4010a0:	e7a0      	b.n	400fe4 <__divdi3+0x1c0>
  4010a2:	4611      	mov	r1, r2
  4010a4:	e7cb      	b.n	40103e <__divdi3+0x21a>
  4010a6:	4690      	mov	r8, r2
  4010a8:	e788      	b.n	400fbc <__divdi3+0x198>
  4010aa:	4643      	mov	r3, r8
  4010ac:	4642      	mov	r2, r8
  4010ae:	e70a      	b.n	400ec6 <__divdi3+0xa2>
  4010b0:	3a02      	subs	r2, #2
  4010b2:	e753      	b.n	400f5c <__divdi3+0x138>
  4010b4:	3902      	subs	r1, #2
  4010b6:	442f      	add	r7, r5
  4010b8:	e73c      	b.n	400f34 <__divdi3+0x110>
  4010ba:	bf00      	nop

004010bc <__udivdi3>:
  4010bc:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4010c0:	4614      	mov	r4, r2
  4010c2:	4605      	mov	r5, r0
  4010c4:	460e      	mov	r6, r1
  4010c6:	2b00      	cmp	r3, #0
  4010c8:	d143      	bne.n	401152 <__udivdi3+0x96>
  4010ca:	428a      	cmp	r2, r1
  4010cc:	d953      	bls.n	401176 <__udivdi3+0xba>
  4010ce:	fab2 f782 	clz	r7, r2
  4010d2:	b157      	cbz	r7, 4010ea <__udivdi3+0x2e>
  4010d4:	f1c7 0620 	rsb	r6, r7, #32
  4010d8:	fa20 f606 	lsr.w	r6, r0, r6
  4010dc:	fa01 f307 	lsl.w	r3, r1, r7
  4010e0:	fa02 f407 	lsl.w	r4, r2, r7
  4010e4:	431e      	orrs	r6, r3
  4010e6:	fa00 f507 	lsl.w	r5, r0, r7
  4010ea:	0c21      	lsrs	r1, r4, #16
  4010ec:	fbb6 f2f1 	udiv	r2, r6, r1
  4010f0:	0c2b      	lsrs	r3, r5, #16
  4010f2:	fb01 6712 	mls	r7, r1, r2, r6
  4010f6:	b2a0      	uxth	r0, r4
  4010f8:	ea43 4607 	orr.w	r6, r3, r7, lsl #16
  4010fc:	fb00 f302 	mul.w	r3, r0, r2
  401100:	42b3      	cmp	r3, r6
  401102:	d909      	bls.n	401118 <__udivdi3+0x5c>
  401104:	1936      	adds	r6, r6, r4
  401106:	f102 37ff 	add.w	r7, r2, #4294967295
  40110a:	f080 80f6 	bcs.w	4012fa <__udivdi3+0x23e>
  40110e:	42b3      	cmp	r3, r6
  401110:	f240 80f3 	bls.w	4012fa <__udivdi3+0x23e>
  401114:	3a02      	subs	r2, #2
  401116:	4426      	add	r6, r4
  401118:	1af6      	subs	r6, r6, r3
  40111a:	fbb6 f3f1 	udiv	r3, r6, r1
  40111e:	b2ad      	uxth	r5, r5
  401120:	fb01 6113 	mls	r1, r1, r3, r6
  401124:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
  401128:	fb00 f003 	mul.w	r0, r0, r3
  40112c:	4288      	cmp	r0, r1
  40112e:	d908      	bls.n	401142 <__udivdi3+0x86>
  401130:	1909      	adds	r1, r1, r4
  401132:	f103 36ff 	add.w	r6, r3, #4294967295
  401136:	f080 80e2 	bcs.w	4012fe <__udivdi3+0x242>
  40113a:	4288      	cmp	r0, r1
  40113c:	f240 80df 	bls.w	4012fe <__udivdi3+0x242>
  401140:	3b02      	subs	r3, #2
  401142:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  401146:	2300      	movs	r3, #0
  401148:	4610      	mov	r0, r2
  40114a:	4619      	mov	r1, r3
  40114c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  401150:	4770      	bx	lr
  401152:	428b      	cmp	r3, r1
  401154:	d84a      	bhi.n	4011ec <__udivdi3+0x130>
  401156:	fab3 f683 	clz	r6, r3
  40115a:	2e00      	cmp	r6, #0
  40115c:	d14d      	bne.n	4011fa <__udivdi3+0x13e>
  40115e:	428b      	cmp	r3, r1
  401160:	d302      	bcc.n	401168 <__udivdi3+0xac>
  401162:	4282      	cmp	r2, r0
  401164:	f200 80d6 	bhi.w	401314 <__udivdi3+0x258>
  401168:	2300      	movs	r3, #0
  40116a:	2201      	movs	r2, #1
  40116c:	4610      	mov	r0, r2
  40116e:	4619      	mov	r1, r3
  401170:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  401174:	4770      	bx	lr
  401176:	b912      	cbnz	r2, 40117e <__udivdi3+0xc2>
  401178:	2401      	movs	r4, #1
  40117a:	fbb4 f4f2 	udiv	r4, r4, r2
  40117e:	fab4 f284 	clz	r2, r4
  401182:	2a00      	cmp	r2, #0
  401184:	d17c      	bne.n	401280 <__udivdi3+0x1c4>
  401186:	1b09      	subs	r1, r1, r4
  401188:	0c26      	lsrs	r6, r4, #16
  40118a:	b2a7      	uxth	r7, r4
  40118c:	2301      	movs	r3, #1
  40118e:	fbb1 f0f6 	udiv	r0, r1, r6
  401192:	0c2a      	lsrs	r2, r5, #16
  401194:	fb06 1110 	mls	r1, r6, r0, r1
  401198:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
  40119c:	fb07 f200 	mul.w	r2, r7, r0
  4011a0:	428a      	cmp	r2, r1
  4011a2:	d907      	bls.n	4011b4 <__udivdi3+0xf8>
  4011a4:	1909      	adds	r1, r1, r4
  4011a6:	f100 3cff 	add.w	ip, r0, #4294967295
  4011aa:	d202      	bcs.n	4011b2 <__udivdi3+0xf6>
  4011ac:	428a      	cmp	r2, r1
  4011ae:	f200 80c3 	bhi.w	401338 <__udivdi3+0x27c>
  4011b2:	4660      	mov	r0, ip
  4011b4:	1a89      	subs	r1, r1, r2
  4011b6:	fbb1 f2f6 	udiv	r2, r1, r6
  4011ba:	b2ad      	uxth	r5, r5
  4011bc:	fb06 1112 	mls	r1, r6, r2, r1
  4011c0:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
  4011c4:	fb07 f702 	mul.w	r7, r7, r2
  4011c8:	42af      	cmp	r7, r5
  4011ca:	d908      	bls.n	4011de <__udivdi3+0x122>
  4011cc:	192c      	adds	r4, r5, r4
  4011ce:	f102 31ff 	add.w	r1, r2, #4294967295
  4011d2:	f080 8096 	bcs.w	401302 <__udivdi3+0x246>
  4011d6:	42a7      	cmp	r7, r4
  4011d8:	f240 8093 	bls.w	401302 <__udivdi3+0x246>
  4011dc:	3a02      	subs	r2, #2
  4011de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  4011e2:	4610      	mov	r0, r2
  4011e4:	4619      	mov	r1, r3
  4011e6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4011ea:	4770      	bx	lr
  4011ec:	2300      	movs	r3, #0
  4011ee:	461a      	mov	r2, r3
  4011f0:	4610      	mov	r0, r2
  4011f2:	4619      	mov	r1, r3
  4011f4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4011f8:	4770      	bx	lr
  4011fa:	f1c6 0520 	rsb	r5, r6, #32
  4011fe:	fa22 f405 	lsr.w	r4, r2, r5
  401202:	40b3      	lsls	r3, r6
  401204:	431c      	orrs	r4, r3
  401206:	ea4f 4814 	mov.w	r8, r4, lsr #16
  40120a:	fa21 f305 	lsr.w	r3, r1, r5
  40120e:	fa01 f706 	lsl.w	r7, r1, r6
  401212:	fa20 f505 	lsr.w	r5, r0, r5
  401216:	fbb3 fcf8 	udiv	ip, r3, r8
  40121a:	432f      	orrs	r7, r5
  40121c:	fb08 331c 	mls	r3, r8, ip, r3
  401220:	0c3d      	lsrs	r5, r7, #16
  401222:	fa1f fa84 	uxth.w	sl, r4
  401226:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
  40122a:	fb0a f90c 	mul.w	r9, sl, ip
  40122e:	4599      	cmp	r9, r3
  401230:	fa02 fb06 	lsl.w	fp, r2, r6
  401234:	d904      	bls.n	401240 <__udivdi3+0x184>
  401236:	191b      	adds	r3, r3, r4
  401238:	f10c 32ff 	add.w	r2, ip, #4294967295
  40123c:	d36d      	bcc.n	40131a <__udivdi3+0x25e>
  40123e:	4694      	mov	ip, r2
  401240:	ebc9 0303 	rsb	r3, r9, r3
  401244:	fbb3 f5f8 	udiv	r5, r3, r8
  401248:	fb08 3315 	mls	r3, r8, r5, r3
  40124c:	b2bf      	uxth	r7, r7
  40124e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  401252:	fb0a f805 	mul.w	r8, sl, r5
  401256:	45b8      	cmp	r8, r7
  401258:	d904      	bls.n	401264 <__udivdi3+0x1a8>
  40125a:	193f      	adds	r7, r7, r4
  40125c:	f105 33ff 	add.w	r3, r5, #4294967295
  401260:	d361      	bcc.n	401326 <__udivdi3+0x26a>
  401262:	461d      	mov	r5, r3
  401264:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
  401268:	fbac 230b 	umull	r2, r3, ip, fp
  40126c:	ebc8 0707 	rsb	r7, r8, r7
  401270:	429f      	cmp	r7, r3
  401272:	f04f 0500 	mov.w	r5, #0
  401276:	d349      	bcc.n	40130c <__udivdi3+0x250>
  401278:	d045      	beq.n	401306 <__udivdi3+0x24a>
  40127a:	4662      	mov	r2, ip
  40127c:	462b      	mov	r3, r5
  40127e:	e763      	b.n	401148 <__udivdi3+0x8c>
  401280:	4094      	lsls	r4, r2
  401282:	f1c2 0320 	rsb	r3, r2, #32
  401286:	fa21 fc03 	lsr.w	ip, r1, r3
  40128a:	0c26      	lsrs	r6, r4, #16
  40128c:	fa20 f303 	lsr.w	r3, r0, r3
  401290:	fa01 f502 	lsl.w	r5, r1, r2
  401294:	fbbc f8f6 	udiv	r8, ip, r6
  401298:	ea43 0105 	orr.w	r1, r3, r5
  40129c:	0c0b      	lsrs	r3, r1, #16
  40129e:	fb06 cc18 	mls	ip, r6, r8, ip
  4012a2:	b2a7      	uxth	r7, r4
  4012a4:	ea43 4c0c 	orr.w	ip, r3, ip, lsl #16
  4012a8:	fb07 f308 	mul.w	r3, r7, r8
  4012ac:	4563      	cmp	r3, ip
  4012ae:	fa00 f502 	lsl.w	r5, r0, r2
  4012b2:	d909      	bls.n	4012c8 <__udivdi3+0x20c>
  4012b4:	eb1c 0c04 	adds.w	ip, ip, r4
  4012b8:	f108 32ff 	add.w	r2, r8, #4294967295
  4012bc:	d23a      	bcs.n	401334 <__udivdi3+0x278>
  4012be:	4563      	cmp	r3, ip
  4012c0:	d938      	bls.n	401334 <__udivdi3+0x278>
  4012c2:	f1a8 0802 	sub.w	r8, r8, #2
  4012c6:	44a4      	add	ip, r4
  4012c8:	ebc3 0c0c 	rsb	ip, r3, ip
  4012cc:	fbbc f3f6 	udiv	r3, ip, r6
  4012d0:	b289      	uxth	r1, r1
  4012d2:	fb06 cc13 	mls	ip, r6, r3, ip
  4012d6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
  4012da:	fb07 f203 	mul.w	r2, r7, r3
  4012de:	428a      	cmp	r2, r1
  4012e0:	d907      	bls.n	4012f2 <__udivdi3+0x236>
  4012e2:	1909      	adds	r1, r1, r4
  4012e4:	f103 30ff 	add.w	r0, r3, #4294967295
  4012e8:	d222      	bcs.n	401330 <__udivdi3+0x274>
  4012ea:	428a      	cmp	r2, r1
  4012ec:	d920      	bls.n	401330 <__udivdi3+0x274>
  4012ee:	3b02      	subs	r3, #2
  4012f0:	4421      	add	r1, r4
  4012f2:	1a89      	subs	r1, r1, r2
  4012f4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4012f8:	e749      	b.n	40118e <__udivdi3+0xd2>
  4012fa:	463a      	mov	r2, r7
  4012fc:	e70c      	b.n	401118 <__udivdi3+0x5c>
  4012fe:	4633      	mov	r3, r6
  401300:	e71f      	b.n	401142 <__udivdi3+0x86>
  401302:	460a      	mov	r2, r1
  401304:	e76b      	b.n	4011de <__udivdi3+0x122>
  401306:	40b0      	lsls	r0, r6
  401308:	4290      	cmp	r0, r2
  40130a:	d2b6      	bcs.n	40127a <__udivdi3+0x1be>
  40130c:	f10c 32ff 	add.w	r2, ip, #4294967295
  401310:	2300      	movs	r3, #0
  401312:	e719      	b.n	401148 <__udivdi3+0x8c>
  401314:	4633      	mov	r3, r6
  401316:	4632      	mov	r2, r6
  401318:	e716      	b.n	401148 <__udivdi3+0x8c>
  40131a:	4599      	cmp	r9, r3
  40131c:	d98f      	bls.n	40123e <__udivdi3+0x182>
  40131e:	f1ac 0c02 	sub.w	ip, ip, #2
  401322:	4423      	add	r3, r4
  401324:	e78c      	b.n	401240 <__udivdi3+0x184>
  401326:	45b8      	cmp	r8, r7
  401328:	d99b      	bls.n	401262 <__udivdi3+0x1a6>
  40132a:	3d02      	subs	r5, #2
  40132c:	4427      	add	r7, r4
  40132e:	e799      	b.n	401264 <__udivdi3+0x1a8>
  401330:	4603      	mov	r3, r0
  401332:	e7de      	b.n	4012f2 <__udivdi3+0x236>
  401334:	4690      	mov	r8, r2
  401336:	e7c7      	b.n	4012c8 <__udivdi3+0x20c>
  401338:	3802      	subs	r0, #2
  40133a:	4421      	add	r1, r4
  40133c:	e73a      	b.n	4011b4 <__udivdi3+0xf8>
  40133e:	bf00      	nop

00401340 <__libc_init_array>:
  401340:	b570      	push	{r4, r5, r6, lr}
  401342:	4e0f      	ldr	r6, [pc, #60]	; (401380 <__libc_init_array+0x40>)
  401344:	4d0f      	ldr	r5, [pc, #60]	; (401384 <__libc_init_array+0x44>)
  401346:	1b76      	subs	r6, r6, r5
  401348:	10b6      	asrs	r6, r6, #2
  40134a:	d007      	beq.n	40135c <__libc_init_array+0x1c>
  40134c:	3d04      	subs	r5, #4
  40134e:	2400      	movs	r4, #0
  401350:	3401      	adds	r4, #1
  401352:	f855 3f04 	ldr.w	r3, [r5, #4]!
  401356:	4798      	blx	r3
  401358:	42a6      	cmp	r6, r4
  40135a:	d1f9      	bne.n	401350 <__libc_init_array+0x10>
  40135c:	4e0a      	ldr	r6, [pc, #40]	; (401388 <__libc_init_array+0x48>)
  40135e:	4d0b      	ldr	r5, [pc, #44]	; (40138c <__libc_init_array+0x4c>)
  401360:	1b76      	subs	r6, r6, r5
  401362:	f004 f969 	bl	405638 <_init>
  401366:	10b6      	asrs	r6, r6, #2
  401368:	d008      	beq.n	40137c <__libc_init_array+0x3c>
  40136a:	3d04      	subs	r5, #4
  40136c:	2400      	movs	r4, #0
  40136e:	3401      	adds	r4, #1
  401370:	f855 3f04 	ldr.w	r3, [r5, #4]!
  401374:	4798      	blx	r3
  401376:	42a6      	cmp	r6, r4
  401378:	d1f9      	bne.n	40136e <__libc_init_array+0x2e>
  40137a:	bd70      	pop	{r4, r5, r6, pc}
  40137c:	bd70      	pop	{r4, r5, r6, pc}
  40137e:	bf00      	nop
  401380:	00405644 	.word	0x00405644
  401384:	00405644 	.word	0x00405644
  401388:	0040564c 	.word	0x0040564c
  40138c:	00405644 	.word	0x00405644

00401390 <iprintf>:
  401390:	b40f      	push	{r0, r1, r2, r3}
  401392:	b500      	push	{lr}
  401394:	4a07      	ldr	r2, [pc, #28]	; (4013b4 <iprintf+0x24>)
  401396:	b083      	sub	sp, #12
  401398:	ab04      	add	r3, sp, #16
  40139a:	6810      	ldr	r0, [r2, #0]
  40139c:	f853 2b04 	ldr.w	r2, [r3], #4
  4013a0:	6881      	ldr	r1, [r0, #8]
  4013a2:	9301      	str	r3, [sp, #4]
  4013a4:	f000 fa16 	bl	4017d4 <_vfiprintf_r>
  4013a8:	b003      	add	sp, #12
  4013aa:	f85d eb04 	ldr.w	lr, [sp], #4
  4013ae:	b004      	add	sp, #16
  4013b0:	4770      	bx	lr
  4013b2:	bf00      	nop
  4013b4:	20000430 	.word	0x20000430

004013b8 <iscanf>:
  4013b8:	b40f      	push	{r0, r1, r2, r3}
  4013ba:	b500      	push	{lr}
  4013bc:	4a07      	ldr	r2, [pc, #28]	; (4013dc <iscanf+0x24>)
  4013be:	b083      	sub	sp, #12
  4013c0:	ab04      	add	r3, sp, #16
  4013c2:	6810      	ldr	r0, [r2, #0]
  4013c4:	f853 2b04 	ldr.w	r2, [r3], #4
  4013c8:	6841      	ldr	r1, [r0, #4]
  4013ca:	9301      	str	r3, [sp, #4]
  4013cc:	f001 f868 	bl	4024a0 <__svfiscanf_r>
  4013d0:	b003      	add	sp, #12
  4013d2:	f85d eb04 	ldr.w	lr, [sp], #4
  4013d6:	b004      	add	sp, #16
  4013d8:	4770      	bx	lr
  4013da:	bf00      	nop
  4013dc:	20000430 	.word	0x20000430

004013e0 <memset>:
  4013e0:	b4f0      	push	{r4, r5, r6, r7}
  4013e2:	0784      	lsls	r4, r0, #30
  4013e4:	d043      	beq.n	40146e <memset+0x8e>
  4013e6:	1e54      	subs	r4, r2, #1
  4013e8:	2a00      	cmp	r2, #0
  4013ea:	d03e      	beq.n	40146a <memset+0x8a>
  4013ec:	b2cd      	uxtb	r5, r1
  4013ee:	4603      	mov	r3, r0
  4013f0:	e003      	b.n	4013fa <memset+0x1a>
  4013f2:	1e62      	subs	r2, r4, #1
  4013f4:	2c00      	cmp	r4, #0
  4013f6:	d038      	beq.n	40146a <memset+0x8a>
  4013f8:	4614      	mov	r4, r2
  4013fa:	f803 5b01 	strb.w	r5, [r3], #1
  4013fe:	079a      	lsls	r2, r3, #30
  401400:	d1f7      	bne.n	4013f2 <memset+0x12>
  401402:	2c03      	cmp	r4, #3
  401404:	d92a      	bls.n	40145c <memset+0x7c>
  401406:	b2cd      	uxtb	r5, r1
  401408:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40140c:	2c0f      	cmp	r4, #15
  40140e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401412:	d915      	bls.n	401440 <memset+0x60>
  401414:	f1a4 0710 	sub.w	r7, r4, #16
  401418:	093f      	lsrs	r7, r7, #4
  40141a:	f103 0610 	add.w	r6, r3, #16
  40141e:	eb06 1607 	add.w	r6, r6, r7, lsl #4
  401422:	461a      	mov	r2, r3
  401424:	6015      	str	r5, [r2, #0]
  401426:	6055      	str	r5, [r2, #4]
  401428:	6095      	str	r5, [r2, #8]
  40142a:	60d5      	str	r5, [r2, #12]
  40142c:	3210      	adds	r2, #16
  40142e:	42b2      	cmp	r2, r6
  401430:	d1f8      	bne.n	401424 <memset+0x44>
  401432:	f004 040f 	and.w	r4, r4, #15
  401436:	3701      	adds	r7, #1
  401438:	2c03      	cmp	r4, #3
  40143a:	eb03 1307 	add.w	r3, r3, r7, lsl #4
  40143e:	d90d      	bls.n	40145c <memset+0x7c>
  401440:	461e      	mov	r6, r3
  401442:	4622      	mov	r2, r4
  401444:	3a04      	subs	r2, #4
  401446:	2a03      	cmp	r2, #3
  401448:	f846 5b04 	str.w	r5, [r6], #4
  40144c:	d8fa      	bhi.n	401444 <memset+0x64>
  40144e:	1f22      	subs	r2, r4, #4
  401450:	f022 0203 	bic.w	r2, r2, #3
  401454:	3204      	adds	r2, #4
  401456:	4413      	add	r3, r2
  401458:	f004 0403 	and.w	r4, r4, #3
  40145c:	b12c      	cbz	r4, 40146a <memset+0x8a>
  40145e:	b2c9      	uxtb	r1, r1
  401460:	441c      	add	r4, r3
  401462:	f803 1b01 	strb.w	r1, [r3], #1
  401466:	42a3      	cmp	r3, r4
  401468:	d1fb      	bne.n	401462 <memset+0x82>
  40146a:	bcf0      	pop	{r4, r5, r6, r7}
  40146c:	4770      	bx	lr
  40146e:	4614      	mov	r4, r2
  401470:	4603      	mov	r3, r0
  401472:	e7c6      	b.n	401402 <memset+0x22>

00401474 <_puts_r>:
  401474:	b5f0      	push	{r4, r5, r6, r7, lr}
  401476:	4604      	mov	r4, r0
  401478:	b089      	sub	sp, #36	; 0x24
  40147a:	4608      	mov	r0, r1
  40147c:	460d      	mov	r5, r1
  40147e:	f000 f93d 	bl	4016fc <strlen>
  401482:	68a3      	ldr	r3, [r4, #8]
  401484:	4f11      	ldr	r7, [pc, #68]	; (4014cc <_puts_r+0x58>)
  401486:	899a      	ldrh	r2, [r3, #12]
  401488:	9504      	str	r5, [sp, #16]
  40148a:	2102      	movs	r1, #2
  40148c:	f100 0e01 	add.w	lr, r0, #1
  401490:	2601      	movs	r6, #1
  401492:	ad04      	add	r5, sp, #16
  401494:	9102      	str	r1, [sp, #8]
  401496:	0491      	lsls	r1, r2, #18
  401498:	9005      	str	r0, [sp, #20]
  40149a:	f8cd e00c 	str.w	lr, [sp, #12]
  40149e:	9706      	str	r7, [sp, #24]
  4014a0:	9607      	str	r6, [sp, #28]
  4014a2:	9501      	str	r5, [sp, #4]
  4014a4:	d406      	bmi.n	4014b4 <_puts_r+0x40>
  4014a6:	6e59      	ldr	r1, [r3, #100]	; 0x64
  4014a8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4014ac:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4014b0:	819a      	strh	r2, [r3, #12]
  4014b2:	6659      	str	r1, [r3, #100]	; 0x64
  4014b4:	4620      	mov	r0, r4
  4014b6:	4619      	mov	r1, r3
  4014b8:	aa01      	add	r2, sp, #4
  4014ba:	f002 f8df 	bl	40367c <__sfvwrite_r>
  4014be:	2800      	cmp	r0, #0
  4014c0:	bf0c      	ite	eq
  4014c2:	200a      	moveq	r0, #10
  4014c4:	f04f 30ff 	movne.w	r0, #4294967295
  4014c8:	b009      	add	sp, #36	; 0x24
  4014ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4014cc:	004054bc 	.word	0x004054bc

004014d0 <puts>:
  4014d0:	4b02      	ldr	r3, [pc, #8]	; (4014dc <puts+0xc>)
  4014d2:	4601      	mov	r1, r0
  4014d4:	6818      	ldr	r0, [r3, #0]
  4014d6:	f7ff bfcd 	b.w	401474 <_puts_r>
  4014da:	bf00      	nop
  4014dc:	20000430 	.word	0x20000430

004014e0 <strcmp>:
  4014e0:	ea40 0c01 	orr.w	ip, r0, r1
  4014e4:	f01c 0f07 	tst.w	ip, #7
  4014e8:	d123      	bne.n	401532 <strcmp+0x52>
  4014ea:	f1bd 0d10 	subs.w	sp, sp, #16
  4014ee:	e9cd 4502 	strd	r4, r5, [sp, #8]
  4014f2:	e9cd 6700 	strd	r6, r7, [sp]
  4014f6:	f06f 0600 	mvn.w	r6, #0
  4014fa:	f04f 0700 	mov.w	r7, #0
  4014fe:	bf00      	nop
  401500:	e8f0 2302 	ldrd	r2, r3, [r0], #8
  401504:	e8f1 4502 	ldrd	r4, r5, [r1], #8
  401508:	42a2      	cmp	r2, r4
  40150a:	fa82 fc46 	uadd8	ip, r2, r6
  40150e:	faa7 fc86 	sel	ip, r7, r6
  401512:	bf08      	it	eq
  401514:	f1bc 0f00 	cmpeq.w	ip, #0
  401518:	f040 80d7 	bne.w	4016ca <strcmp+0x1ea>
  40151c:	42ab      	cmp	r3, r5
  40151e:	fa83 fc46 	uadd8	ip, r3, r6
  401522:	faa7 fc86 	sel	ip, r7, r6
  401526:	bf08      	it	eq
  401528:	f1bc 0f00 	cmpeq.w	ip, #0
  40152c:	f040 80ca 	bne.w	4016c4 <strcmp+0x1e4>
  401530:	e7e6      	b.n	401500 <strcmp+0x20>
  401532:	f010 0c03 	ands.w	ip, r0, #3
  401536:	d021      	beq.n	40157c <strcmp+0x9c>
  401538:	f020 0003 	bic.w	r0, r0, #3
  40153c:	f850 2b04 	ldr.w	r2, [r0], #4
  401540:	ea5f 7ccc 	movs.w	ip, ip, lsl #31
  401544:	d008      	beq.n	401558 <strcmp+0x78>
  401546:	d20f      	bcs.n	401568 <strcmp+0x88>
  401548:	f811 cb01 	ldrb.w	ip, [r1], #1
  40154c:	fa5f f392 	uxtb.w	r3, r2, ror #8
  401550:	ebb3 0c0c 	subs.w	ip, r3, ip
  401554:	d110      	bne.n	401578 <strcmp+0x98>
  401556:	b17b      	cbz	r3, 401578 <strcmp+0x98>
  401558:	f811 cb01 	ldrb.w	ip, [r1], #1
  40155c:	fa5f f3a2 	uxtb.w	r3, r2, ror #16
  401560:	ebb3 0c0c 	subs.w	ip, r3, ip
  401564:	d108      	bne.n	401578 <strcmp+0x98>
  401566:	b13b      	cbz	r3, 401578 <strcmp+0x98>
  401568:	f811 cb01 	ldrb.w	ip, [r1], #1
  40156c:	fa5f f3b2 	uxtb.w	r3, r2, ror #24
  401570:	ebb3 0c0c 	subs.w	ip, r3, ip
  401574:	d100      	bne.n	401578 <strcmp+0x98>
  401576:	b90b      	cbnz	r3, 40157c <strcmp+0x9c>
  401578:	4660      	mov	r0, ip
  40157a:	4770      	bx	lr
  40157c:	f1bd 0d10 	subs.w	sp, sp, #16
  401580:	e9cd 4502 	strd	r4, r5, [sp, #8]
  401584:	e9cd 6700 	strd	r6, r7, [sp]
  401588:	f06f 0600 	mvn.w	r6, #0
  40158c:	f04f 0700 	mov.w	r7, #0
  401590:	f011 0c03 	ands.w	ip, r1, #3
  401594:	d12d      	bne.n	4015f2 <strcmp+0x112>
  401596:	f010 0f04 	tst.w	r0, #4
  40159a:	d00d      	beq.n	4015b8 <strcmp+0xd8>
  40159c:	f850 2b04 	ldr.w	r2, [r0], #4
  4015a0:	f851 4b04 	ldr.w	r4, [r1], #4
  4015a4:	42a2      	cmp	r2, r4
  4015a6:	fa82 fc46 	uadd8	ip, r2, r6
  4015aa:	faa7 fc86 	sel	ip, r7, r6
  4015ae:	bf08      	it	eq
  4015b0:	f1bc 0f00 	cmpeq.w	ip, #0
  4015b4:	f040 8089 	bne.w	4016ca <strcmp+0x1ea>
  4015b8:	f011 0f04 	tst.w	r1, #4
  4015bc:	d09f      	beq.n	4014fe <strcmp+0x1e>
  4015be:	f851 5b04 	ldr.w	r5, [r1], #4
  4015c2:	bf00      	nop
  4015c4:	e8f0 2302 	ldrd	r2, r3, [r0], #8
  4015c8:	42aa      	cmp	r2, r5
  4015ca:	fa82 fc46 	uadd8	ip, r2, r6
  4015ce:	faa7 fc86 	sel	ip, r7, r6
  4015d2:	bf08      	it	eq
  4015d4:	f1bc 0f00 	cmpeq.w	ip, #0
  4015d8:	d171      	bne.n	4016be <strcmp+0x1de>
  4015da:	e8f1 4502 	ldrd	r4, r5, [r1], #8
  4015de:	42a3      	cmp	r3, r4
  4015e0:	fa83 fc46 	uadd8	ip, r3, r6
  4015e4:	faa7 fc86 	sel	ip, r7, r6
  4015e8:	bf08      	it	eq
  4015ea:	f1bc 0f00 	cmpeq.w	ip, #0
  4015ee:	d163      	bne.n	4016b8 <strcmp+0x1d8>
  4015f0:	e7e8      	b.n	4015c4 <strcmp+0xe4>
  4015f2:	f021 0103 	bic.w	r1, r1, #3
  4015f6:	f1bc 0f02 	cmp.w	ip, #2
  4015fa:	d01e      	beq.n	40163a <strcmp+0x15a>
  4015fc:	da3b      	bge.n	401676 <strcmp+0x196>
  4015fe:	f851 5b04 	ldr.w	r5, [r1], #4
  401602:	bf00      	nop
  401604:	f850 3b04 	ldr.w	r3, [r0], #4
  401608:	ea4f 2515 	mov.w	r5, r5, lsr #8
  40160c:	fa83 fc46 	uadd8	ip, r3, r6
  401610:	faa7 fc86 	sel	ip, r7, r6
  401614:	ebb7 2f0c 	cmp.w	r7, ip, lsl #8
  401618:	ea03 2216 	and.w	r2, r3, r6, lsr #8
  40161c:	bf08      	it	eq
  40161e:	42aa      	cmpeq	r2, r5
  401620:	d14d      	bne.n	4016be <strcmp+0x1de>
  401622:	f851 5b04 	ldr.w	r5, [r1], #4
  401626:	f1bc 0f00 	cmp.w	ip, #0
  40162a:	ea82 0303 	eor.w	r3, r2, r3
  40162e:	ea4f 6205 	mov.w	r2, r5, lsl #24
  401632:	bf08      	it	eq
  401634:	4293      	cmpeq	r3, r2
  401636:	d13c      	bne.n	4016b2 <strcmp+0x1d2>
  401638:	e7e4      	b.n	401604 <strcmp+0x124>
  40163a:	f851 5b04 	ldr.w	r5, [r1], #4
  40163e:	bf00      	nop
  401640:	f850 3b04 	ldr.w	r3, [r0], #4
  401644:	ea4f 4515 	mov.w	r5, r5, lsr #16
  401648:	fa83 fc46 	uadd8	ip, r3, r6
  40164c:	faa7 fc86 	sel	ip, r7, r6
  401650:	ebb7 4f0c 	cmp.w	r7, ip, lsl #16
  401654:	ea03 4216 	and.w	r2, r3, r6, lsr #16
  401658:	bf08      	it	eq
  40165a:	42aa      	cmpeq	r2, r5
  40165c:	d12f      	bne.n	4016be <strcmp+0x1de>
  40165e:	f851 5b04 	ldr.w	r5, [r1], #4
  401662:	f1bc 0f00 	cmp.w	ip, #0
  401666:	ea82 0303 	eor.w	r3, r2, r3
  40166a:	ea4f 4205 	mov.w	r2, r5, lsl #16
  40166e:	bf08      	it	eq
  401670:	4293      	cmpeq	r3, r2
  401672:	d11e      	bne.n	4016b2 <strcmp+0x1d2>
  401674:	e7e4      	b.n	401640 <strcmp+0x160>
  401676:	f851 5b04 	ldr.w	r5, [r1], #4
  40167a:	bf00      	nop
  40167c:	f850 3b04 	ldr.w	r3, [r0], #4
  401680:	ea4f 6515 	mov.w	r5, r5, lsr #24
  401684:	fa83 fc46 	uadd8	ip, r3, r6
  401688:	faa7 fc86 	sel	ip, r7, r6
  40168c:	ebb7 6f0c 	cmp.w	r7, ip, lsl #24
  401690:	ea03 6216 	and.w	r2, r3, r6, lsr #24
  401694:	bf08      	it	eq
  401696:	42aa      	cmpeq	r2, r5
  401698:	d111      	bne.n	4016be <strcmp+0x1de>
  40169a:	f851 5b04 	ldr.w	r5, [r1], #4
  40169e:	f1bc 0f00 	cmp.w	ip, #0
  4016a2:	ea82 0303 	eor.w	r3, r2, r3
  4016a6:	ea4f 2205 	mov.w	r2, r5, lsl #8
  4016aa:	bf08      	it	eq
  4016ac:	4293      	cmpeq	r3, r2
  4016ae:	d100      	bne.n	4016b2 <strcmp+0x1d2>
  4016b0:	e7e4      	b.n	40167c <strcmp+0x19c>
  4016b2:	ba19      	rev	r1, r3
  4016b4:	ba12      	rev	r2, r2
  4016b6:	e00a      	b.n	4016ce <strcmp+0x1ee>
  4016b8:	ba19      	rev	r1, r3
  4016ba:	ba22      	rev	r2, r4
  4016bc:	e007      	b.n	4016ce <strcmp+0x1ee>
  4016be:	ba11      	rev	r1, r2
  4016c0:	ba2a      	rev	r2, r5
  4016c2:	e004      	b.n	4016ce <strcmp+0x1ee>
  4016c4:	ba19      	rev	r1, r3
  4016c6:	ba2a      	rev	r2, r5
  4016c8:	e001      	b.n	4016ce <strcmp+0x1ee>
  4016ca:	ba11      	rev	r1, r2
  4016cc:	ba22      	rev	r2, r4
  4016ce:	fa9c f08c 	rev.w	r0, ip
  4016d2:	e9dd 6700 	ldrd	r6, r7, [sp]
  4016d6:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
  4016da:	f11d 0d10 	adds.w	sp, sp, #16
  4016de:	b138      	cbz	r0, 4016f0 <strcmp+0x210>
  4016e0:	fab0 f080 	clz	r0, r0
  4016e4:	f1c0 0018 	rsb	r0, r0, #24
  4016e8:	fa21 f100 	lsr.w	r1, r1, r0
  4016ec:	fa22 f200 	lsr.w	r2, r2, r0
  4016f0:	2001      	movs	r0, #1
  4016f2:	4291      	cmp	r1, r2
  4016f4:	bf98      	it	ls
  4016f6:	4180      	sbcls	r0, r0
  4016f8:	4770      	bx	lr
  4016fa:	bf00      	nop

004016fc <strlen>:
  4016fc:	f020 0103 	bic.w	r1, r0, #3
  401700:	f010 0003 	ands.w	r0, r0, #3
  401704:	f1c0 0000 	rsb	r0, r0, #0
  401708:	f851 3b04 	ldr.w	r3, [r1], #4
  40170c:	f100 0c04 	add.w	ip, r0, #4
  401710:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  401714:	f06f 0200 	mvn.w	r2, #0
  401718:	bf1c      	itt	ne
  40171a:	fa22 f20c 	lsrne.w	r2, r2, ip
  40171e:	4313      	orrne	r3, r2
  401720:	f04f 0c01 	mov.w	ip, #1
  401724:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  401728:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  40172c:	eba3 020c 	sub.w	r2, r3, ip
  401730:	ea22 0203 	bic.w	r2, r2, r3
  401734:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  401738:	bf04      	itt	eq
  40173a:	f851 3b04 	ldreq.w	r3, [r1], #4
  40173e:	3004      	addeq	r0, #4
  401740:	d0f4      	beq.n	40172c <strlen+0x30>
  401742:	f013 0fff 	tst.w	r3, #255	; 0xff
  401746:	bf1f      	itttt	ne
  401748:	3001      	addne	r0, #1
  40174a:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
  40174e:	3001      	addne	r0, #1
  401750:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
  401754:	bf18      	it	ne
  401756:	3001      	addne	r0, #1
  401758:	4770      	bx	lr
  40175a:	bf00      	nop

0040175c <__sprint_r.part.0>:
  40175c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40175e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401762:	049c      	lsls	r4, r3, #18
  401764:	460e      	mov	r6, r1
  401766:	4680      	mov	r8, r0
  401768:	4691      	mov	r9, r2
  40176a:	d52a      	bpl.n	4017c2 <__sprint_r.part.0+0x66>
  40176c:	6893      	ldr	r3, [r2, #8]
  40176e:	6812      	ldr	r2, [r2, #0]
  401770:	f102 0a08 	add.w	sl, r2, #8
  401774:	b31b      	cbz	r3, 4017be <__sprint_r.part.0+0x62>
  401776:	e91a 00a0 	ldmdb	sl, {r5, r7}
  40177a:	08bf      	lsrs	r7, r7, #2
  40177c:	d017      	beq.n	4017ae <__sprint_r.part.0+0x52>
  40177e:	3d04      	subs	r5, #4
  401780:	2400      	movs	r4, #0
  401782:	e001      	b.n	401788 <__sprint_r.part.0+0x2c>
  401784:	42a7      	cmp	r7, r4
  401786:	d010      	beq.n	4017aa <__sprint_r.part.0+0x4e>
  401788:	4640      	mov	r0, r8
  40178a:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40178e:	4632      	mov	r2, r6
  401790:	f001 fd32 	bl	4031f8 <_fputwc_r>
  401794:	1c43      	adds	r3, r0, #1
  401796:	f104 0401 	add.w	r4, r4, #1
  40179a:	d1f3      	bne.n	401784 <__sprint_r.part.0+0x28>
  40179c:	2300      	movs	r3, #0
  40179e:	f8c9 3008 	str.w	r3, [r9, #8]
  4017a2:	f8c9 3004 	str.w	r3, [r9, #4]
  4017a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4017aa:	f8d9 3008 	ldr.w	r3, [r9, #8]
  4017ae:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
  4017b2:	f8c9 3008 	str.w	r3, [r9, #8]
  4017b6:	f10a 0a08 	add.w	sl, sl, #8
  4017ba:	2b00      	cmp	r3, #0
  4017bc:	d1db      	bne.n	401776 <__sprint_r.part.0+0x1a>
  4017be:	2000      	movs	r0, #0
  4017c0:	e7ec      	b.n	40179c <__sprint_r.part.0+0x40>
  4017c2:	f001 ff5b 	bl	40367c <__sfvwrite_r>
  4017c6:	2300      	movs	r3, #0
  4017c8:	f8c9 3008 	str.w	r3, [r9, #8]
  4017cc:	f8c9 3004 	str.w	r3, [r9, #4]
  4017d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

004017d4 <_vfiprintf_r>:
  4017d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4017d8:	b0b1      	sub	sp, #196	; 0xc4
  4017da:	461c      	mov	r4, r3
  4017dc:	9102      	str	r1, [sp, #8]
  4017de:	4690      	mov	r8, r2
  4017e0:	9308      	str	r3, [sp, #32]
  4017e2:	9006      	str	r0, [sp, #24]
  4017e4:	b118      	cbz	r0, 4017ee <_vfiprintf_r+0x1a>
  4017e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4017e8:	2b00      	cmp	r3, #0
  4017ea:	f000 80e8 	beq.w	4019be <_vfiprintf_r+0x1ea>
  4017ee:	9d02      	ldr	r5, [sp, #8]
  4017f0:	89ab      	ldrh	r3, [r5, #12]
  4017f2:	b29a      	uxth	r2, r3
  4017f4:	0490      	lsls	r0, r2, #18
  4017f6:	d407      	bmi.n	401808 <_vfiprintf_r+0x34>
  4017f8:	6e6a      	ldr	r2, [r5, #100]	; 0x64
  4017fa:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4017fe:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  401802:	81ab      	strh	r3, [r5, #12]
  401804:	b29a      	uxth	r2, r3
  401806:	6669      	str	r1, [r5, #100]	; 0x64
  401808:	0711      	lsls	r1, r2, #28
  40180a:	f140 80b7 	bpl.w	40197c <_vfiprintf_r+0x1a8>
  40180e:	f8dd b008 	ldr.w	fp, [sp, #8]
  401812:	f8db 3010 	ldr.w	r3, [fp, #16]
  401816:	2b00      	cmp	r3, #0
  401818:	f000 80b0 	beq.w	40197c <_vfiprintf_r+0x1a8>
  40181c:	f002 021a 	and.w	r2, r2, #26
  401820:	2a0a      	cmp	r2, #10
  401822:	f000 80b7 	beq.w	401994 <_vfiprintf_r+0x1c0>
  401826:	2300      	movs	r3, #0
  401828:	f10d 0980 	add.w	r9, sp, #128	; 0x80
  40182c:	930a      	str	r3, [sp, #40]	; 0x28
  40182e:	9315      	str	r3, [sp, #84]	; 0x54
  401830:	9314      	str	r3, [sp, #80]	; 0x50
  401832:	9309      	str	r3, [sp, #36]	; 0x24
  401834:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
  401838:	464e      	mov	r6, r9
  40183a:	f898 3000 	ldrb.w	r3, [r8]
  40183e:	2b00      	cmp	r3, #0
  401840:	f000 84c4 	beq.w	4021cc <_vfiprintf_r+0x9f8>
  401844:	2b25      	cmp	r3, #37	; 0x25
  401846:	f000 84c1 	beq.w	4021cc <_vfiprintf_r+0x9f8>
  40184a:	f108 0201 	add.w	r2, r8, #1
  40184e:	e001      	b.n	401854 <_vfiprintf_r+0x80>
  401850:	2b25      	cmp	r3, #37	; 0x25
  401852:	d004      	beq.n	40185e <_vfiprintf_r+0x8a>
  401854:	4614      	mov	r4, r2
  401856:	3201      	adds	r2, #1
  401858:	7823      	ldrb	r3, [r4, #0]
  40185a:	2b00      	cmp	r3, #0
  40185c:	d1f8      	bne.n	401850 <_vfiprintf_r+0x7c>
  40185e:	ebc8 0504 	rsb	r5, r8, r4
  401862:	b195      	cbz	r5, 40188a <_vfiprintf_r+0xb6>
  401864:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401866:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401868:	f8c6 8000 	str.w	r8, [r6]
  40186c:	3301      	adds	r3, #1
  40186e:	442a      	add	r2, r5
  401870:	2b07      	cmp	r3, #7
  401872:	6075      	str	r5, [r6, #4]
  401874:	9215      	str	r2, [sp, #84]	; 0x54
  401876:	9314      	str	r3, [sp, #80]	; 0x50
  401878:	dd7b      	ble.n	401972 <_vfiprintf_r+0x19e>
  40187a:	2a00      	cmp	r2, #0
  40187c:	f040 84d4 	bne.w	402228 <_vfiprintf_r+0xa54>
  401880:	9809      	ldr	r0, [sp, #36]	; 0x24
  401882:	9214      	str	r2, [sp, #80]	; 0x50
  401884:	4428      	add	r0, r5
  401886:	464e      	mov	r6, r9
  401888:	9009      	str	r0, [sp, #36]	; 0x24
  40188a:	7823      	ldrb	r3, [r4, #0]
  40188c:	2b00      	cmp	r3, #0
  40188e:	f000 83e9 	beq.w	402064 <_vfiprintf_r+0x890>
  401892:	2100      	movs	r1, #0
  401894:	f04f 0200 	mov.w	r2, #0
  401898:	f04f 3cff 	mov.w	ip, #4294967295
  40189c:	7863      	ldrb	r3, [r4, #1]
  40189e:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
  4018a2:	9104      	str	r1, [sp, #16]
  4018a4:	468a      	mov	sl, r1
  4018a6:	f104 0801 	add.w	r8, r4, #1
  4018aa:	4608      	mov	r0, r1
  4018ac:	4665      	mov	r5, ip
  4018ae:	f108 0801 	add.w	r8, r8, #1
  4018b2:	f1a3 0220 	sub.w	r2, r3, #32
  4018b6:	2a58      	cmp	r2, #88	; 0x58
  4018b8:	f200 82d5 	bhi.w	401e66 <_vfiprintf_r+0x692>
  4018bc:	e8df f012 	tbh	[pc, r2, lsl #1]
  4018c0:	02d302c7 	.word	0x02d302c7
  4018c4:	02ce02d3 	.word	0x02ce02d3
  4018c8:	02d302d3 	.word	0x02d302d3
  4018cc:	02d302d3 	.word	0x02d302d3
  4018d0:	02d302d3 	.word	0x02d302d3
  4018d4:	028b027e 	.word	0x028b027e
  4018d8:	008402d3 	.word	0x008402d3
  4018dc:	02d3028f 	.word	0x02d3028f
  4018e0:	0194012b 	.word	0x0194012b
  4018e4:	01940194 	.word	0x01940194
  4018e8:	01940194 	.word	0x01940194
  4018ec:	01940194 	.word	0x01940194
  4018f0:	01940194 	.word	0x01940194
  4018f4:	02d302d3 	.word	0x02d302d3
  4018f8:	02d302d3 	.word	0x02d302d3
  4018fc:	02d302d3 	.word	0x02d302d3
  401900:	02d302d3 	.word	0x02d302d3
  401904:	02d302d3 	.word	0x02d302d3
  401908:	02d30130 	.word	0x02d30130
  40190c:	02d302d3 	.word	0x02d302d3
  401910:	02d302d3 	.word	0x02d302d3
  401914:	02d302d3 	.word	0x02d302d3
  401918:	02d302d3 	.word	0x02d302d3
  40191c:	017902d3 	.word	0x017902d3
  401920:	02d302d3 	.word	0x02d302d3
  401924:	02d302d3 	.word	0x02d302d3
  401928:	01a202d3 	.word	0x01a202d3
  40192c:	02d302d3 	.word	0x02d302d3
  401930:	02d301bd 	.word	0x02d301bd
  401934:	02d302d3 	.word	0x02d302d3
  401938:	02d302d3 	.word	0x02d302d3
  40193c:	02d302d3 	.word	0x02d302d3
  401940:	02d302d3 	.word	0x02d302d3
  401944:	01e202d3 	.word	0x01e202d3
  401948:	02d301f8 	.word	0x02d301f8
  40194c:	02d302d3 	.word	0x02d302d3
  401950:	01f80214 	.word	0x01f80214
  401954:	02d302d3 	.word	0x02d302d3
  401958:	02d30219 	.word	0x02d30219
  40195c:	00890226 	.word	0x00890226
  401960:	02790264 	.word	0x02790264
  401964:	023802d3 	.word	0x023802d3
  401968:	011902d3 	.word	0x011902d3
  40196c:	02d302d3 	.word	0x02d302d3
  401970:	02ab      	.short	0x02ab
  401972:	3608      	adds	r6, #8
  401974:	9809      	ldr	r0, [sp, #36]	; 0x24
  401976:	4428      	add	r0, r5
  401978:	9009      	str	r0, [sp, #36]	; 0x24
  40197a:	e786      	b.n	40188a <_vfiprintf_r+0xb6>
  40197c:	9806      	ldr	r0, [sp, #24]
  40197e:	9902      	ldr	r1, [sp, #8]
  401980:	f001 fa5a 	bl	402e38 <__swsetup_r>
  401984:	b9b0      	cbnz	r0, 4019b4 <_vfiprintf_r+0x1e0>
  401986:	9d02      	ldr	r5, [sp, #8]
  401988:	89aa      	ldrh	r2, [r5, #12]
  40198a:	f002 021a 	and.w	r2, r2, #26
  40198e:	2a0a      	cmp	r2, #10
  401990:	f47f af49 	bne.w	401826 <_vfiprintf_r+0x52>
  401994:	f8dd b008 	ldr.w	fp, [sp, #8]
  401998:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40199c:	2b00      	cmp	r3, #0
  40199e:	f6ff af42 	blt.w	401826 <_vfiprintf_r+0x52>
  4019a2:	9806      	ldr	r0, [sp, #24]
  4019a4:	4659      	mov	r1, fp
  4019a6:	4642      	mov	r2, r8
  4019a8:	4623      	mov	r3, r4
  4019aa:	f000 fd3d 	bl	402428 <__sbprintf>
  4019ae:	b031      	add	sp, #196	; 0xc4
  4019b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019b4:	f04f 30ff 	mov.w	r0, #4294967295
  4019b8:	b031      	add	sp, #196	; 0xc4
  4019ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019be:	f001 fb85 	bl	4030cc <__sinit>
  4019c2:	e714      	b.n	4017ee <_vfiprintf_r+0x1a>
  4019c4:	4240      	negs	r0, r0
  4019c6:	9308      	str	r3, [sp, #32]
  4019c8:	f04a 0a04 	orr.w	sl, sl, #4
  4019cc:	f898 3000 	ldrb.w	r3, [r8]
  4019d0:	e76d      	b.n	4018ae <_vfiprintf_r+0xda>
  4019d2:	f01a 0320 	ands.w	r3, sl, #32
  4019d6:	9004      	str	r0, [sp, #16]
  4019d8:	46ac      	mov	ip, r5
  4019da:	f000 80f2 	beq.w	401bc2 <_vfiprintf_r+0x3ee>
  4019de:	f8dd b020 	ldr.w	fp, [sp, #32]
  4019e2:	f10b 0307 	add.w	r3, fp, #7
  4019e6:	f023 0307 	bic.w	r3, r3, #7
  4019ea:	f103 0408 	add.w	r4, r3, #8
  4019ee:	9408      	str	r4, [sp, #32]
  4019f0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4019f4:	2300      	movs	r3, #0
  4019f6:	f04f 0000 	mov.w	r0, #0
  4019fa:	2100      	movs	r1, #0
  4019fc:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  401a00:	f8cd c014 	str.w	ip, [sp, #20]
  401a04:	9107      	str	r1, [sp, #28]
  401a06:	f1bc 0f00 	cmp.w	ip, #0
  401a0a:	bfa8      	it	ge
  401a0c:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  401a10:	ea54 0205 	orrs.w	r2, r4, r5
  401a14:	f040 80ad 	bne.w	401b72 <_vfiprintf_r+0x39e>
  401a18:	f1bc 0f00 	cmp.w	ip, #0
  401a1c:	f040 80a9 	bne.w	401b72 <_vfiprintf_r+0x39e>
  401a20:	2b00      	cmp	r3, #0
  401a22:	f040 83bc 	bne.w	40219e <_vfiprintf_r+0x9ca>
  401a26:	f01a 0f01 	tst.w	sl, #1
  401a2a:	f000 83b8 	beq.w	40219e <_vfiprintf_r+0x9ca>
  401a2e:	af30      	add	r7, sp, #192	; 0xc0
  401a30:	2330      	movs	r3, #48	; 0x30
  401a32:	f807 3d41 	strb.w	r3, [r7, #-65]!
  401a36:	ebc7 0409 	rsb	r4, r7, r9
  401a3a:	9405      	str	r4, [sp, #20]
  401a3c:	f8dd b014 	ldr.w	fp, [sp, #20]
  401a40:	9c07      	ldr	r4, [sp, #28]
  401a42:	45e3      	cmp	fp, ip
  401a44:	bfb8      	it	lt
  401a46:	46e3      	movlt	fp, ip
  401a48:	f8cd b00c 	str.w	fp, [sp, #12]
  401a4c:	b11c      	cbz	r4, 401a56 <_vfiprintf_r+0x282>
  401a4e:	f10b 0b01 	add.w	fp, fp, #1
  401a52:	f8cd b00c 	str.w	fp, [sp, #12]
  401a56:	f01a 0502 	ands.w	r5, sl, #2
  401a5a:	9507      	str	r5, [sp, #28]
  401a5c:	d005      	beq.n	401a6a <_vfiprintf_r+0x296>
  401a5e:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401a62:	f10b 0b02 	add.w	fp, fp, #2
  401a66:	f8cd b00c 	str.w	fp, [sp, #12]
  401a6a:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
  401a6e:	930b      	str	r3, [sp, #44]	; 0x2c
  401a70:	f040 8217 	bne.w	401ea2 <_vfiprintf_r+0x6ce>
  401a74:	9d04      	ldr	r5, [sp, #16]
  401a76:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401a7a:	ebcb 0405 	rsb	r4, fp, r5
  401a7e:	2c00      	cmp	r4, #0
  401a80:	f340 820f 	ble.w	401ea2 <_vfiprintf_r+0x6ce>
  401a84:	2c10      	cmp	r4, #16
  401a86:	f340 8488 	ble.w	40239a <_vfiprintf_r+0xbc6>
  401a8a:	4dbd      	ldr	r5, [pc, #756]	; (401d80 <_vfiprintf_r+0x5ac>)
  401a8c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401a8e:	9814      	ldr	r0, [sp, #80]	; 0x50
  401a90:	462b      	mov	r3, r5
  401a92:	f04f 0b10 	mov.w	fp, #16
  401a96:	4625      	mov	r5, r4
  401a98:	4664      	mov	r4, ip
  401a9a:	46b4      	mov	ip, r6
  401a9c:	461e      	mov	r6, r3
  401a9e:	e006      	b.n	401aae <_vfiprintf_r+0x2da>
  401aa0:	1c83      	adds	r3, r0, #2
  401aa2:	f10c 0c08 	add.w	ip, ip, #8
  401aa6:	4608      	mov	r0, r1
  401aa8:	3d10      	subs	r5, #16
  401aaa:	2d10      	cmp	r5, #16
  401aac:	dd11      	ble.n	401ad2 <_vfiprintf_r+0x2fe>
  401aae:	1c41      	adds	r1, r0, #1
  401ab0:	3210      	adds	r2, #16
  401ab2:	2907      	cmp	r1, #7
  401ab4:	9215      	str	r2, [sp, #84]	; 0x54
  401ab6:	e88c 0840 	stmia.w	ip, {r6, fp}
  401aba:	9114      	str	r1, [sp, #80]	; 0x50
  401abc:	ddf0      	ble.n	401aa0 <_vfiprintf_r+0x2cc>
  401abe:	2a00      	cmp	r2, #0
  401ac0:	f040 81e2 	bne.w	401e88 <_vfiprintf_r+0x6b4>
  401ac4:	3d10      	subs	r5, #16
  401ac6:	2d10      	cmp	r5, #16
  401ac8:	f04f 0301 	mov.w	r3, #1
  401acc:	4610      	mov	r0, r2
  401ace:	46cc      	mov	ip, r9
  401ad0:	dced      	bgt.n	401aae <_vfiprintf_r+0x2da>
  401ad2:	4631      	mov	r1, r6
  401ad4:	4666      	mov	r6, ip
  401ad6:	46a4      	mov	ip, r4
  401ad8:	462c      	mov	r4, r5
  401ada:	460d      	mov	r5, r1
  401adc:	4422      	add	r2, r4
  401ade:	2b07      	cmp	r3, #7
  401ae0:	9215      	str	r2, [sp, #84]	; 0x54
  401ae2:	6035      	str	r5, [r6, #0]
  401ae4:	6074      	str	r4, [r6, #4]
  401ae6:	9314      	str	r3, [sp, #80]	; 0x50
  401ae8:	f300 8369 	bgt.w	4021be <_vfiprintf_r+0x9ea>
  401aec:	3608      	adds	r6, #8
  401aee:	1c59      	adds	r1, r3, #1
  401af0:	e1da      	b.n	401ea8 <_vfiprintf_r+0x6d4>
  401af2:	f01a 0f20 	tst.w	sl, #32
  401af6:	9004      	str	r0, [sp, #16]
  401af8:	46ac      	mov	ip, r5
  401afa:	f000 808b 	beq.w	401c14 <_vfiprintf_r+0x440>
  401afe:	9d08      	ldr	r5, [sp, #32]
  401b00:	1deb      	adds	r3, r5, #7
  401b02:	f023 0307 	bic.w	r3, r3, #7
  401b06:	f103 0b08 	add.w	fp, r3, #8
  401b0a:	e9d3 4500 	ldrd	r4, r5, [r3]
  401b0e:	f8cd b020 	str.w	fp, [sp, #32]
  401b12:	2301      	movs	r3, #1
  401b14:	e76f      	b.n	4019f6 <_vfiprintf_r+0x222>
  401b16:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
  401b1a:	f898 3000 	ldrb.w	r3, [r8]
  401b1e:	e6c6      	b.n	4018ae <_vfiprintf_r+0xda>
  401b20:	f04a 0a10 	orr.w	sl, sl, #16
  401b24:	f01a 0f20 	tst.w	sl, #32
  401b28:	9004      	str	r0, [sp, #16]
  401b2a:	46ac      	mov	ip, r5
  401b2c:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401b30:	f000 80c6 	beq.w	401cc0 <_vfiprintf_r+0x4ec>
  401b34:	9c08      	ldr	r4, [sp, #32]
  401b36:	1de1      	adds	r1, r4, #7
  401b38:	f021 0107 	bic.w	r1, r1, #7
  401b3c:	e9d1 2300 	ldrd	r2, r3, [r1]
  401b40:	3108      	adds	r1, #8
  401b42:	9108      	str	r1, [sp, #32]
  401b44:	4614      	mov	r4, r2
  401b46:	461d      	mov	r5, r3
  401b48:	2a00      	cmp	r2, #0
  401b4a:	f173 0000 	sbcs.w	r0, r3, #0
  401b4e:	f2c0 83cd 	blt.w	4022ec <_vfiprintf_r+0xb18>
  401b52:	f1bc 0f00 	cmp.w	ip, #0
  401b56:	f89d 1047 	ldrb.w	r1, [sp, #71]	; 0x47
  401b5a:	9107      	str	r1, [sp, #28]
  401b5c:	bfa8      	it	ge
  401b5e:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  401b62:	ea54 0205 	orrs.w	r2, r4, r5
  401b66:	f8cd c014 	str.w	ip, [sp, #20]
  401b6a:	f04f 0301 	mov.w	r3, #1
  401b6e:	f43f af53 	beq.w	401a18 <_vfiprintf_r+0x244>
  401b72:	2b01      	cmp	r3, #1
  401b74:	f000 8315 	beq.w	4021a2 <_vfiprintf_r+0x9ce>
  401b78:	2b02      	cmp	r3, #2
  401b7a:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
  401b7e:	f040 8248 	bne.w	402012 <_vfiprintf_r+0x83e>
  401b82:	980a      	ldr	r0, [sp, #40]	; 0x28
  401b84:	4619      	mov	r1, r3
  401b86:	0922      	lsrs	r2, r4, #4
  401b88:	f004 040f 	and.w	r4, r4, #15
  401b8c:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
  401b90:	460f      	mov	r7, r1
  401b92:	092b      	lsrs	r3, r5, #4
  401b94:	5d01      	ldrb	r1, [r0, r4]
  401b96:	7039      	strb	r1, [r7, #0]
  401b98:	ea52 0b03 	orrs.w	fp, r2, r3
  401b9c:	4614      	mov	r4, r2
  401b9e:	461d      	mov	r5, r3
  401ba0:	f107 31ff 	add.w	r1, r7, #4294967295
  401ba4:	d1ef      	bne.n	401b86 <_vfiprintf_r+0x3b2>
  401ba6:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  401baa:	ebc7 0309 	rsb	r3, r7, r9
  401bae:	9305      	str	r3, [sp, #20]
  401bb0:	e744      	b.n	401a3c <_vfiprintf_r+0x268>
  401bb2:	f04a 0a10 	orr.w	sl, sl, #16
  401bb6:	f01a 0320 	ands.w	r3, sl, #32
  401bba:	9004      	str	r0, [sp, #16]
  401bbc:	46ac      	mov	ip, r5
  401bbe:	f47f af0e 	bne.w	4019de <_vfiprintf_r+0x20a>
  401bc2:	f01a 0210 	ands.w	r2, sl, #16
  401bc6:	f040 830f 	bne.w	4021e8 <_vfiprintf_r+0xa14>
  401bca:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
  401bce:	f000 830b 	beq.w	4021e8 <_vfiprintf_r+0xa14>
  401bd2:	f8dd b020 	ldr.w	fp, [sp, #32]
  401bd6:	f8bb 4000 	ldrh.w	r4, [fp]
  401bda:	f10b 0b04 	add.w	fp, fp, #4
  401bde:	4613      	mov	r3, r2
  401be0:	2500      	movs	r5, #0
  401be2:	f8cd b020 	str.w	fp, [sp, #32]
  401be6:	e706      	b.n	4019f6 <_vfiprintf_r+0x222>
  401be8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401bec:	2000      	movs	r0, #0
  401bee:	f818 3b01 	ldrb.w	r3, [r8], #1
  401bf2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401bf6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
  401bfa:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401bfe:	2a09      	cmp	r2, #9
  401c00:	d9f5      	bls.n	401bee <_vfiprintf_r+0x41a>
  401c02:	e656      	b.n	4018b2 <_vfiprintf_r+0xde>
  401c04:	f04a 0a10 	orr.w	sl, sl, #16
  401c08:	f01a 0f20 	tst.w	sl, #32
  401c0c:	9004      	str	r0, [sp, #16]
  401c0e:	46ac      	mov	ip, r5
  401c10:	f47f af75 	bne.w	401afe <_vfiprintf_r+0x32a>
  401c14:	f01a 0f10 	tst.w	sl, #16
  401c18:	f040 82ec 	bne.w	4021f4 <_vfiprintf_r+0xa20>
  401c1c:	f01a 0f40 	tst.w	sl, #64	; 0x40
  401c20:	f000 82e8 	beq.w	4021f4 <_vfiprintf_r+0xa20>
  401c24:	f8dd b020 	ldr.w	fp, [sp, #32]
  401c28:	f8bb 4000 	ldrh.w	r4, [fp]
  401c2c:	f10b 0b04 	add.w	fp, fp, #4
  401c30:	2500      	movs	r5, #0
  401c32:	2301      	movs	r3, #1
  401c34:	f8cd b020 	str.w	fp, [sp, #32]
  401c38:	e6dd      	b.n	4019f6 <_vfiprintf_r+0x222>
  401c3a:	46ac      	mov	ip, r5
  401c3c:	f01a 0f20 	tst.w	sl, #32
  401c40:	4d50      	ldr	r5, [pc, #320]	; (401d84 <_vfiprintf_r+0x5b0>)
  401c42:	9004      	str	r0, [sp, #16]
  401c44:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401c48:	950a      	str	r5, [sp, #40]	; 0x28
  401c4a:	f000 80ee 	beq.w	401e2a <_vfiprintf_r+0x656>
  401c4e:	9d08      	ldr	r5, [sp, #32]
  401c50:	1dea      	adds	r2, r5, #7
  401c52:	f022 0207 	bic.w	r2, r2, #7
  401c56:	e9d2 4500 	ldrd	r4, r5, [r2]
  401c5a:	f102 0b08 	add.w	fp, r2, #8
  401c5e:	f8cd b020 	str.w	fp, [sp, #32]
  401c62:	f01a 0f01 	tst.w	sl, #1
  401c66:	f000 82a8 	beq.w	4021ba <_vfiprintf_r+0x9e6>
  401c6a:	ea54 0b05 	orrs.w	fp, r4, r5
  401c6e:	f000 82a4 	beq.w	4021ba <_vfiprintf_r+0x9e6>
  401c72:	2230      	movs	r2, #48	; 0x30
  401c74:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  401c78:	f04a 0a02 	orr.w	sl, sl, #2
  401c7c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401c80:	2302      	movs	r3, #2
  401c82:	e6b8      	b.n	4019f6 <_vfiprintf_r+0x222>
  401c84:	9b08      	ldr	r3, [sp, #32]
  401c86:	f8dd b020 	ldr.w	fp, [sp, #32]
  401c8a:	681b      	ldr	r3, [r3, #0]
  401c8c:	9004      	str	r0, [sp, #16]
  401c8e:	2401      	movs	r4, #1
  401c90:	f04f 0500 	mov.w	r5, #0
  401c94:	f10b 0b04 	add.w	fp, fp, #4
  401c98:	9403      	str	r4, [sp, #12]
  401c9a:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  401c9e:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  401ca2:	f8cd b020 	str.w	fp, [sp, #32]
  401ca6:	9405      	str	r4, [sp, #20]
  401ca8:	af16      	add	r7, sp, #88	; 0x58
  401caa:	f04f 0c00 	mov.w	ip, #0
  401cae:	e6d2      	b.n	401a56 <_vfiprintf_r+0x282>
  401cb0:	f01a 0f20 	tst.w	sl, #32
  401cb4:	9004      	str	r0, [sp, #16]
  401cb6:	46ac      	mov	ip, r5
  401cb8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401cbc:	f47f af3a 	bne.w	401b34 <_vfiprintf_r+0x360>
  401cc0:	f01a 0f10 	tst.w	sl, #16
  401cc4:	f040 82a4 	bne.w	402210 <_vfiprintf_r+0xa3c>
  401cc8:	f01a 0f40 	tst.w	sl, #64	; 0x40
  401ccc:	f000 82a0 	beq.w	402210 <_vfiprintf_r+0xa3c>
  401cd0:	f8dd b020 	ldr.w	fp, [sp, #32]
  401cd4:	f9bb 4000 	ldrsh.w	r4, [fp]
  401cd8:	f10b 0b04 	add.w	fp, fp, #4
  401cdc:	17e5      	asrs	r5, r4, #31
  401cde:	4622      	mov	r2, r4
  401ce0:	462b      	mov	r3, r5
  401ce2:	f8cd b020 	str.w	fp, [sp, #32]
  401ce6:	e72f      	b.n	401b48 <_vfiprintf_r+0x374>
  401ce8:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
  401cec:	f898 3000 	ldrb.w	r3, [r8]
  401cf0:	e5dd      	b.n	4018ae <_vfiprintf_r+0xda>
  401cf2:	f898 3000 	ldrb.w	r3, [r8]
  401cf6:	4642      	mov	r2, r8
  401cf8:	2b6c      	cmp	r3, #108	; 0x6c
  401cfa:	bf03      	ittte	eq
  401cfc:	f108 0801 	addeq.w	r8, r8, #1
  401d00:	f04a 0a20 	orreq.w	sl, sl, #32
  401d04:	7853      	ldrbeq	r3, [r2, #1]
  401d06:	f04a 0a10 	orrne.w	sl, sl, #16
  401d0a:	e5d0      	b.n	4018ae <_vfiprintf_r+0xda>
  401d0c:	f01a 0f20 	tst.w	sl, #32
  401d10:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401d14:	f000 82f8 	beq.w	402308 <_vfiprintf_r+0xb34>
  401d18:	9c08      	ldr	r4, [sp, #32]
  401d1a:	6821      	ldr	r1, [r4, #0]
  401d1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401d1e:	17e5      	asrs	r5, r4, #31
  401d20:	462b      	mov	r3, r5
  401d22:	9d08      	ldr	r5, [sp, #32]
  401d24:	4622      	mov	r2, r4
  401d26:	3504      	adds	r5, #4
  401d28:	9508      	str	r5, [sp, #32]
  401d2a:	e9c1 2300 	strd	r2, r3, [r1]
  401d2e:	e584      	b.n	40183a <_vfiprintf_r+0x66>
  401d30:	9c08      	ldr	r4, [sp, #32]
  401d32:	9004      	str	r0, [sp, #16]
  401d34:	6827      	ldr	r7, [r4, #0]
  401d36:	46ac      	mov	ip, r5
  401d38:	f04f 0500 	mov.w	r5, #0
  401d3c:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  401d40:	3404      	adds	r4, #4
  401d42:	2f00      	cmp	r7, #0
  401d44:	f000 8334 	beq.w	4023b0 <_vfiprintf_r+0xbdc>
  401d48:	f1bc 0f00 	cmp.w	ip, #0
  401d4c:	4638      	mov	r0, r7
  401d4e:	f2c0 8308 	blt.w	402362 <_vfiprintf_r+0xb8e>
  401d52:	4662      	mov	r2, ip
  401d54:	2100      	movs	r1, #0
  401d56:	f8cd c004 	str.w	ip, [sp, #4]
  401d5a:	f002 f9d1 	bl	404100 <memchr>
  401d5e:	f8dd c004 	ldr.w	ip, [sp, #4]
  401d62:	2800      	cmp	r0, #0
  401d64:	f000 833c 	beq.w	4023e0 <_vfiprintf_r+0xc0c>
  401d68:	1bc0      	subs	r0, r0, r7
  401d6a:	4560      	cmp	r0, ip
  401d6c:	bfa8      	it	ge
  401d6e:	4660      	movge	r0, ip
  401d70:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  401d74:	9005      	str	r0, [sp, #20]
  401d76:	9408      	str	r4, [sp, #32]
  401d78:	9507      	str	r5, [sp, #28]
  401d7a:	f04f 0c00 	mov.w	ip, #0
  401d7e:	e65d      	b.n	401a3c <_vfiprintf_r+0x268>
  401d80:	00405500 	.word	0x00405500
  401d84:	004054c0 	.word	0x004054c0
  401d88:	9a08      	ldr	r2, [sp, #32]
  401d8a:	9004      	str	r0, [sp, #16]
  401d8c:	2330      	movs	r3, #48	; 0x30
  401d8e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
  401d92:	f102 0b04 	add.w	fp, r2, #4
  401d96:	2378      	movs	r3, #120	; 0x78
  401d98:	48af      	ldr	r0, [pc, #700]	; (402058 <_vfiprintf_r+0x884>)
  401d9a:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  401d9e:	46ac      	mov	ip, r5
  401da0:	6814      	ldr	r4, [r2, #0]
  401da2:	f8cd b020 	str.w	fp, [sp, #32]
  401da6:	f04a 0a02 	orr.w	sl, sl, #2
  401daa:	2500      	movs	r5, #0
  401dac:	900a      	str	r0, [sp, #40]	; 0x28
  401dae:	2302      	movs	r3, #2
  401db0:	e621      	b.n	4019f6 <_vfiprintf_r+0x222>
  401db2:	f04a 0a20 	orr.w	sl, sl, #32
  401db6:	f898 3000 	ldrb.w	r3, [r8]
  401dba:	e578      	b.n	4018ae <_vfiprintf_r+0xda>
  401dbc:	f8dd b020 	ldr.w	fp, [sp, #32]
  401dc0:	f8db 0000 	ldr.w	r0, [fp]
  401dc4:	2800      	cmp	r0, #0
  401dc6:	f10b 0304 	add.w	r3, fp, #4
  401dca:	f6ff adfb 	blt.w	4019c4 <_vfiprintf_r+0x1f0>
  401dce:	9308      	str	r3, [sp, #32]
  401dd0:	f898 3000 	ldrb.w	r3, [r8]
  401dd4:	e56b      	b.n	4018ae <_vfiprintf_r+0xda>
  401dd6:	f898 3000 	ldrb.w	r3, [r8]
  401dda:	212b      	movs	r1, #43	; 0x2b
  401ddc:	e567      	b.n	4018ae <_vfiprintf_r+0xda>
  401dde:	f898 3000 	ldrb.w	r3, [r8]
  401de2:	2b2a      	cmp	r3, #42	; 0x2a
  401de4:	f108 0401 	add.w	r4, r8, #1
  401de8:	f000 8309 	beq.w	4023fe <_vfiprintf_r+0xc2a>
  401dec:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401df0:	2a09      	cmp	r2, #9
  401df2:	bf98      	it	ls
  401df4:	2500      	movls	r5, #0
  401df6:	f200 82fe 	bhi.w	4023f6 <_vfiprintf_r+0xc22>
  401dfa:	f814 3b01 	ldrb.w	r3, [r4], #1
  401dfe:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401e02:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401e06:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401e0a:	2a09      	cmp	r2, #9
  401e0c:	d9f5      	bls.n	401dfa <_vfiprintf_r+0x626>
  401e0e:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  401e12:	46a0      	mov	r8, r4
  401e14:	e54d      	b.n	4018b2 <_vfiprintf_r+0xde>
  401e16:	4c90      	ldr	r4, [pc, #576]	; (402058 <_vfiprintf_r+0x884>)
  401e18:	9004      	str	r0, [sp, #16]
  401e1a:	f01a 0f20 	tst.w	sl, #32
  401e1e:	46ac      	mov	ip, r5
  401e20:	940a      	str	r4, [sp, #40]	; 0x28
  401e22:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401e26:	f47f af12 	bne.w	401c4e <_vfiprintf_r+0x47a>
  401e2a:	f01a 0f10 	tst.w	sl, #16
  401e2e:	f040 81e9 	bne.w	402204 <_vfiprintf_r+0xa30>
  401e32:	f01a 0f40 	tst.w	sl, #64	; 0x40
  401e36:	f000 81e5 	beq.w	402204 <_vfiprintf_r+0xa30>
  401e3a:	f8dd b020 	ldr.w	fp, [sp, #32]
  401e3e:	f8bb 4000 	ldrh.w	r4, [fp]
  401e42:	f10b 0b04 	add.w	fp, fp, #4
  401e46:	2500      	movs	r5, #0
  401e48:	f8cd b020 	str.w	fp, [sp, #32]
  401e4c:	e709      	b.n	401c62 <_vfiprintf_r+0x48e>
  401e4e:	f898 3000 	ldrb.w	r3, [r8]
  401e52:	2900      	cmp	r1, #0
  401e54:	f47f ad2b 	bne.w	4018ae <_vfiprintf_r+0xda>
  401e58:	2120      	movs	r1, #32
  401e5a:	e528      	b.n	4018ae <_vfiprintf_r+0xda>
  401e5c:	f04a 0a01 	orr.w	sl, sl, #1
  401e60:	f898 3000 	ldrb.w	r3, [r8]
  401e64:	e523      	b.n	4018ae <_vfiprintf_r+0xda>
  401e66:	9004      	str	r0, [sp, #16]
  401e68:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  401e6c:	2b00      	cmp	r3, #0
  401e6e:	f000 80f9 	beq.w	402064 <_vfiprintf_r+0x890>
  401e72:	2501      	movs	r5, #1
  401e74:	f04f 0b00 	mov.w	fp, #0
  401e78:	9503      	str	r5, [sp, #12]
  401e7a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  401e7e:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  401e82:	9505      	str	r5, [sp, #20]
  401e84:	af16      	add	r7, sp, #88	; 0x58
  401e86:	e710      	b.n	401caa <_vfiprintf_r+0x4d6>
  401e88:	9806      	ldr	r0, [sp, #24]
  401e8a:	9902      	ldr	r1, [sp, #8]
  401e8c:	aa13      	add	r2, sp, #76	; 0x4c
  401e8e:	f7ff fc65 	bl	40175c <__sprint_r.part.0>
  401e92:	2800      	cmp	r0, #0
  401e94:	f040 80ed 	bne.w	402072 <_vfiprintf_r+0x89e>
  401e98:	9814      	ldr	r0, [sp, #80]	; 0x50
  401e9a:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401e9c:	1c43      	adds	r3, r0, #1
  401e9e:	46cc      	mov	ip, r9
  401ea0:	e602      	b.n	401aa8 <_vfiprintf_r+0x2d4>
  401ea2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401ea4:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401ea6:	1c59      	adds	r1, r3, #1
  401ea8:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
  401eac:	b168      	cbz	r0, 401eca <_vfiprintf_r+0x6f6>
  401eae:	3201      	adds	r2, #1
  401eb0:	f10d 0047 	add.w	r0, sp, #71	; 0x47
  401eb4:	2301      	movs	r3, #1
  401eb6:	2907      	cmp	r1, #7
  401eb8:	9215      	str	r2, [sp, #84]	; 0x54
  401eba:	9114      	str	r1, [sp, #80]	; 0x50
  401ebc:	e886 0009 	stmia.w	r6, {r0, r3}
  401ec0:	f300 8160 	bgt.w	402184 <_vfiprintf_r+0x9b0>
  401ec4:	460b      	mov	r3, r1
  401ec6:	3608      	adds	r6, #8
  401ec8:	3101      	adds	r1, #1
  401eca:	9c07      	ldr	r4, [sp, #28]
  401ecc:	b164      	cbz	r4, 401ee8 <_vfiprintf_r+0x714>
  401ece:	3202      	adds	r2, #2
  401ed0:	a812      	add	r0, sp, #72	; 0x48
  401ed2:	2302      	movs	r3, #2
  401ed4:	2907      	cmp	r1, #7
  401ed6:	9215      	str	r2, [sp, #84]	; 0x54
  401ed8:	9114      	str	r1, [sp, #80]	; 0x50
  401eda:	e886 0009 	stmia.w	r6, {r0, r3}
  401ede:	f300 8157 	bgt.w	402190 <_vfiprintf_r+0x9bc>
  401ee2:	460b      	mov	r3, r1
  401ee4:	3608      	adds	r6, #8
  401ee6:	3101      	adds	r1, #1
  401ee8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401eea:	2d80      	cmp	r5, #128	; 0x80
  401eec:	f000 8101 	beq.w	4020f2 <_vfiprintf_r+0x91e>
  401ef0:	9d05      	ldr	r5, [sp, #20]
  401ef2:	ebc5 040c 	rsb	r4, r5, ip
  401ef6:	2c00      	cmp	r4, #0
  401ef8:	dd2f      	ble.n	401f5a <_vfiprintf_r+0x786>
  401efa:	2c10      	cmp	r4, #16
  401efc:	4d57      	ldr	r5, [pc, #348]	; (40205c <_vfiprintf_r+0x888>)
  401efe:	dd22      	ble.n	401f46 <_vfiprintf_r+0x772>
  401f00:	4630      	mov	r0, r6
  401f02:	f04f 0b10 	mov.w	fp, #16
  401f06:	462e      	mov	r6, r5
  401f08:	4625      	mov	r5, r4
  401f0a:	9c06      	ldr	r4, [sp, #24]
  401f0c:	e006      	b.n	401f1c <_vfiprintf_r+0x748>
  401f0e:	f103 0c02 	add.w	ip, r3, #2
  401f12:	3008      	adds	r0, #8
  401f14:	460b      	mov	r3, r1
  401f16:	3d10      	subs	r5, #16
  401f18:	2d10      	cmp	r5, #16
  401f1a:	dd10      	ble.n	401f3e <_vfiprintf_r+0x76a>
  401f1c:	1c59      	adds	r1, r3, #1
  401f1e:	3210      	adds	r2, #16
  401f20:	2907      	cmp	r1, #7
  401f22:	9215      	str	r2, [sp, #84]	; 0x54
  401f24:	e880 0840 	stmia.w	r0, {r6, fp}
  401f28:	9114      	str	r1, [sp, #80]	; 0x50
  401f2a:	ddf0      	ble.n	401f0e <_vfiprintf_r+0x73a>
  401f2c:	2a00      	cmp	r2, #0
  401f2e:	d163      	bne.n	401ff8 <_vfiprintf_r+0x824>
  401f30:	3d10      	subs	r5, #16
  401f32:	2d10      	cmp	r5, #16
  401f34:	f04f 0c01 	mov.w	ip, #1
  401f38:	4613      	mov	r3, r2
  401f3a:	4648      	mov	r0, r9
  401f3c:	dcee      	bgt.n	401f1c <_vfiprintf_r+0x748>
  401f3e:	462c      	mov	r4, r5
  401f40:	4661      	mov	r1, ip
  401f42:	4635      	mov	r5, r6
  401f44:	4606      	mov	r6, r0
  401f46:	4422      	add	r2, r4
  401f48:	2907      	cmp	r1, #7
  401f4a:	9215      	str	r2, [sp, #84]	; 0x54
  401f4c:	6035      	str	r5, [r6, #0]
  401f4e:	6074      	str	r4, [r6, #4]
  401f50:	9114      	str	r1, [sp, #80]	; 0x50
  401f52:	f300 80c1 	bgt.w	4020d8 <_vfiprintf_r+0x904>
  401f56:	3608      	adds	r6, #8
  401f58:	3101      	adds	r1, #1
  401f5a:	9d05      	ldr	r5, [sp, #20]
  401f5c:	6037      	str	r7, [r6, #0]
  401f5e:	442a      	add	r2, r5
  401f60:	2907      	cmp	r1, #7
  401f62:	9215      	str	r2, [sp, #84]	; 0x54
  401f64:	6075      	str	r5, [r6, #4]
  401f66:	9114      	str	r1, [sp, #80]	; 0x50
  401f68:	f340 80c1 	ble.w	4020ee <_vfiprintf_r+0x91a>
  401f6c:	2a00      	cmp	r2, #0
  401f6e:	f040 8130 	bne.w	4021d2 <_vfiprintf_r+0x9fe>
  401f72:	9214      	str	r2, [sp, #80]	; 0x50
  401f74:	464e      	mov	r6, r9
  401f76:	f01a 0f04 	tst.w	sl, #4
  401f7a:	f000 808b 	beq.w	402094 <_vfiprintf_r+0x8c0>
  401f7e:	9d04      	ldr	r5, [sp, #16]
  401f80:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401f84:	ebcb 0405 	rsb	r4, fp, r5
  401f88:	2c00      	cmp	r4, #0
  401f8a:	f340 8083 	ble.w	402094 <_vfiprintf_r+0x8c0>
  401f8e:	2c10      	cmp	r4, #16
  401f90:	f340 8222 	ble.w	4023d8 <_vfiprintf_r+0xc04>
  401f94:	9914      	ldr	r1, [sp, #80]	; 0x50
  401f96:	4d32      	ldr	r5, [pc, #200]	; (402060 <_vfiprintf_r+0x88c>)
  401f98:	f8dd a018 	ldr.w	sl, [sp, #24]
  401f9c:	f8dd b008 	ldr.w	fp, [sp, #8]
  401fa0:	2710      	movs	r7, #16
  401fa2:	e005      	b.n	401fb0 <_vfiprintf_r+0x7dc>
  401fa4:	1c88      	adds	r0, r1, #2
  401fa6:	3608      	adds	r6, #8
  401fa8:	4619      	mov	r1, r3
  401faa:	3c10      	subs	r4, #16
  401fac:	2c10      	cmp	r4, #16
  401fae:	dd10      	ble.n	401fd2 <_vfiprintf_r+0x7fe>
  401fb0:	1c4b      	adds	r3, r1, #1
  401fb2:	3210      	adds	r2, #16
  401fb4:	2b07      	cmp	r3, #7
  401fb6:	9215      	str	r2, [sp, #84]	; 0x54
  401fb8:	e886 00a0 	stmia.w	r6, {r5, r7}
  401fbc:	9314      	str	r3, [sp, #80]	; 0x50
  401fbe:	ddf1      	ble.n	401fa4 <_vfiprintf_r+0x7d0>
  401fc0:	2a00      	cmp	r2, #0
  401fc2:	d17d      	bne.n	4020c0 <_vfiprintf_r+0x8ec>
  401fc4:	3c10      	subs	r4, #16
  401fc6:	2c10      	cmp	r4, #16
  401fc8:	f04f 0001 	mov.w	r0, #1
  401fcc:	4611      	mov	r1, r2
  401fce:	464e      	mov	r6, r9
  401fd0:	dcee      	bgt.n	401fb0 <_vfiprintf_r+0x7dc>
  401fd2:	4422      	add	r2, r4
  401fd4:	2807      	cmp	r0, #7
  401fd6:	9215      	str	r2, [sp, #84]	; 0x54
  401fd8:	6035      	str	r5, [r6, #0]
  401fda:	6074      	str	r4, [r6, #4]
  401fdc:	9014      	str	r0, [sp, #80]	; 0x50
  401fde:	dd59      	ble.n	402094 <_vfiprintf_r+0x8c0>
  401fe0:	2a00      	cmp	r2, #0
  401fe2:	d14f      	bne.n	402084 <_vfiprintf_r+0x8b0>
  401fe4:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401fe6:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401fea:	9d04      	ldr	r5, [sp, #16]
  401fec:	45ab      	cmp	fp, r5
  401fee:	bfac      	ite	ge
  401ff0:	445c      	addge	r4, fp
  401ff2:	1964      	addlt	r4, r4, r5
  401ff4:	9409      	str	r4, [sp, #36]	; 0x24
  401ff6:	e05e      	b.n	4020b6 <_vfiprintf_r+0x8e2>
  401ff8:	4620      	mov	r0, r4
  401ffa:	9902      	ldr	r1, [sp, #8]
  401ffc:	aa13      	add	r2, sp, #76	; 0x4c
  401ffe:	f7ff fbad 	bl	40175c <__sprint_r.part.0>
  402002:	2800      	cmp	r0, #0
  402004:	d135      	bne.n	402072 <_vfiprintf_r+0x89e>
  402006:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402008:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40200a:	f103 0c01 	add.w	ip, r3, #1
  40200e:	4648      	mov	r0, r9
  402010:	e781      	b.n	401f16 <_vfiprintf_r+0x742>
  402012:	08e0      	lsrs	r0, r4, #3
  402014:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
  402018:	f004 0207 	and.w	r2, r4, #7
  40201c:	08e9      	lsrs	r1, r5, #3
  40201e:	3230      	adds	r2, #48	; 0x30
  402020:	ea50 0b01 	orrs.w	fp, r0, r1
  402024:	461f      	mov	r7, r3
  402026:	701a      	strb	r2, [r3, #0]
  402028:	4604      	mov	r4, r0
  40202a:	460d      	mov	r5, r1
  40202c:	f103 33ff 	add.w	r3, r3, #4294967295
  402030:	d1ef      	bne.n	402012 <_vfiprintf_r+0x83e>
  402032:	f01a 0f01 	tst.w	sl, #1
  402036:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  40203a:	4639      	mov	r1, r7
  40203c:	f000 80b9 	beq.w	4021b2 <_vfiprintf_r+0x9de>
  402040:	2a30      	cmp	r2, #48	; 0x30
  402042:	f43f acf8 	beq.w	401a36 <_vfiprintf_r+0x262>
  402046:	461f      	mov	r7, r3
  402048:	ebc7 0509 	rsb	r5, r7, r9
  40204c:	2330      	movs	r3, #48	; 0x30
  40204e:	9505      	str	r5, [sp, #20]
  402050:	f801 3c01 	strb.w	r3, [r1, #-1]
  402054:	e4f2      	b.n	401a3c <_vfiprintf_r+0x268>
  402056:	bf00      	nop
  402058:	004054d4 	.word	0x004054d4
  40205c:	004054f0 	.word	0x004054f0
  402060:	00405500 	.word	0x00405500
  402064:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402066:	b123      	cbz	r3, 402072 <_vfiprintf_r+0x89e>
  402068:	9806      	ldr	r0, [sp, #24]
  40206a:	9902      	ldr	r1, [sp, #8]
  40206c:	aa13      	add	r2, sp, #76	; 0x4c
  40206e:	f7ff fb75 	bl	40175c <__sprint_r.part.0>
  402072:	9c02      	ldr	r4, [sp, #8]
  402074:	89a3      	ldrh	r3, [r4, #12]
  402076:	065b      	lsls	r3, r3, #25
  402078:	f53f ac9c 	bmi.w	4019b4 <_vfiprintf_r+0x1e0>
  40207c:	9809      	ldr	r0, [sp, #36]	; 0x24
  40207e:	b031      	add	sp, #196	; 0xc4
  402080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402084:	9806      	ldr	r0, [sp, #24]
  402086:	9902      	ldr	r1, [sp, #8]
  402088:	aa13      	add	r2, sp, #76	; 0x4c
  40208a:	f7ff fb67 	bl	40175c <__sprint_r.part.0>
  40208e:	2800      	cmp	r0, #0
  402090:	d1ef      	bne.n	402072 <_vfiprintf_r+0x89e>
  402092:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402094:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402096:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40209a:	9d04      	ldr	r5, [sp, #16]
  40209c:	45ab      	cmp	fp, r5
  40209e:	bfac      	ite	ge
  4020a0:	445c      	addge	r4, fp
  4020a2:	1964      	addlt	r4, r4, r5
  4020a4:	9409      	str	r4, [sp, #36]	; 0x24
  4020a6:	b132      	cbz	r2, 4020b6 <_vfiprintf_r+0x8e2>
  4020a8:	9806      	ldr	r0, [sp, #24]
  4020aa:	9902      	ldr	r1, [sp, #8]
  4020ac:	aa13      	add	r2, sp, #76	; 0x4c
  4020ae:	f7ff fb55 	bl	40175c <__sprint_r.part.0>
  4020b2:	2800      	cmp	r0, #0
  4020b4:	d1dd      	bne.n	402072 <_vfiprintf_r+0x89e>
  4020b6:	2000      	movs	r0, #0
  4020b8:	9014      	str	r0, [sp, #80]	; 0x50
  4020ba:	464e      	mov	r6, r9
  4020bc:	f7ff bbbd 	b.w	40183a <_vfiprintf_r+0x66>
  4020c0:	4650      	mov	r0, sl
  4020c2:	4659      	mov	r1, fp
  4020c4:	aa13      	add	r2, sp, #76	; 0x4c
  4020c6:	f7ff fb49 	bl	40175c <__sprint_r.part.0>
  4020ca:	2800      	cmp	r0, #0
  4020cc:	d1d1      	bne.n	402072 <_vfiprintf_r+0x89e>
  4020ce:	9914      	ldr	r1, [sp, #80]	; 0x50
  4020d0:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4020d2:	1c48      	adds	r0, r1, #1
  4020d4:	464e      	mov	r6, r9
  4020d6:	e768      	b.n	401faa <_vfiprintf_r+0x7d6>
  4020d8:	2a00      	cmp	r2, #0
  4020da:	f040 80fa 	bne.w	4022d2 <_vfiprintf_r+0xafe>
  4020de:	9c05      	ldr	r4, [sp, #20]
  4020e0:	9720      	str	r7, [sp, #128]	; 0x80
  4020e2:	2301      	movs	r3, #1
  4020e4:	9421      	str	r4, [sp, #132]	; 0x84
  4020e6:	9415      	str	r4, [sp, #84]	; 0x54
  4020e8:	4622      	mov	r2, r4
  4020ea:	9314      	str	r3, [sp, #80]	; 0x50
  4020ec:	464e      	mov	r6, r9
  4020ee:	3608      	adds	r6, #8
  4020f0:	e741      	b.n	401f76 <_vfiprintf_r+0x7a2>
  4020f2:	9d04      	ldr	r5, [sp, #16]
  4020f4:	f8dd b00c 	ldr.w	fp, [sp, #12]
  4020f8:	ebcb 0405 	rsb	r4, fp, r5
  4020fc:	2c00      	cmp	r4, #0
  4020fe:	f77f aef7 	ble.w	401ef0 <_vfiprintf_r+0x71c>
  402102:	2c10      	cmp	r4, #16
  402104:	4da8      	ldr	r5, [pc, #672]	; (4023a8 <_vfiprintf_r+0xbd4>)
  402106:	f340 8174 	ble.w	4023f2 <_vfiprintf_r+0xc1e>
  40210a:	4629      	mov	r1, r5
  40210c:	f04f 0b10 	mov.w	fp, #16
  402110:	4625      	mov	r5, r4
  402112:	4664      	mov	r4, ip
  402114:	46b4      	mov	ip, r6
  402116:	460e      	mov	r6, r1
  402118:	e006      	b.n	402128 <_vfiprintf_r+0x954>
  40211a:	1c98      	adds	r0, r3, #2
  40211c:	f10c 0c08 	add.w	ip, ip, #8
  402120:	460b      	mov	r3, r1
  402122:	3d10      	subs	r5, #16
  402124:	2d10      	cmp	r5, #16
  402126:	dd0f      	ble.n	402148 <_vfiprintf_r+0x974>
  402128:	1c59      	adds	r1, r3, #1
  40212a:	3210      	adds	r2, #16
  40212c:	2907      	cmp	r1, #7
  40212e:	9215      	str	r2, [sp, #84]	; 0x54
  402130:	e88c 0840 	stmia.w	ip, {r6, fp}
  402134:	9114      	str	r1, [sp, #80]	; 0x50
  402136:	ddf0      	ble.n	40211a <_vfiprintf_r+0x946>
  402138:	b9ba      	cbnz	r2, 40216a <_vfiprintf_r+0x996>
  40213a:	3d10      	subs	r5, #16
  40213c:	2d10      	cmp	r5, #16
  40213e:	f04f 0001 	mov.w	r0, #1
  402142:	4613      	mov	r3, r2
  402144:	46cc      	mov	ip, r9
  402146:	dcef      	bgt.n	402128 <_vfiprintf_r+0x954>
  402148:	4633      	mov	r3, r6
  40214a:	4666      	mov	r6, ip
  40214c:	46a4      	mov	ip, r4
  40214e:	462c      	mov	r4, r5
  402150:	461d      	mov	r5, r3
  402152:	4422      	add	r2, r4
  402154:	2807      	cmp	r0, #7
  402156:	9215      	str	r2, [sp, #84]	; 0x54
  402158:	6035      	str	r5, [r6, #0]
  40215a:	6074      	str	r4, [r6, #4]
  40215c:	9014      	str	r0, [sp, #80]	; 0x50
  40215e:	f300 80b2 	bgt.w	4022c6 <_vfiprintf_r+0xaf2>
  402162:	3608      	adds	r6, #8
  402164:	1c41      	adds	r1, r0, #1
  402166:	4603      	mov	r3, r0
  402168:	e6c2      	b.n	401ef0 <_vfiprintf_r+0x71c>
  40216a:	9806      	ldr	r0, [sp, #24]
  40216c:	9902      	ldr	r1, [sp, #8]
  40216e:	aa13      	add	r2, sp, #76	; 0x4c
  402170:	f7ff faf4 	bl	40175c <__sprint_r.part.0>
  402174:	2800      	cmp	r0, #0
  402176:	f47f af7c 	bne.w	402072 <_vfiprintf_r+0x89e>
  40217a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40217c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40217e:	1c58      	adds	r0, r3, #1
  402180:	46cc      	mov	ip, r9
  402182:	e7ce      	b.n	402122 <_vfiprintf_r+0x94e>
  402184:	2a00      	cmp	r2, #0
  402186:	d17c      	bne.n	402282 <_vfiprintf_r+0xaae>
  402188:	4619      	mov	r1, r3
  40218a:	464e      	mov	r6, r9
  40218c:	4613      	mov	r3, r2
  40218e:	e69c      	b.n	401eca <_vfiprintf_r+0x6f6>
  402190:	2a00      	cmp	r2, #0
  402192:	f040 8087 	bne.w	4022a4 <_vfiprintf_r+0xad0>
  402196:	2101      	movs	r1, #1
  402198:	4613      	mov	r3, r2
  40219a:	464e      	mov	r6, r9
  40219c:	e6a4      	b.n	401ee8 <_vfiprintf_r+0x714>
  40219e:	464f      	mov	r7, r9
  4021a0:	e44c      	b.n	401a3c <_vfiprintf_r+0x268>
  4021a2:	2d00      	cmp	r5, #0
  4021a4:	bf08      	it	eq
  4021a6:	2c0a      	cmpeq	r4, #10
  4021a8:	d249      	bcs.n	40223e <_vfiprintf_r+0xa6a>
  4021aa:	af30      	add	r7, sp, #192	; 0xc0
  4021ac:	3430      	adds	r4, #48	; 0x30
  4021ae:	f807 4d41 	strb.w	r4, [r7, #-65]!
  4021b2:	ebc7 0309 	rsb	r3, r7, r9
  4021b6:	9305      	str	r3, [sp, #20]
  4021b8:	e440      	b.n	401a3c <_vfiprintf_r+0x268>
  4021ba:	2302      	movs	r3, #2
  4021bc:	e41b      	b.n	4019f6 <_vfiprintf_r+0x222>
  4021be:	2a00      	cmp	r2, #0
  4021c0:	f040 80b2 	bne.w	402328 <_vfiprintf_r+0xb54>
  4021c4:	4613      	mov	r3, r2
  4021c6:	2101      	movs	r1, #1
  4021c8:	464e      	mov	r6, r9
  4021ca:	e66d      	b.n	401ea8 <_vfiprintf_r+0x6d4>
  4021cc:	4644      	mov	r4, r8
  4021ce:	f7ff bb5c 	b.w	40188a <_vfiprintf_r+0xb6>
  4021d2:	9806      	ldr	r0, [sp, #24]
  4021d4:	9902      	ldr	r1, [sp, #8]
  4021d6:	aa13      	add	r2, sp, #76	; 0x4c
  4021d8:	f7ff fac0 	bl	40175c <__sprint_r.part.0>
  4021dc:	2800      	cmp	r0, #0
  4021de:	f47f af48 	bne.w	402072 <_vfiprintf_r+0x89e>
  4021e2:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4021e4:	464e      	mov	r6, r9
  4021e6:	e6c6      	b.n	401f76 <_vfiprintf_r+0x7a2>
  4021e8:	9d08      	ldr	r5, [sp, #32]
  4021ea:	682c      	ldr	r4, [r5, #0]
  4021ec:	3504      	adds	r5, #4
  4021ee:	9508      	str	r5, [sp, #32]
  4021f0:	2500      	movs	r5, #0
  4021f2:	e400      	b.n	4019f6 <_vfiprintf_r+0x222>
  4021f4:	9d08      	ldr	r5, [sp, #32]
  4021f6:	682c      	ldr	r4, [r5, #0]
  4021f8:	3504      	adds	r5, #4
  4021fa:	9508      	str	r5, [sp, #32]
  4021fc:	2301      	movs	r3, #1
  4021fe:	2500      	movs	r5, #0
  402200:	f7ff bbf9 	b.w	4019f6 <_vfiprintf_r+0x222>
  402204:	9d08      	ldr	r5, [sp, #32]
  402206:	682c      	ldr	r4, [r5, #0]
  402208:	3504      	adds	r5, #4
  40220a:	9508      	str	r5, [sp, #32]
  40220c:	2500      	movs	r5, #0
  40220e:	e528      	b.n	401c62 <_vfiprintf_r+0x48e>
  402210:	9d08      	ldr	r5, [sp, #32]
  402212:	f8dd b020 	ldr.w	fp, [sp, #32]
  402216:	682c      	ldr	r4, [r5, #0]
  402218:	f10b 0b04 	add.w	fp, fp, #4
  40221c:	17e5      	asrs	r5, r4, #31
  40221e:	f8cd b020 	str.w	fp, [sp, #32]
  402222:	4622      	mov	r2, r4
  402224:	462b      	mov	r3, r5
  402226:	e48f      	b.n	401b48 <_vfiprintf_r+0x374>
  402228:	9806      	ldr	r0, [sp, #24]
  40222a:	9902      	ldr	r1, [sp, #8]
  40222c:	aa13      	add	r2, sp, #76	; 0x4c
  40222e:	f7ff fa95 	bl	40175c <__sprint_r.part.0>
  402232:	2800      	cmp	r0, #0
  402234:	f47f af1d 	bne.w	402072 <_vfiprintf_r+0x89e>
  402238:	464e      	mov	r6, r9
  40223a:	f7ff bb9b 	b.w	401974 <_vfiprintf_r+0x1a0>
  40223e:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
  402242:	9603      	str	r6, [sp, #12]
  402244:	465e      	mov	r6, fp
  402246:	46e3      	mov	fp, ip
  402248:	4620      	mov	r0, r4
  40224a:	4629      	mov	r1, r5
  40224c:	220a      	movs	r2, #10
  40224e:	2300      	movs	r3, #0
  402250:	f003 f892 	bl	405378 <__aeabi_uldivmod>
  402254:	3230      	adds	r2, #48	; 0x30
  402256:	7032      	strb	r2, [r6, #0]
  402258:	4620      	mov	r0, r4
  40225a:	4629      	mov	r1, r5
  40225c:	220a      	movs	r2, #10
  40225e:	2300      	movs	r3, #0
  402260:	f003 f88a 	bl	405378 <__aeabi_uldivmod>
  402264:	4604      	mov	r4, r0
  402266:	460d      	mov	r5, r1
  402268:	ea54 0005 	orrs.w	r0, r4, r5
  40226c:	4637      	mov	r7, r6
  40226e:	f106 36ff 	add.w	r6, r6, #4294967295
  402272:	d1e9      	bne.n	402248 <_vfiprintf_r+0xa74>
  402274:	ebc7 0309 	rsb	r3, r7, r9
  402278:	46dc      	mov	ip, fp
  40227a:	9e03      	ldr	r6, [sp, #12]
  40227c:	9305      	str	r3, [sp, #20]
  40227e:	f7ff bbdd 	b.w	401a3c <_vfiprintf_r+0x268>
  402282:	9806      	ldr	r0, [sp, #24]
  402284:	9902      	ldr	r1, [sp, #8]
  402286:	f8cd c004 	str.w	ip, [sp, #4]
  40228a:	aa13      	add	r2, sp, #76	; 0x4c
  40228c:	f7ff fa66 	bl	40175c <__sprint_r.part.0>
  402290:	f8dd c004 	ldr.w	ip, [sp, #4]
  402294:	2800      	cmp	r0, #0
  402296:	f47f aeec 	bne.w	402072 <_vfiprintf_r+0x89e>
  40229a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40229c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40229e:	1c59      	adds	r1, r3, #1
  4022a0:	464e      	mov	r6, r9
  4022a2:	e612      	b.n	401eca <_vfiprintf_r+0x6f6>
  4022a4:	9806      	ldr	r0, [sp, #24]
  4022a6:	9902      	ldr	r1, [sp, #8]
  4022a8:	f8cd c004 	str.w	ip, [sp, #4]
  4022ac:	aa13      	add	r2, sp, #76	; 0x4c
  4022ae:	f7ff fa55 	bl	40175c <__sprint_r.part.0>
  4022b2:	f8dd c004 	ldr.w	ip, [sp, #4]
  4022b6:	2800      	cmp	r0, #0
  4022b8:	f47f aedb 	bne.w	402072 <_vfiprintf_r+0x89e>
  4022bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4022be:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4022c0:	1c59      	adds	r1, r3, #1
  4022c2:	464e      	mov	r6, r9
  4022c4:	e610      	b.n	401ee8 <_vfiprintf_r+0x714>
  4022c6:	2a00      	cmp	r2, #0
  4022c8:	d156      	bne.n	402378 <_vfiprintf_r+0xba4>
  4022ca:	2101      	movs	r1, #1
  4022cc:	4613      	mov	r3, r2
  4022ce:	464e      	mov	r6, r9
  4022d0:	e60e      	b.n	401ef0 <_vfiprintf_r+0x71c>
  4022d2:	9806      	ldr	r0, [sp, #24]
  4022d4:	9902      	ldr	r1, [sp, #8]
  4022d6:	aa13      	add	r2, sp, #76	; 0x4c
  4022d8:	f7ff fa40 	bl	40175c <__sprint_r.part.0>
  4022dc:	2800      	cmp	r0, #0
  4022de:	f47f aec8 	bne.w	402072 <_vfiprintf_r+0x89e>
  4022e2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4022e4:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4022e6:	3101      	adds	r1, #1
  4022e8:	464e      	mov	r6, r9
  4022ea:	e636      	b.n	401f5a <_vfiprintf_r+0x786>
  4022ec:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
  4022f0:	4264      	negs	r4, r4
  4022f2:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4022f6:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  4022fa:	f8cd b01c 	str.w	fp, [sp, #28]
  4022fe:	f8cd c014 	str.w	ip, [sp, #20]
  402302:	2301      	movs	r3, #1
  402304:	f7ff bb7f 	b.w	401a06 <_vfiprintf_r+0x232>
  402308:	f01a 0f10 	tst.w	sl, #16
  40230c:	d11d      	bne.n	40234a <_vfiprintf_r+0xb76>
  40230e:	f01a 0f40 	tst.w	sl, #64	; 0x40
  402312:	d059      	beq.n	4023c8 <_vfiprintf_r+0xbf4>
  402314:	9d08      	ldr	r5, [sp, #32]
  402316:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  40231a:	682b      	ldr	r3, [r5, #0]
  40231c:	3504      	adds	r5, #4
  40231e:	9508      	str	r5, [sp, #32]
  402320:	f8a3 b000 	strh.w	fp, [r3]
  402324:	f7ff ba89 	b.w	40183a <_vfiprintf_r+0x66>
  402328:	9806      	ldr	r0, [sp, #24]
  40232a:	9902      	ldr	r1, [sp, #8]
  40232c:	f8cd c004 	str.w	ip, [sp, #4]
  402330:	aa13      	add	r2, sp, #76	; 0x4c
  402332:	f7ff fa13 	bl	40175c <__sprint_r.part.0>
  402336:	f8dd c004 	ldr.w	ip, [sp, #4]
  40233a:	2800      	cmp	r0, #0
  40233c:	f47f ae99 	bne.w	402072 <_vfiprintf_r+0x89e>
  402340:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402342:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402344:	1c59      	adds	r1, r3, #1
  402346:	464e      	mov	r6, r9
  402348:	e5ae      	b.n	401ea8 <_vfiprintf_r+0x6d4>
  40234a:	f8dd b020 	ldr.w	fp, [sp, #32]
  40234e:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402350:	f8db 3000 	ldr.w	r3, [fp]
  402354:	f10b 0b04 	add.w	fp, fp, #4
  402358:	f8cd b020 	str.w	fp, [sp, #32]
  40235c:	601c      	str	r4, [r3, #0]
  40235e:	f7ff ba6c 	b.w	40183a <_vfiprintf_r+0x66>
  402362:	9408      	str	r4, [sp, #32]
  402364:	f7ff f9ca 	bl	4016fc <strlen>
  402368:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
  40236c:	9005      	str	r0, [sp, #20]
  40236e:	9407      	str	r4, [sp, #28]
  402370:	f04f 0c00 	mov.w	ip, #0
  402374:	f7ff bb62 	b.w	401a3c <_vfiprintf_r+0x268>
  402378:	9806      	ldr	r0, [sp, #24]
  40237a:	9902      	ldr	r1, [sp, #8]
  40237c:	f8cd c004 	str.w	ip, [sp, #4]
  402380:	aa13      	add	r2, sp, #76	; 0x4c
  402382:	f7ff f9eb 	bl	40175c <__sprint_r.part.0>
  402386:	f8dd c004 	ldr.w	ip, [sp, #4]
  40238a:	2800      	cmp	r0, #0
  40238c:	f47f ae71 	bne.w	402072 <_vfiprintf_r+0x89e>
  402390:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402392:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402394:	1c59      	adds	r1, r3, #1
  402396:	464e      	mov	r6, r9
  402398:	e5aa      	b.n	401ef0 <_vfiprintf_r+0x71c>
  40239a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40239c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40239e:	4d03      	ldr	r5, [pc, #12]	; (4023ac <_vfiprintf_r+0xbd8>)
  4023a0:	3301      	adds	r3, #1
  4023a2:	f7ff bb9b 	b.w	401adc <_vfiprintf_r+0x308>
  4023a6:	bf00      	nop
  4023a8:	004054f0 	.word	0x004054f0
  4023ac:	00405500 	.word	0x00405500
  4023b0:	f1bc 0f06 	cmp.w	ip, #6
  4023b4:	bf34      	ite	cc
  4023b6:	4663      	movcc	r3, ip
  4023b8:	2306      	movcs	r3, #6
  4023ba:	9408      	str	r4, [sp, #32]
  4023bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
  4023c0:	9305      	str	r3, [sp, #20]
  4023c2:	9403      	str	r4, [sp, #12]
  4023c4:	4f16      	ldr	r7, [pc, #88]	; (402420 <_vfiprintf_r+0xc4c>)
  4023c6:	e470      	b.n	401caa <_vfiprintf_r+0x4d6>
  4023c8:	9c08      	ldr	r4, [sp, #32]
  4023ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4023cc:	6823      	ldr	r3, [r4, #0]
  4023ce:	3404      	adds	r4, #4
  4023d0:	9408      	str	r4, [sp, #32]
  4023d2:	601d      	str	r5, [r3, #0]
  4023d4:	f7ff ba31 	b.w	40183a <_vfiprintf_r+0x66>
  4023d8:	9814      	ldr	r0, [sp, #80]	; 0x50
  4023da:	4d12      	ldr	r5, [pc, #72]	; (402424 <_vfiprintf_r+0xc50>)
  4023dc:	3001      	adds	r0, #1
  4023de:	e5f8      	b.n	401fd2 <_vfiprintf_r+0x7fe>
  4023e0:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  4023e4:	f8cd c014 	str.w	ip, [sp, #20]
  4023e8:	9507      	str	r5, [sp, #28]
  4023ea:	9408      	str	r4, [sp, #32]
  4023ec:	4684      	mov	ip, r0
  4023ee:	f7ff bb25 	b.w	401a3c <_vfiprintf_r+0x268>
  4023f2:	4608      	mov	r0, r1
  4023f4:	e6ad      	b.n	402152 <_vfiprintf_r+0x97e>
  4023f6:	46a0      	mov	r8, r4
  4023f8:	2500      	movs	r5, #0
  4023fa:	f7ff ba5a 	b.w	4018b2 <_vfiprintf_r+0xde>
  4023fe:	f8dd b020 	ldr.w	fp, [sp, #32]
  402402:	f898 3001 	ldrb.w	r3, [r8, #1]
  402406:	f8db 5000 	ldr.w	r5, [fp]
  40240a:	f10b 0204 	add.w	r2, fp, #4
  40240e:	2d00      	cmp	r5, #0
  402410:	9208      	str	r2, [sp, #32]
  402412:	46a0      	mov	r8, r4
  402414:	f6bf aa4b 	bge.w	4018ae <_vfiprintf_r+0xda>
  402418:	f04f 35ff 	mov.w	r5, #4294967295
  40241c:	f7ff ba47 	b.w	4018ae <_vfiprintf_r+0xda>
  402420:	004054e8 	.word	0x004054e8
  402424:	00405500 	.word	0x00405500

00402428 <__sbprintf>:
  402428:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40242c:	460c      	mov	r4, r1
  40242e:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  402432:	f8b1 900c 	ldrh.w	r9, [r1, #12]
  402436:	69e7      	ldr	r7, [r4, #28]
  402438:	6e49      	ldr	r1, [r1, #100]	; 0x64
  40243a:	f8b4 800e 	ldrh.w	r8, [r4, #14]
  40243e:	9119      	str	r1, [sp, #100]	; 0x64
  402440:	ad1a      	add	r5, sp, #104	; 0x68
  402442:	f44f 6680 	mov.w	r6, #1024	; 0x400
  402446:	f04f 0e00 	mov.w	lr, #0
  40244a:	9707      	str	r7, [sp, #28]
  40244c:	f029 0902 	bic.w	r9, r9, #2
  402450:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402452:	9500      	str	r5, [sp, #0]
  402454:	4669      	mov	r1, sp
  402456:	9504      	str	r5, [sp, #16]
  402458:	9602      	str	r6, [sp, #8]
  40245a:	9605      	str	r6, [sp, #20]
  40245c:	f8ad 900c 	strh.w	r9, [sp, #12]
  402460:	f8ad 800e 	strh.w	r8, [sp, #14]
  402464:	9709      	str	r7, [sp, #36]	; 0x24
  402466:	f8cd e018 	str.w	lr, [sp, #24]
  40246a:	4606      	mov	r6, r0
  40246c:	f7ff f9b2 	bl	4017d4 <_vfiprintf_r>
  402470:	1e05      	subs	r5, r0, #0
  402472:	db07      	blt.n	402484 <__sbprintf+0x5c>
  402474:	4630      	mov	r0, r6
  402476:	4669      	mov	r1, sp
  402478:	f000 fdfa 	bl	403070 <_fflush_r>
  40247c:	2800      	cmp	r0, #0
  40247e:	bf18      	it	ne
  402480:	f04f 35ff 	movne.w	r5, #4294967295
  402484:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402488:	065b      	lsls	r3, r3, #25
  40248a:	d503      	bpl.n	402494 <__sbprintf+0x6c>
  40248c:	89a3      	ldrh	r3, [r4, #12]
  40248e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402492:	81a3      	strh	r3, [r4, #12]
  402494:	4628      	mov	r0, r5
  402496:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  40249a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40249e:	bf00      	nop

004024a0 <__svfiscanf_r>:
  4024a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4024a4:	460c      	mov	r4, r1
  4024a6:	8989      	ldrh	r1, [r1, #12]
  4024a8:	b0dd      	sub	sp, #372	; 0x174
  4024aa:	048f      	lsls	r7, r1, #18
  4024ac:	4683      	mov	fp, r0
  4024ae:	9307      	str	r3, [sp, #28]
  4024b0:	d406      	bmi.n	4024c0 <__svfiscanf_r+0x20>
  4024b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4024b4:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
  4024b8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4024bc:	81a1      	strh	r1, [r4, #12]
  4024be:	6663      	str	r3, [r4, #100]	; 0x64
  4024c0:	4690      	mov	r8, r2
  4024c2:	2600      	movs	r6, #0
  4024c4:	f818 3b01 	ldrb.w	r3, [r8], #1
  4024c8:	9606      	str	r6, [sp, #24]
  4024ca:	9609      	str	r6, [sp, #36]	; 0x24
  4024cc:	4635      	mov	r5, r6
  4024ce:	960a      	str	r6, [sp, #40]	; 0x28
  4024d0:	4f8f      	ldr	r7, [pc, #572]	; (402710 <__svfiscanf_r+0x270>)
  4024d2:	930f      	str	r3, [sp, #60]	; 0x3c
  4024d4:	b32b      	cbz	r3, 402522 <__svfiscanf_r+0x82>
  4024d6:	6839      	ldr	r1, [r7, #0]
  4024d8:	18c8      	adds	r0, r1, r3
  4024da:	7840      	ldrb	r0, [r0, #1]
  4024dc:	f000 0008 	and.w	r0, r0, #8
  4024e0:	f000 09ff 	and.w	r9, r0, #255	; 0xff
  4024e4:	b308      	cbz	r0, 40252a <__svfiscanf_r+0x8a>
  4024e6:	6863      	ldr	r3, [r4, #4]
  4024e8:	e00c      	b.n	402504 <__svfiscanf_r+0x64>
  4024ea:	6823      	ldr	r3, [r4, #0]
  4024ec:	683a      	ldr	r2, [r7, #0]
  4024ee:	7819      	ldrb	r1, [r3, #0]
  4024f0:	440a      	add	r2, r1
  4024f2:	3301      	adds	r3, #1
  4024f4:	7852      	ldrb	r2, [r2, #1]
  4024f6:	0716      	lsls	r6, r2, #28
  4024f8:	d50c      	bpl.n	402514 <__svfiscanf_r+0x74>
  4024fa:	6862      	ldr	r2, [r4, #4]
  4024fc:	6023      	str	r3, [r4, #0]
  4024fe:	1e53      	subs	r3, r2, #1
  402500:	3501      	adds	r5, #1
  402502:	6063      	str	r3, [r4, #4]
  402504:	2b00      	cmp	r3, #0
  402506:	dcf0      	bgt.n	4024ea <__svfiscanf_r+0x4a>
  402508:	4658      	mov	r0, fp
  40250a:	4621      	mov	r1, r4
  40250c:	f002 f92e 	bl	40476c <__srefill_r>
  402510:	2800      	cmp	r0, #0
  402512:	d0ea      	beq.n	4024ea <__svfiscanf_r+0x4a>
  402514:	4642      	mov	r2, r8
  402516:	4690      	mov	r8, r2
  402518:	f818 3b01 	ldrb.w	r3, [r8], #1
  40251c:	930f      	str	r3, [sp, #60]	; 0x3c
  40251e:	2b00      	cmp	r3, #0
  402520:	d1d9      	bne.n	4024d6 <__svfiscanf_r+0x36>
  402522:	980a      	ldr	r0, [sp, #40]	; 0x28
  402524:	b05d      	add	sp, #372	; 0x174
  402526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40252a:	2b25      	cmp	r3, #37	; 0x25
  40252c:	f040 8089 	bne.w	402642 <__svfiscanf_r+0x1a2>
  402530:	7853      	ldrb	r3, [r2, #1]
  402532:	464e      	mov	r6, r9
  402534:	f108 0201 	add.w	r2, r8, #1
  402538:	2b78      	cmp	r3, #120	; 0x78
  40253a:	f200 81a5 	bhi.w	402888 <__svfiscanf_r+0x3e8>
  40253e:	e8df f013 	tbh	[pc, r3, lsl #1]
  402542:	0079      	.short	0x0079
  402544:	01a301a3 	.word	0x01a301a3
  402548:	01a301a3 	.word	0x01a301a3
  40254c:	01a301a3 	.word	0x01a301a3
  402550:	01a301a3 	.word	0x01a301a3
  402554:	01a301a3 	.word	0x01a301a3
  402558:	01a301a3 	.word	0x01a301a3
  40255c:	01a301a3 	.word	0x01a301a3
  402560:	01a301a3 	.word	0x01a301a3
  402564:	01a301a3 	.word	0x01a301a3
  402568:	01a301a3 	.word	0x01a301a3
  40256c:	01a301a3 	.word	0x01a301a3
  402570:	01a301a3 	.word	0x01a301a3
  402574:	01a301a3 	.word	0x01a301a3
  402578:	01a301a3 	.word	0x01a301a3
  40257c:	01a301a3 	.word	0x01a301a3
  402580:	01a301a3 	.word	0x01a301a3
  402584:	01a301a3 	.word	0x01a301a3
  402588:	01a301a3 	.word	0x01a301a3
  40258c:	01a3007e 	.word	0x01a3007e
  402590:	01a301a3 	.word	0x01a301a3
  402594:	017901a3 	.word	0x017901a3
  402598:	01a301a3 	.word	0x01a301a3
  40259c:	01a301a3 	.word	0x01a301a3
  4025a0:	016f01a3 	.word	0x016f01a3
  4025a4:	016f016f 	.word	0x016f016f
  4025a8:	016f016f 	.word	0x016f016f
  4025ac:	016f016f 	.word	0x016f016f
  4025b0:	016f016f 	.word	0x016f016f
  4025b4:	01a3016f 	.word	0x01a3016f
  4025b8:	01a301a3 	.word	0x01a301a3
  4025bc:	01a301a3 	.word	0x01a301a3
  4025c0:	01a301a3 	.word	0x01a301a3
  4025c4:	01a301a3 	.word	0x01a301a3
  4025c8:	016b01a3 	.word	0x016b01a3
  4025cc:	01a301a3 	.word	0x01a301a3
  4025d0:	01a301a3 	.word	0x01a301a3
  4025d4:	01a301a3 	.word	0x01a301a3
  4025d8:	016501a3 	.word	0x016501a3
  4025dc:	01a301a3 	.word	0x01a301a3
  4025e0:	01a30161 	.word	0x01a30161
  4025e4:	01a301a3 	.word	0x01a301a3
  4025e8:	01a301a3 	.word	0x01a301a3
  4025ec:	01a301a3 	.word	0x01a301a3
  4025f0:	015701a3 	.word	0x015701a3
  4025f4:	01a301a3 	.word	0x01a301a3
  4025f8:	01a3014c 	.word	0x01a3014c
  4025fc:	01a301a3 	.word	0x01a301a3
  402600:	01a301a3 	.word	0x01a301a3
  402604:	01a301a3 	.word	0x01a301a3
  402608:	013e0146 	.word	0x013e0146
  40260c:	01a301a3 	.word	0x01a301a3
  402610:	013801a3 	.word	0x013801a3
  402614:	01a30130 	.word	0x01a30130
  402618:	012701a3 	.word	0x012701a3
  40261c:	010d01a3 	.word	0x010d01a3
  402620:	011d0105 	.word	0x011d0105
  402624:	01a301a3 	.word	0x01a301a3
  402628:	01a300eb 	.word	0x01a300eb
  40262c:	01a30093 	.word	0x01a30093
  402630:	015701a3 	.word	0x015701a3
  402634:	f04f 30ff 	mov.w	r0, #4294967295
  402638:	b05d      	add	sp, #372	; 0x174
  40263a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40263e:	9205      	str	r2, [sp, #20]
  402640:	4690      	mov	r8, r2
  402642:	6863      	ldr	r3, [r4, #4]
  402644:	2b00      	cmp	r3, #0
  402646:	f340 8343 	ble.w	402cd0 <__svfiscanf_r+0x830>
  40264a:	6823      	ldr	r3, [r4, #0]
  40264c:	f818 2c01 	ldrb.w	r2, [r8, #-1]
  402650:	7819      	ldrb	r1, [r3, #0]
  402652:	4291      	cmp	r1, r2
  402654:	f47f af65 	bne.w	402522 <__svfiscanf_r+0x82>
  402658:	6862      	ldr	r2, [r4, #4]
  40265a:	3301      	adds	r3, #1
  40265c:	3a01      	subs	r2, #1
  40265e:	6062      	str	r2, [r4, #4]
  402660:	6023      	str	r3, [r4, #0]
  402662:	3501      	adds	r5, #1
  402664:	4642      	mov	r2, r8
  402666:	e756      	b.n	402516 <__svfiscanf_r+0x76>
  402668:	9205      	str	r2, [sp, #20]
  40266a:	492a      	ldr	r1, [pc, #168]	; (402714 <__svfiscanf_r+0x274>)
  40266c:	9106      	str	r1, [sp, #24]
  40266e:	220a      	movs	r2, #10
  402670:	9209      	str	r2, [sp, #36]	; 0x24
  402672:	f04f 0803 	mov.w	r8, #3
  402676:	6863      	ldr	r3, [r4, #4]
  402678:	2b00      	cmp	r3, #0
  40267a:	dd53      	ble.n	402724 <__svfiscanf_r+0x284>
  40267c:	f019 0f40 	tst.w	r9, #64	; 0x40
  402680:	d034      	beq.n	4026ec <__svfiscanf_r+0x24c>
  402682:	f1b8 0f02 	cmp.w	r8, #2
  402686:	f000 81f0 	beq.w	402a6a <__svfiscanf_r+0x5ca>
  40268a:	f1b8 0f03 	cmp.w	r8, #3
  40268e:	f000 813a 	beq.w	402906 <__svfiscanf_r+0x466>
  402692:	f1b8 0f01 	cmp.w	r8, #1
  402696:	f000 8106 	beq.w	4028a6 <__svfiscanf_r+0x406>
  40269a:	2e00      	cmp	r6, #0
  40269c:	bf08      	it	eq
  40269e:	2601      	moveq	r6, #1
  4026a0:	f019 0801 	ands.w	r8, r9, #1
  4026a4:	f040 8265 	bne.w	402b72 <__svfiscanf_r+0x6d2>
  4026a8:	f019 0f10 	tst.w	r9, #16
  4026ac:	d109      	bne.n	4026c2 <__svfiscanf_r+0x222>
  4026ae:	e2f7      	b.n	402ca0 <__svfiscanf_r+0x800>
  4026b0:	441a      	add	r2, r3
  4026b2:	6022      	str	r2, [r4, #0]
  4026b4:	4498      	add	r8, r3
  4026b6:	1af6      	subs	r6, r6, r3
  4026b8:	f002 f858 	bl	40476c <__srefill_r>
  4026bc:	2800      	cmp	r0, #0
  4026be:	f040 82e8 	bne.w	402c92 <__svfiscanf_r+0x7f2>
  4026c2:	6863      	ldr	r3, [r4, #4]
  4026c4:	6822      	ldr	r2, [r4, #0]
  4026c6:	42b3      	cmp	r3, r6
  4026c8:	4658      	mov	r0, fp
  4026ca:	4621      	mov	r1, r4
  4026cc:	dbf0      	blt.n	4026b0 <__svfiscanf_r+0x210>
  4026ce:	1b9b      	subs	r3, r3, r6
  4026d0:	4432      	add	r2, r6
  4026d2:	6063      	str	r3, [r4, #4]
  4026d4:	44b0      	add	r8, r6
  4026d6:	6022      	str	r2, [r4, #0]
  4026d8:	4445      	add	r5, r8
  4026da:	f8dd 8014 	ldr.w	r8, [sp, #20]
  4026de:	4642      	mov	r2, r8
  4026e0:	e719      	b.n	402516 <__svfiscanf_r+0x76>
  4026e2:	4658      	mov	r0, fp
  4026e4:	4621      	mov	r1, r4
  4026e6:	f002 f841 	bl	40476c <__srefill_r>
  4026ea:	bb08      	cbnz	r0, 402730 <__svfiscanf_r+0x290>
  4026ec:	6839      	ldr	r1, [r7, #0]
  4026ee:	6823      	ldr	r3, [r4, #0]
  4026f0:	e000      	b.n	4026f4 <__svfiscanf_r+0x254>
  4026f2:	6023      	str	r3, [r4, #0]
  4026f4:	781a      	ldrb	r2, [r3, #0]
  4026f6:	440a      	add	r2, r1
  4026f8:	3301      	adds	r3, #1
  4026fa:	7852      	ldrb	r2, [r2, #1]
  4026fc:	0710      	lsls	r0, r2, #28
  4026fe:	d5c0      	bpl.n	402682 <__svfiscanf_r+0x1e2>
  402700:	6862      	ldr	r2, [r4, #4]
  402702:	3a01      	subs	r2, #1
  402704:	2a00      	cmp	r2, #0
  402706:	f105 0501 	add.w	r5, r5, #1
  40270a:	6062      	str	r2, [r4, #4]
  40270c:	dcf1      	bgt.n	4026f2 <__svfiscanf_r+0x252>
  40270e:	e7e8      	b.n	4026e2 <__svfiscanf_r+0x242>
  402710:	20000434 	.word	0x20000434
  402714:	00404c49 	.word	0x00404c49
  402718:	6863      	ldr	r3, [r4, #4]
  40271a:	9205      	str	r2, [sp, #20]
  40271c:	2b00      	cmp	r3, #0
  40271e:	f04f 0802 	mov.w	r8, #2
  402722:	dcab      	bgt.n	40267c <__svfiscanf_r+0x1dc>
  402724:	4658      	mov	r0, fp
  402726:	4621      	mov	r1, r4
  402728:	f002 f820 	bl	40476c <__srefill_r>
  40272c:	2800      	cmp	r0, #0
  40272e:	d0a5      	beq.n	40267c <__svfiscanf_r+0x1dc>
  402730:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  402732:	2e00      	cmp	r6, #0
  402734:	f43f af7e 	beq.w	402634 <__svfiscanf_r+0x194>
  402738:	89a3      	ldrh	r3, [r4, #12]
  40273a:	4630      	mov	r0, r6
  40273c:	f013 0f40 	tst.w	r3, #64	; 0x40
  402740:	bf18      	it	ne
  402742:	f04f 30ff 	movne.w	r0, #4294967295
  402746:	b05d      	add	sp, #372	; 0x174
  402748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40274c:	9205      	str	r2, [sp, #20]
  40274e:	4b8f      	ldr	r3, [pc, #572]	; (40298c <__svfiscanf_r+0x4ec>)
  402750:	9306      	str	r3, [sp, #24]
  402752:	2008      	movs	r0, #8
  402754:	9009      	str	r0, [sp, #36]	; 0x24
  402756:	f04f 0803 	mov.w	r8, #3
  40275a:	e78c      	b.n	402676 <__svfiscanf_r+0x1d6>
  40275c:	f019 0f10 	tst.w	r9, #16
  402760:	9205      	str	r2, [sp, #20]
  402762:	f040 808d 	bne.w	402880 <__svfiscanf_r+0x3e0>
  402766:	f019 0f04 	tst.w	r9, #4
  40276a:	f000 82cc 	beq.w	402d06 <__svfiscanf_r+0x866>
  40276e:	9e07      	ldr	r6, [sp, #28]
  402770:	6833      	ldr	r3, [r6, #0]
  402772:	3604      	adds	r6, #4
  402774:	4690      	mov	r8, r2
  402776:	801d      	strh	r5, [r3, #0]
  402778:	9607      	str	r6, [sp, #28]
  40277a:	e6cb      	b.n	402514 <__svfiscanf_r+0x74>
  40277c:	9205      	str	r2, [sp, #20]
  40277e:	4983      	ldr	r1, [pc, #524]	; (40298c <__svfiscanf_r+0x4ec>)
  402780:	9106      	str	r1, [sp, #24]
  402782:	2210      	movs	r2, #16
  402784:	f449 7908 	orr.w	r9, r9, #544	; 0x220
  402788:	9209      	str	r2, [sp, #36]	; 0x24
  40278a:	f04f 0803 	mov.w	r8, #3
  40278e:	e772      	b.n	402676 <__svfiscanf_r+0x1d6>
  402790:	f898 3001 	ldrb.w	r3, [r8, #1]
  402794:	2b6c      	cmp	r3, #108	; 0x6c
  402796:	f000 82af 	beq.w	402cf8 <__svfiscanf_r+0x858>
  40279a:	f049 0901 	orr.w	r9, r9, #1
  40279e:	4690      	mov	r8, r2
  4027a0:	e6c8      	b.n	402534 <__svfiscanf_r+0x94>
  4027a2:	9205      	str	r2, [sp, #20]
  4027a4:	2300      	movs	r3, #0
  4027a6:	4a7a      	ldr	r2, [pc, #488]	; (402990 <__svfiscanf_r+0x4f0>)
  4027a8:	9206      	str	r2, [sp, #24]
  4027aa:	9309      	str	r3, [sp, #36]	; 0x24
  4027ac:	f04f 0803 	mov.w	r8, #3
  4027b0:	e761      	b.n	402676 <__svfiscanf_r+0x1d6>
  4027b2:	f898 3001 	ldrb.w	r3, [r8, #1]
  4027b6:	f049 0904 	orr.w	r9, r9, #4
  4027ba:	4690      	mov	r8, r2
  4027bc:	e6ba      	b.n	402534 <__svfiscanf_r+0x94>
  4027be:	9205      	str	r2, [sp, #20]
  4027c0:	4973      	ldr	r1, [pc, #460]	; (402990 <__svfiscanf_r+0x4f0>)
  4027c2:	9106      	str	r1, [sp, #24]
  4027c4:	220a      	movs	r2, #10
  4027c6:	9209      	str	r2, [sp, #36]	; 0x24
  4027c8:	f04f 0803 	mov.w	r8, #3
  4027cc:	e753      	b.n	402676 <__svfiscanf_r+0x1d6>
  4027ce:	9205      	str	r2, [sp, #20]
  4027d0:	f049 0940 	orr.w	r9, r9, #64	; 0x40
  4027d4:	f04f 0800 	mov.w	r8, #0
  4027d8:	e74d      	b.n	402676 <__svfiscanf_r+0x1d6>
  4027da:	4611      	mov	r1, r2
  4027dc:	a81c      	add	r0, sp, #112	; 0x70
  4027de:	9205      	str	r2, [sp, #20]
  4027e0:	f002 f860 	bl	4048a4 <__sccl>
  4027e4:	f049 0940 	orr.w	r9, r9, #64	; 0x40
  4027e8:	9005      	str	r0, [sp, #20]
  4027ea:	f04f 0801 	mov.w	r8, #1
  4027ee:	e742      	b.n	402676 <__svfiscanf_r+0x1d6>
  4027f0:	4b66      	ldr	r3, [pc, #408]	; (40298c <__svfiscanf_r+0x4ec>)
  4027f2:	9205      	str	r2, [sp, #20]
  4027f4:	2010      	movs	r0, #16
  4027f6:	f449 7900 	orr.w	r9, r9, #512	; 0x200
  4027fa:	9306      	str	r3, [sp, #24]
  4027fc:	9009      	str	r0, [sp, #36]	; 0x24
  4027fe:	f04f 0803 	mov.w	r8, #3
  402802:	e738      	b.n	402676 <__svfiscanf_r+0x1d6>
  402804:	9205      	str	r2, [sp, #20]
  402806:	f049 0901 	orr.w	r9, r9, #1
  40280a:	e7a0      	b.n	40274e <__svfiscanf_r+0x2ae>
  40280c:	f898 3001 	ldrb.w	r3, [r8, #1]
  402810:	f049 0902 	orr.w	r9, r9, #2
  402814:	4690      	mov	r8, r2
  402816:	e68d      	b.n	402534 <__svfiscanf_r+0x94>
  402818:	9205      	str	r2, [sp, #20]
  40281a:	f049 0901 	orr.w	r9, r9, #1
  40281e:	e7cf      	b.n	4027c0 <__svfiscanf_r+0x320>
  402820:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  402824:	eb03 0346 	add.w	r3, r3, r6, lsl #1
  402828:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
  40282c:	f898 3001 	ldrb.w	r3, [r8, #1]
  402830:	4690      	mov	r8, r2
  402832:	e67f      	b.n	402534 <__svfiscanf_r+0x94>
  402834:	f898 3001 	ldrb.w	r3, [r8, #1]
  402838:	f049 0910 	orr.w	r9, r9, #16
  40283c:	4690      	mov	r8, r2
  40283e:	e679      	b.n	402534 <__svfiscanf_r+0x94>
  402840:	a810      	add	r0, sp, #64	; 0x40
  402842:	2100      	movs	r1, #0
  402844:	2208      	movs	r2, #8
  402846:	900b      	str	r0, [sp, #44]	; 0x2c
  402848:	f7fe fdca 	bl	4013e0 <memset>
  40284c:	f019 0a10 	ands.w	sl, r9, #16
  402850:	f000 8209 	beq.w	402c66 <__svfiscanf_r+0x7c6>
  402854:	f10d 093c 	add.w	r9, sp, #60	; 0x3c
  402858:	2200      	movs	r2, #0
  40285a:	4690      	mov	r8, r2
  40285c:	6822      	ldr	r2, [r4, #0]
  40285e:	683b      	ldr	r3, [r7, #0]
  402860:	7812      	ldrb	r2, [r2, #0]
  402862:	4413      	add	r3, r2
  402864:	785b      	ldrb	r3, [r3, #1]
  402866:	071b      	lsls	r3, r3, #28
  402868:	d402      	bmi.n	402870 <__svfiscanf_r+0x3d0>
  40286a:	2e00      	cmp	r6, #0
  40286c:	f040 827e 	bne.w	402d6c <__svfiscanf_r+0x8cc>
  402870:	f1ba 0f00 	cmp.w	sl, #0
  402874:	d104      	bne.n	402880 <__svfiscanf_r+0x3e0>
  402876:	f8c9 a000 	str.w	sl, [r9]
  40287a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  40287c:	3601      	adds	r6, #1
  40287e:	960a      	str	r6, [sp, #40]	; 0x28
  402880:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402884:	4642      	mov	r2, r8
  402886:	e646      	b.n	402516 <__svfiscanf_r+0x76>
  402888:	440b      	add	r3, r1
  40288a:	9205      	str	r2, [sp, #20]
  40288c:	785b      	ldrb	r3, [r3, #1]
  40288e:	f003 0303 	and.w	r3, r3, #3
  402892:	2b01      	cmp	r3, #1
  402894:	f000 822d 	beq.w	402cf2 <__svfiscanf_r+0x852>
  402898:	483d      	ldr	r0, [pc, #244]	; (402990 <__svfiscanf_r+0x4f0>)
  40289a:	9006      	str	r0, [sp, #24]
  40289c:	210a      	movs	r1, #10
  40289e:	9109      	str	r1, [sp, #36]	; 0x24
  4028a0:	f04f 0803 	mov.w	r8, #3
  4028a4:	e6e7      	b.n	402676 <__svfiscanf_r+0x1d6>
  4028a6:	2e00      	cmp	r6, #0
  4028a8:	bf08      	it	eq
  4028aa:	f04f 36ff 	moveq.w	r6, #4294967295
  4028ae:	f019 0f10 	tst.w	r9, #16
  4028b2:	f000 8130 	beq.w	402b16 <__svfiscanf_r+0x676>
  4028b6:	6823      	ldr	r3, [r4, #0]
  4028b8:	f04f 0800 	mov.w	r8, #0
  4028bc:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4028c0:	781a      	ldrb	r2, [r3, #0]
  4028c2:	f819 2002 	ldrb.w	r2, [r9, r2]
  4028c6:	3301      	adds	r3, #1
  4028c8:	b1c2      	cbz	r2, 4028fc <__svfiscanf_r+0x45c>
  4028ca:	6862      	ldr	r2, [r4, #4]
  4028cc:	6023      	str	r3, [r4, #0]
  4028ce:	f108 0801 	add.w	r8, r8, #1
  4028d2:	3a01      	subs	r2, #1
  4028d4:	4546      	cmp	r6, r8
  4028d6:	6062      	str	r2, [r4, #4]
  4028d8:	f43f aefe 	beq.w	4026d8 <__svfiscanf_r+0x238>
  4028dc:	2a00      	cmp	r2, #0
  4028de:	dcef      	bgt.n	4028c0 <__svfiscanf_r+0x420>
  4028e0:	4658      	mov	r0, fp
  4028e2:	4621      	mov	r1, r4
  4028e4:	f001 ff42 	bl	40476c <__srefill_r>
  4028e8:	2800      	cmp	r0, #0
  4028ea:	f47f aef5 	bne.w	4026d8 <__svfiscanf_r+0x238>
  4028ee:	6823      	ldr	r3, [r4, #0]
  4028f0:	781a      	ldrb	r2, [r3, #0]
  4028f2:	f819 2002 	ldrb.w	r2, [r9, r2]
  4028f6:	3301      	adds	r3, #1
  4028f8:	2a00      	cmp	r2, #0
  4028fa:	d1e6      	bne.n	4028ca <__svfiscanf_r+0x42a>
  4028fc:	f1b8 0f00 	cmp.w	r8, #0
  402900:	f47f aeea 	bne.w	4026d8 <__svfiscanf_r+0x238>
  402904:	e60d      	b.n	402522 <__svfiscanf_r+0x82>
  402906:	1e73      	subs	r3, r6, #1
  402908:	2b26      	cmp	r3, #38	; 0x26
  40290a:	bf8c      	ite	hi
  40290c:	f1a6 0327 	subhi.w	r3, r6, #39	; 0x27
  402910:	2300      	movls	r3, #0
  402912:	f10d 0a48 	add.w	sl, sp, #72	; 0x48
  402916:	f04f 0000 	mov.w	r0, #0
  40291a:	46ac      	mov	ip, r5
  40291c:	bf88      	it	hi
  40291e:	2627      	movhi	r6, #39	; 0x27
  402920:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402922:	9008      	str	r0, [sp, #32]
  402924:	f449 6958 	orr.w	r9, r9, #3456	; 0xd80
  402928:	46d0      	mov	r8, sl
  40292a:	9309      	str	r3, [sp, #36]	; 0x24
  40292c:	6820      	ldr	r0, [r4, #0]
  40292e:	7801      	ldrb	r1, [r0, #0]
  402930:	f1a1 022b 	sub.w	r2, r1, #43	; 0x2b
  402934:	2a4d      	cmp	r2, #77	; 0x4d
  402936:	d844      	bhi.n	4029c2 <__svfiscanf_r+0x522>
  402938:	e8df f002 	tbb	[pc, r2]
  40293c:	43914391 	.word	0x43914391
  402940:	60606643 	.word	0x60606643
  402944:	60606060 	.word	0x60606060
  402948:	438b8b60 	.word	0x438b8b60
  40294c:	43434343 	.word	0x43434343
  402950:	5b5b4343 	.word	0x5b5b4343
  402954:	5b5b5b5b 	.word	0x5b5b5b5b
  402958:	43434343 	.word	0x43434343
  40295c:	43434343 	.word	0x43434343
  402960:	43434343 	.word	0x43434343
  402964:	43434343 	.word	0x43434343
  402968:	43432c43 	.word	0x43432c43
  40296c:	43434343 	.word	0x43434343
  402970:	5b5b4343 	.word	0x5b5b4343
  402974:	5b5b5b5b 	.word	0x5b5b5b5b
  402978:	43434343 	.word	0x43434343
  40297c:	43434343 	.word	0x43434343
  402980:	43434343 	.word	0x43434343
  402984:	43434343 	.word	0x43434343
  402988:	2c43      	.short	0x2c43
  40298a:	bf00      	nop
  40298c:	00404c49 	.word	0x00404c49
  402990:	00404999 	.word	0x00404999
  402994:	f409 62c0 	and.w	r2, r9, #1536	; 0x600
  402998:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40299c:	d111      	bne.n	4029c2 <__svfiscanf_r+0x522>
  40299e:	f429 7900 	bic.w	r9, r9, #512	; 0x200
  4029a2:	f449 69a0 	orr.w	r9, r9, #1280	; 0x500
  4029a6:	2510      	movs	r5, #16
  4029a8:	6862      	ldr	r2, [r4, #4]
  4029aa:	f888 1000 	strb.w	r1, [r8]
  4029ae:	3a01      	subs	r2, #1
  4029b0:	2a00      	cmp	r2, #0
  4029b2:	f108 0801 	add.w	r8, r8, #1
  4029b6:	6062      	str	r2, [r4, #4]
  4029b8:	dd40      	ble.n	402a3c <__svfiscanf_r+0x59c>
  4029ba:	3001      	adds	r0, #1
  4029bc:	6020      	str	r0, [r4, #0]
  4029be:	3e01      	subs	r6, #1
  4029c0:	d1b4      	bne.n	40292c <__svfiscanf_r+0x48c>
  4029c2:	f419 7f80 	tst.w	r9, #256	; 0x100
  4029c6:	9509      	str	r5, [sp, #36]	; 0x24
  4029c8:	4665      	mov	r5, ip
  4029ca:	d005      	beq.n	4029d8 <__svfiscanf_r+0x538>
  4029cc:	45d0      	cmp	r8, sl
  4029ce:	f200 8187 	bhi.w	402ce0 <__svfiscanf_r+0x840>
  4029d2:	45d0      	cmp	r8, sl
  4029d4:	f43f ada5 	beq.w	402522 <__svfiscanf_r+0x82>
  4029d8:	f019 0610 	ands.w	r6, r9, #16
  4029dc:	f000 8115 	beq.w	402c0a <__svfiscanf_r+0x76a>
  4029e0:	9e08      	ldr	r6, [sp, #32]
  4029e2:	ebca 0308 	rsb	r3, sl, r8
  4029e6:	f8dd 8014 	ldr.w	r8, [sp, #20]
  4029ea:	4433      	add	r3, r6
  4029ec:	441d      	add	r5, r3
  4029ee:	4642      	mov	r2, r8
  4029f0:	e591      	b.n	402516 <__svfiscanf_r+0x76>
  4029f2:	2d0a      	cmp	r5, #10
  4029f4:	dde5      	ble.n	4029c2 <__svfiscanf_r+0x522>
  4029f6:	f429 6938 	bic.w	r9, r9, #2944	; 0xb80
  4029fa:	e7d5      	b.n	4029a8 <__svfiscanf_r+0x508>
  4029fc:	4aa7      	ldr	r2, [pc, #668]	; (402c9c <__svfiscanf_r+0x7fc>)
  4029fe:	f429 6938 	bic.w	r9, r9, #2944	; 0xb80
  402a02:	f932 5015 	ldrsh.w	r5, [r2, r5, lsl #1]
  402a06:	e7cf      	b.n	4029a8 <__svfiscanf_r+0x508>
  402a08:	f419 6f00 	tst.w	r9, #2048	; 0x800
  402a0c:	d0cc      	beq.n	4029a8 <__svfiscanf_r+0x508>
  402a0e:	b915      	cbnz	r5, 402a16 <__svfiscanf_r+0x576>
  402a10:	f449 7900 	orr.w	r9, r9, #512	; 0x200
  402a14:	2508      	movs	r5, #8
  402a16:	f419 6f80 	tst.w	r9, #1024	; 0x400
  402a1a:	f040 810a 	bne.w	402c32 <__svfiscanf_r+0x792>
  402a1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402a20:	f429 7960 	bic.w	r9, r9, #896	; 0x380
  402a24:	b112      	cbz	r2, 402a2c <__svfiscanf_r+0x58c>
  402a26:	3a01      	subs	r2, #1
  402a28:	9209      	str	r2, [sp, #36]	; 0x24
  402a2a:	3601      	adds	r6, #1
  402a2c:	6862      	ldr	r2, [r4, #4]
  402a2e:	9b08      	ldr	r3, [sp, #32]
  402a30:	3a01      	subs	r2, #1
  402a32:	3301      	adds	r3, #1
  402a34:	2a00      	cmp	r2, #0
  402a36:	9308      	str	r3, [sp, #32]
  402a38:	6062      	str	r2, [r4, #4]
  402a3a:	dcbe      	bgt.n	4029ba <__svfiscanf_r+0x51a>
  402a3c:	4658      	mov	r0, fp
  402a3e:	4621      	mov	r1, r4
  402a40:	f8cd c010 	str.w	ip, [sp, #16]
  402a44:	f001 fe92 	bl	40476c <__srefill_r>
  402a48:	f8dd c010 	ldr.w	ip, [sp, #16]
  402a4c:	2800      	cmp	r0, #0
  402a4e:	d0b6      	beq.n	4029be <__svfiscanf_r+0x51e>
  402a50:	e7b7      	b.n	4029c2 <__svfiscanf_r+0x522>
  402a52:	4b92      	ldr	r3, [pc, #584]	; (402c9c <__svfiscanf_r+0x7fc>)
  402a54:	f933 5015 	ldrsh.w	r5, [r3, r5, lsl #1]
  402a58:	2d08      	cmp	r5, #8
  402a5a:	dccc      	bgt.n	4029f6 <__svfiscanf_r+0x556>
  402a5c:	e7b1      	b.n	4029c2 <__svfiscanf_r+0x522>
  402a5e:	f019 0f80 	tst.w	r9, #128	; 0x80
  402a62:	d0ae      	beq.n	4029c2 <__svfiscanf_r+0x522>
  402a64:	f029 0980 	bic.w	r9, r9, #128	; 0x80
  402a68:	e79e      	b.n	4029a8 <__svfiscanf_r+0x508>
  402a6a:	2e00      	cmp	r6, #0
  402a6c:	bf08      	it	eq
  402a6e:	f04f 36ff 	moveq.w	r6, #4294967295
  402a72:	f019 0801 	ands.w	r8, r9, #1
  402a76:	f47f aee3 	bne.w	402840 <__svfiscanf_r+0x3a0>
  402a7a:	f019 0f10 	tst.w	r9, #16
  402a7e:	d135      	bne.n	402aec <__svfiscanf_r+0x64c>
  402a80:	9807      	ldr	r0, [sp, #28]
  402a82:	f8d0 8000 	ldr.w	r8, [r0]
  402a86:	f100 0904 	add.w	r9, r0, #4
  402a8a:	46c2      	mov	sl, r8
  402a8c:	6823      	ldr	r3, [r4, #0]
  402a8e:	683a      	ldr	r2, [r7, #0]
  402a90:	7819      	ldrb	r1, [r3, #0]
  402a92:	440a      	add	r2, r1
  402a94:	1c59      	adds	r1, r3, #1
  402a96:	7852      	ldrb	r2, [r2, #1]
  402a98:	0712      	lsls	r2, r2, #28
  402a9a:	d411      	bmi.n	402ac0 <__svfiscanf_r+0x620>
  402a9c:	6862      	ldr	r2, [r4, #4]
  402a9e:	6021      	str	r1, [r4, #0]
  402aa0:	3a01      	subs	r2, #1
  402aa2:	6062      	str	r2, [r4, #4]
  402aa4:	781b      	ldrb	r3, [r3, #0]
  402aa6:	f80a 3b01 	strb.w	r3, [sl], #1
  402aaa:	3e01      	subs	r6, #1
  402aac:	d008      	beq.n	402ac0 <__svfiscanf_r+0x620>
  402aae:	6863      	ldr	r3, [r4, #4]
  402ab0:	2b00      	cmp	r3, #0
  402ab2:	dceb      	bgt.n	402a8c <__svfiscanf_r+0x5ec>
  402ab4:	4658      	mov	r0, fp
  402ab6:	4621      	mov	r1, r4
  402ab8:	f001 fe58 	bl	40476c <__srefill_r>
  402abc:	2800      	cmp	r0, #0
  402abe:	d0e5      	beq.n	402a8c <__svfiscanf_r+0x5ec>
  402ac0:	ebc8 080a 	rsb	r8, r8, sl
  402ac4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  402ac6:	f8cd 901c 	str.w	r9, [sp, #28]
  402aca:	4445      	add	r5, r8
  402acc:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402ad0:	2300      	movs	r3, #0
  402ad2:	3601      	adds	r6, #1
  402ad4:	960a      	str	r6, [sp, #40]	; 0x28
  402ad6:	f88a 3000 	strb.w	r3, [sl]
  402ada:	4642      	mov	r2, r8
  402adc:	e51b      	b.n	402516 <__svfiscanf_r+0x76>
  402ade:	4658      	mov	r0, fp
  402ae0:	4621      	mov	r1, r4
  402ae2:	f001 fe43 	bl	40476c <__srefill_r>
  402ae6:	2800      	cmp	r0, #0
  402ae8:	f47f adf6 	bne.w	4026d8 <__svfiscanf_r+0x238>
  402aec:	6839      	ldr	r1, [r7, #0]
  402aee:	6823      	ldr	r3, [r4, #0]
  402af0:	781a      	ldrb	r2, [r3, #0]
  402af2:	440a      	add	r2, r1
  402af4:	3301      	adds	r3, #1
  402af6:	7852      	ldrb	r2, [r2, #1]
  402af8:	0710      	lsls	r0, r2, #28
  402afa:	f53f aded 	bmi.w	4026d8 <__svfiscanf_r+0x238>
  402afe:	6862      	ldr	r2, [r4, #4]
  402b00:	6023      	str	r3, [r4, #0]
  402b02:	f108 0801 	add.w	r8, r8, #1
  402b06:	3a01      	subs	r2, #1
  402b08:	4546      	cmp	r6, r8
  402b0a:	6062      	str	r2, [r4, #4]
  402b0c:	f43f ade4 	beq.w	4026d8 <__svfiscanf_r+0x238>
  402b10:	2a00      	cmp	r2, #0
  402b12:	dced      	bgt.n	402af0 <__svfiscanf_r+0x650>
  402b14:	e7e3      	b.n	402ade <__svfiscanf_r+0x63e>
  402b16:	9807      	ldr	r0, [sp, #28]
  402b18:	f8d0 8000 	ldr.w	r8, [r0]
  402b1c:	1d02      	adds	r2, r0, #4
  402b1e:	9207      	str	r2, [sp, #28]
  402b20:	46c2      	mov	sl, r8
  402b22:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  402b26:	6823      	ldr	r3, [r4, #0]
  402b28:	781a      	ldrb	r2, [r3, #0]
  402b2a:	f819 2002 	ldrb.w	r2, [r9, r2]
  402b2e:	1c59      	adds	r1, r3, #1
  402b30:	b1a2      	cbz	r2, 402b5c <__svfiscanf_r+0x6bc>
  402b32:	6862      	ldr	r2, [r4, #4]
  402b34:	6021      	str	r1, [r4, #0]
  402b36:	3a01      	subs	r2, #1
  402b38:	6062      	str	r2, [r4, #4]
  402b3a:	781b      	ldrb	r3, [r3, #0]
  402b3c:	f80a 3b01 	strb.w	r3, [sl], #1
  402b40:	3e01      	subs	r6, #1
  402b42:	d00b      	beq.n	402b5c <__svfiscanf_r+0x6bc>
  402b44:	6863      	ldr	r3, [r4, #4]
  402b46:	2b00      	cmp	r3, #0
  402b48:	dced      	bgt.n	402b26 <__svfiscanf_r+0x686>
  402b4a:	4658      	mov	r0, fp
  402b4c:	4621      	mov	r1, r4
  402b4e:	f001 fe0d 	bl	40476c <__srefill_r>
  402b52:	2800      	cmp	r0, #0
  402b54:	d0e7      	beq.n	402b26 <__svfiscanf_r+0x686>
  402b56:	45d0      	cmp	r8, sl
  402b58:	f43f adea 	beq.w	402730 <__svfiscanf_r+0x290>
  402b5c:	ebba 0808 	subs.w	r8, sl, r8
  402b60:	f43f acdf 	beq.w	402522 <__svfiscanf_r+0x82>
  402b64:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  402b66:	2300      	movs	r3, #0
  402b68:	3601      	adds	r6, #1
  402b6a:	960a      	str	r6, [sp, #40]	; 0x28
  402b6c:	f88a 3000 	strb.w	r3, [sl]
  402b70:	e5b2      	b.n	4026d8 <__svfiscanf_r+0x238>
  402b72:	aa10      	add	r2, sp, #64	; 0x40
  402b74:	920b      	str	r2, [sp, #44]	; 0x2c
  402b76:	4610      	mov	r0, r2
  402b78:	2100      	movs	r1, #0
  402b7a:	2208      	movs	r2, #8
  402b7c:	f7fe fc30 	bl	4013e0 <memset>
  402b80:	f019 0310 	ands.w	r3, r9, #16
  402b84:	930d      	str	r3, [sp, #52]	; 0x34
  402b86:	d074      	beq.n	402c72 <__svfiscanf_r+0x7d2>
  402b88:	f04f 0900 	mov.w	r9, #0
  402b8c:	f04f 0a00 	mov.w	sl, #0
  402b90:	9508      	str	r5, [sp, #32]
  402b92:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  402b94:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
  402b98:	f10d 0848 	add.w	r8, sp, #72	; 0x48
  402b9c:	46d3      	mov	fp, sl
  402b9e:	f000 ff59 	bl	403a54 <__locale_mb_cur_max>
  402ba2:	4558      	cmp	r0, fp
  402ba4:	f43f adc4 	beq.w	402730 <__svfiscanf_r+0x290>
  402ba8:	6823      	ldr	r3, [r4, #0]
  402baa:	6861      	ldr	r1, [r4, #4]
  402bac:	f813 eb01 	ldrb.w	lr, [r3], #1
  402bb0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402bb2:	6023      	str	r3, [r4, #0]
  402bb4:	3901      	subs	r1, #1
  402bb6:	f10b 0a01 	add.w	sl, fp, #1
  402bba:	9000      	str	r0, [sp, #0]
  402bbc:	4653      	mov	r3, sl
  402bbe:	6061      	str	r1, [r4, #4]
  402bc0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bc2:	f808 e00b 	strb.w	lr, [r8, fp]
  402bc6:	4649      	mov	r1, r9
  402bc8:	4642      	mov	r2, r8
  402bca:	f001 fa55 	bl	404078 <_mbrtowc_r>
  402bce:	1c41      	adds	r1, r0, #1
  402bd0:	f43f adae 	beq.w	402730 <__svfiscanf_r+0x290>
  402bd4:	2800      	cmp	r0, #0
  402bd6:	d155      	bne.n	402c84 <__svfiscanf_r+0x7e4>
  402bd8:	b90d      	cbnz	r5, 402bde <__svfiscanf_r+0x73e>
  402bda:	f8c9 5000 	str.w	r5, [r9]
  402bde:	9908      	ldr	r1, [sp, #32]
  402be0:	4451      	add	r1, sl
  402be2:	9108      	str	r1, [sp, #32]
  402be4:	3e01      	subs	r6, #1
  402be6:	2d00      	cmp	r5, #0
  402be8:	d150      	bne.n	402c8c <__svfiscanf_r+0x7ec>
  402bea:	f109 0904 	add.w	r9, r9, #4
  402bee:	46ab      	mov	fp, r5
  402bf0:	6863      	ldr	r3, [r4, #4]
  402bf2:	2b00      	cmp	r3, #0
  402bf4:	dd29      	ble.n	402c4a <__svfiscanf_r+0x7aa>
  402bf6:	2e00      	cmp	r6, #0
  402bf8:	d1d1      	bne.n	402b9e <__svfiscanf_r+0x6fe>
  402bfa:	9d08      	ldr	r5, [sp, #32]
  402bfc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c00:	9e0d      	ldr	r6, [sp, #52]	; 0x34
  402c02:	2e00      	cmp	r6, #0
  402c04:	f43f ae39 	beq.w	40287a <__svfiscanf_r+0x3da>
  402c08:	e63a      	b.n	402880 <__svfiscanf_r+0x3e0>
  402c0a:	4632      	mov	r2, r6
  402c0c:	f888 6000 	strb.w	r6, [r8]
  402c10:	4658      	mov	r0, fp
  402c12:	4651      	mov	r1, sl
  402c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402c16:	9e06      	ldr	r6, [sp, #24]
  402c18:	47b0      	blx	r6
  402c1a:	f019 0f20 	tst.w	r9, #32
  402c1e:	d00b      	beq.n	402c38 <__svfiscanf_r+0x798>
  402c20:	9e07      	ldr	r6, [sp, #28]
  402c22:	6833      	ldr	r3, [r6, #0]
  402c24:	3604      	adds	r6, #4
  402c26:	9607      	str	r6, [sp, #28]
  402c28:	6018      	str	r0, [r3, #0]
  402c2a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  402c2c:	3601      	adds	r6, #1
  402c2e:	960a      	str	r6, [sp, #40]	; 0x28
  402c30:	e6d6      	b.n	4029e0 <__svfiscanf_r+0x540>
  402c32:	f429 69b0 	bic.w	r9, r9, #1408	; 0x580
  402c36:	e6b7      	b.n	4029a8 <__svfiscanf_r+0x508>
  402c38:	f019 0f04 	tst.w	r9, #4
  402c3c:	d07e      	beq.n	402d3c <__svfiscanf_r+0x89c>
  402c3e:	9e07      	ldr	r6, [sp, #28]
  402c40:	6833      	ldr	r3, [r6, #0]
  402c42:	3604      	adds	r6, #4
  402c44:	9607      	str	r6, [sp, #28]
  402c46:	8018      	strh	r0, [r3, #0]
  402c48:	e7ef      	b.n	402c2a <__svfiscanf_r+0x78a>
  402c4a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c4c:	4621      	mov	r1, r4
  402c4e:	f001 fd8d 	bl	40476c <__srefill_r>
  402c52:	2800      	cmp	r0, #0
  402c54:	d0cf      	beq.n	402bf6 <__svfiscanf_r+0x756>
  402c56:	46da      	mov	sl, fp
  402c58:	9d08      	ldr	r5, [sp, #32]
  402c5a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c5e:	f1ba 0f00 	cmp.w	sl, #0
  402c62:	d0cd      	beq.n	402c00 <__svfiscanf_r+0x760>
  402c64:	e564      	b.n	402730 <__svfiscanf_r+0x290>
  402c66:	9907      	ldr	r1, [sp, #28]
  402c68:	f8d1 9000 	ldr.w	r9, [r1]
  402c6c:	3104      	adds	r1, #4
  402c6e:	9107      	str	r1, [sp, #28]
  402c70:	e5f2      	b.n	402858 <__svfiscanf_r+0x3b8>
  402c72:	f8dd e01c 	ldr.w	lr, [sp, #28]
  402c76:	f8de 9000 	ldr.w	r9, [lr]
  402c7a:	f10e 0e04 	add.w	lr, lr, #4
  402c7e:	f8cd e01c 	str.w	lr, [sp, #28]
  402c82:	e783      	b.n	402b8c <__svfiscanf_r+0x6ec>
  402c84:	3002      	adds	r0, #2
  402c86:	d1aa      	bne.n	402bde <__svfiscanf_r+0x73e>
  402c88:	46d3      	mov	fp, sl
  402c8a:	e7b1      	b.n	402bf0 <__svfiscanf_r+0x750>
  402c8c:	f04f 0b00 	mov.w	fp, #0
  402c90:	e7ae      	b.n	402bf0 <__svfiscanf_r+0x750>
  402c92:	f1b8 0f00 	cmp.w	r8, #0
  402c96:	f47f ad1f 	bne.w	4026d8 <__svfiscanf_r+0x238>
  402c9a:	e549      	b.n	402730 <__svfiscanf_r+0x290>
  402c9c:	00405510 	.word	0x00405510
  402ca0:	f8dd e01c 	ldr.w	lr, [sp, #28]
  402ca4:	4633      	mov	r3, r6
  402ca6:	f8de 1000 	ldr.w	r1, [lr]
  402caa:	9400      	str	r4, [sp, #0]
  402cac:	4658      	mov	r0, fp
  402cae:	2201      	movs	r2, #1
  402cb0:	f000 fb00 	bl	4032b4 <_fread_r>
  402cb4:	9e07      	ldr	r6, [sp, #28]
  402cb6:	1d33      	adds	r3, r6, #4
  402cb8:	2800      	cmp	r0, #0
  402cba:	f43f ad39 	beq.w	402730 <__svfiscanf_r+0x290>
  402cbe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  402cc0:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402cc4:	9307      	str	r3, [sp, #28]
  402cc6:	3601      	adds	r6, #1
  402cc8:	4405      	add	r5, r0
  402cca:	960a      	str	r6, [sp, #40]	; 0x28
  402ccc:	4642      	mov	r2, r8
  402cce:	e422      	b.n	402516 <__svfiscanf_r+0x76>
  402cd0:	4658      	mov	r0, fp
  402cd2:	4621      	mov	r1, r4
  402cd4:	f001 fd4a 	bl	40476c <__srefill_r>
  402cd8:	2800      	cmp	r0, #0
  402cda:	f43f acb6 	beq.w	40264a <__svfiscanf_r+0x1aa>
  402cde:	e527      	b.n	402730 <__svfiscanf_r+0x290>
  402ce0:	f818 1c01 	ldrb.w	r1, [r8, #-1]
  402ce4:	4658      	mov	r0, fp
  402ce6:	4622      	mov	r2, r4
  402ce8:	f002 f942 	bl	404f70 <_ungetc_r>
  402cec:	f108 38ff 	add.w	r8, r8, #4294967295
  402cf0:	e66f      	b.n	4029d2 <__svfiscanf_r+0x532>
  402cf2:	f049 0901 	orr.w	r9, r9, #1
  402cf6:	e5cf      	b.n	402898 <__svfiscanf_r+0x3f8>
  402cf8:	f898 3002 	ldrb.w	r3, [r8, #2]
  402cfc:	f049 0902 	orr.w	r9, r9, #2
  402d00:	f108 0802 	add.w	r8, r8, #2
  402d04:	e416      	b.n	402534 <__svfiscanf_r+0x94>
  402d06:	f019 0f01 	tst.w	r9, #1
  402d0a:	d10e      	bne.n	402d2a <__svfiscanf_r+0x88a>
  402d0c:	f019 0f02 	tst.w	r9, #2
  402d10:	d00b      	beq.n	402d2a <__svfiscanf_r+0x88a>
  402d12:	9e07      	ldr	r6, [sp, #28]
  402d14:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402d18:	6831      	ldr	r1, [r6, #0]
  402d1a:	462a      	mov	r2, r5
  402d1c:	17eb      	asrs	r3, r5, #31
  402d1e:	3604      	adds	r6, #4
  402d20:	9607      	str	r6, [sp, #28]
  402d22:	e9c1 2300 	strd	r2, r3, [r1]
  402d26:	f7ff bbf5 	b.w	402514 <__svfiscanf_r+0x74>
  402d2a:	9e07      	ldr	r6, [sp, #28]
  402d2c:	f8dd 8014 	ldr.w	r8, [sp, #20]
  402d30:	6833      	ldr	r3, [r6, #0]
  402d32:	3604      	adds	r6, #4
  402d34:	601d      	str	r5, [r3, #0]
  402d36:	9607      	str	r6, [sp, #28]
  402d38:	f7ff bbec 	b.w	402514 <__svfiscanf_r+0x74>
  402d3c:	f019 0201 	ands.w	r2, r9, #1
  402d40:	f47f af6e 	bne.w	402c20 <__svfiscanf_r+0x780>
  402d44:	f019 0f02 	tst.w	r9, #2
  402d48:	f43f af6a 	beq.w	402c20 <__svfiscanf_r+0x780>
  402d4c:	4b39      	ldr	r3, [pc, #228]	; (402e34 <__svfiscanf_r+0x994>)
  402d4e:	9e06      	ldr	r6, [sp, #24]
  402d50:	429e      	cmp	r6, r3
  402d52:	4658      	mov	r0, fp
  402d54:	4651      	mov	r1, sl
  402d56:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402d58:	d065      	beq.n	402e26 <__svfiscanf_r+0x986>
  402d5a:	f001 fea7 	bl	404aac <_strtoll_r>
  402d5e:	9e07      	ldr	r6, [sp, #28]
  402d60:	6833      	ldr	r3, [r6, #0]
  402d62:	3604      	adds	r6, #4
  402d64:	9607      	str	r6, [sp, #28]
  402d66:	e9c3 0100 	strd	r0, r1, [r3]
  402d6a:	e75e      	b.n	402c2a <__svfiscanf_r+0x78a>
  402d6c:	f000 fe72 	bl	403a54 <__locale_mb_cur_max>
  402d70:	4540      	cmp	r0, r8
  402d72:	f43f acdd 	beq.w	402730 <__svfiscanf_r+0x290>
  402d76:	6823      	ldr	r3, [r4, #0]
  402d78:	6861      	ldr	r1, [r4, #4]
  402d7a:	f813 2b01 	ldrb.w	r2, [r3], #1
  402d7e:	6023      	str	r3, [r4, #0]
  402d80:	f10d 0e48 	add.w	lr, sp, #72	; 0x48
  402d84:	f108 0c01 	add.w	ip, r8, #1
  402d88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402d8a:	9300      	str	r3, [sp, #0]
  402d8c:	3901      	subs	r1, #1
  402d8e:	6061      	str	r1, [r4, #4]
  402d90:	f80e 2008 	strb.w	r2, [lr, r8]
  402d94:	4663      	mov	r3, ip
  402d96:	4672      	mov	r2, lr
  402d98:	4658      	mov	r0, fp
  402d9a:	4649      	mov	r1, r9
  402d9c:	f8cd c010 	str.w	ip, [sp, #16]
  402da0:	f001 f96a 	bl	404078 <_mbrtowc_r>
  402da4:	1c42      	adds	r2, r0, #1
  402da6:	f8dd c010 	ldr.w	ip, [sp, #16]
  402daa:	f43f acc1 	beq.w	402730 <__svfiscanf_r+0x290>
  402dae:	b198      	cbz	r0, 402dd8 <__svfiscanf_r+0x938>
  402db0:	3002      	adds	r0, #2
  402db2:	bf08      	it	eq
  402db4:	46e0      	moveq	r8, ip
  402db6:	d139      	bne.n	402e2c <__svfiscanf_r+0x98c>
  402db8:	6863      	ldr	r3, [r4, #4]
  402dba:	2b00      	cmp	r3, #0
  402dbc:	f73f ad4e 	bgt.w	40285c <__svfiscanf_r+0x3bc>
  402dc0:	4658      	mov	r0, fp
  402dc2:	4621      	mov	r1, r4
  402dc4:	f001 fcd2 	bl	40476c <__srefill_r>
  402dc8:	2800      	cmp	r0, #0
  402dca:	f43f ad47 	beq.w	40285c <__svfiscanf_r+0x3bc>
  402dce:	4642      	mov	r2, r8
  402dd0:	2a00      	cmp	r2, #0
  402dd2:	f47f acad 	bne.w	402730 <__svfiscanf_r+0x290>
  402dd6:	e54b      	b.n	402870 <__svfiscanf_r+0x3d0>
  402dd8:	f8c9 0000 	str.w	r0, [r9]
  402ddc:	f8cd c010 	str.w	ip, [sp, #16]
  402de0:	f000 fe26 	bl	403a30 <iswspace>
  402de4:	f8dd c010 	ldr.w	ip, [sp, #16]
  402de8:	b190      	cbz	r0, 402e10 <__svfiscanf_r+0x970>
  402dea:	46e0      	mov	r8, ip
  402dec:	f1bc 0f00 	cmp.w	ip, #0
  402df0:	f43f ad3e 	beq.w	402870 <__svfiscanf_r+0x3d0>
  402df4:	ae12      	add	r6, sp, #72	; 0x48
  402df6:	4466      	add	r6, ip
  402df8:	f108 38ff 	add.w	r8, r8, #4294967295
  402dfc:	4658      	mov	r0, fp
  402dfe:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
  402e02:	4622      	mov	r2, r4
  402e04:	f002 f8b4 	bl	404f70 <_ungetc_r>
  402e08:	f1b8 0f00 	cmp.w	r8, #0
  402e0c:	d1f4      	bne.n	402df8 <__svfiscanf_r+0x958>
  402e0e:	e52f      	b.n	402870 <__svfiscanf_r+0x3d0>
  402e10:	4465      	add	r5, ip
  402e12:	3e01      	subs	r6, #1
  402e14:	f1ba 0f00 	cmp.w	sl, #0
  402e18:	d103      	bne.n	402e22 <__svfiscanf_r+0x982>
  402e1a:	f109 0904 	add.w	r9, r9, #4
  402e1e:	46d0      	mov	r8, sl
  402e20:	e7ca      	b.n	402db8 <__svfiscanf_r+0x918>
  402e22:	4680      	mov	r8, r0
  402e24:	e7c8      	b.n	402db8 <__svfiscanf_r+0x918>
  402e26:	f001 ff9f 	bl	404d68 <_strtoull_r>
  402e2a:	e798      	b.n	402d5e <__svfiscanf_r+0x8be>
  402e2c:	f8d9 0000 	ldr.w	r0, [r9]
  402e30:	e7d4      	b.n	402ddc <__svfiscanf_r+0x93c>
  402e32:	bf00      	nop
  402e34:	00404c49 	.word	0x00404c49

00402e38 <__swsetup_r>:
  402e38:	4b2f      	ldr	r3, [pc, #188]	; (402ef8 <__swsetup_r+0xc0>)
  402e3a:	681b      	ldr	r3, [r3, #0]
  402e3c:	b570      	push	{r4, r5, r6, lr}
  402e3e:	4606      	mov	r6, r0
  402e40:	460c      	mov	r4, r1
  402e42:	b113      	cbz	r3, 402e4a <__swsetup_r+0x12>
  402e44:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402e46:	2a00      	cmp	r2, #0
  402e48:	d036      	beq.n	402eb8 <__swsetup_r+0x80>
  402e4a:	89a5      	ldrh	r5, [r4, #12]
  402e4c:	b2ab      	uxth	r3, r5
  402e4e:	0719      	lsls	r1, r3, #28
  402e50:	d50c      	bpl.n	402e6c <__swsetup_r+0x34>
  402e52:	6922      	ldr	r2, [r4, #16]
  402e54:	b1aa      	cbz	r2, 402e82 <__swsetup_r+0x4a>
  402e56:	f013 0101 	ands.w	r1, r3, #1
  402e5a:	d01e      	beq.n	402e9a <__swsetup_r+0x62>
  402e5c:	6963      	ldr	r3, [r4, #20]
  402e5e:	2100      	movs	r1, #0
  402e60:	425b      	negs	r3, r3
  402e62:	61a3      	str	r3, [r4, #24]
  402e64:	60a1      	str	r1, [r4, #8]
  402e66:	b1f2      	cbz	r2, 402ea6 <__swsetup_r+0x6e>
  402e68:	2000      	movs	r0, #0
  402e6a:	bd70      	pop	{r4, r5, r6, pc}
  402e6c:	06da      	lsls	r2, r3, #27
  402e6e:	d53b      	bpl.n	402ee8 <__swsetup_r+0xb0>
  402e70:	075b      	lsls	r3, r3, #29
  402e72:	d425      	bmi.n	402ec0 <__swsetup_r+0x88>
  402e74:	6922      	ldr	r2, [r4, #16]
  402e76:	f045 0308 	orr.w	r3, r5, #8
  402e7a:	81a3      	strh	r3, [r4, #12]
  402e7c:	b29b      	uxth	r3, r3
  402e7e:	2a00      	cmp	r2, #0
  402e80:	d1e9      	bne.n	402e56 <__swsetup_r+0x1e>
  402e82:	f403 7120 	and.w	r1, r3, #640	; 0x280
  402e86:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  402e8a:	d0e4      	beq.n	402e56 <__swsetup_r+0x1e>
  402e8c:	4630      	mov	r0, r6
  402e8e:	4621      	mov	r1, r4
  402e90:	f000 fde6 	bl	403a60 <__smakebuf_r>
  402e94:	89a3      	ldrh	r3, [r4, #12]
  402e96:	6922      	ldr	r2, [r4, #16]
  402e98:	e7dd      	b.n	402e56 <__swsetup_r+0x1e>
  402e9a:	0798      	lsls	r0, r3, #30
  402e9c:	bf58      	it	pl
  402e9e:	6961      	ldrpl	r1, [r4, #20]
  402ea0:	60a1      	str	r1, [r4, #8]
  402ea2:	2a00      	cmp	r2, #0
  402ea4:	d1e0      	bne.n	402e68 <__swsetup_r+0x30>
  402ea6:	89a3      	ldrh	r3, [r4, #12]
  402ea8:	061a      	lsls	r2, r3, #24
  402eaa:	d5dd      	bpl.n	402e68 <__swsetup_r+0x30>
  402eac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402eb0:	81a3      	strh	r3, [r4, #12]
  402eb2:	f04f 30ff 	mov.w	r0, #4294967295
  402eb6:	bd70      	pop	{r4, r5, r6, pc}
  402eb8:	4618      	mov	r0, r3
  402eba:	f000 f907 	bl	4030cc <__sinit>
  402ebe:	e7c4      	b.n	402e4a <__swsetup_r+0x12>
  402ec0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402ec2:	b149      	cbz	r1, 402ed8 <__swsetup_r+0xa0>
  402ec4:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402ec8:	4299      	cmp	r1, r3
  402eca:	d003      	beq.n	402ed4 <__swsetup_r+0x9c>
  402ecc:	4630      	mov	r0, r6
  402ece:	f000 fb07 	bl	4034e0 <_free_r>
  402ed2:	89a5      	ldrh	r5, [r4, #12]
  402ed4:	2300      	movs	r3, #0
  402ed6:	6323      	str	r3, [r4, #48]	; 0x30
  402ed8:	f025 0524 	bic.w	r5, r5, #36	; 0x24
  402edc:	2300      	movs	r3, #0
  402ede:	6922      	ldr	r2, [r4, #16]
  402ee0:	6063      	str	r3, [r4, #4]
  402ee2:	b2ad      	uxth	r5, r5
  402ee4:	6022      	str	r2, [r4, #0]
  402ee6:	e7c6      	b.n	402e76 <__swsetup_r+0x3e>
  402ee8:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  402eec:	2309      	movs	r3, #9
  402eee:	6033      	str	r3, [r6, #0]
  402ef0:	f04f 30ff 	mov.w	r0, #4294967295
  402ef4:	81a5      	strh	r5, [r4, #12]
  402ef6:	bd70      	pop	{r4, r5, r6, pc}
  402ef8:	20000430 	.word	0x20000430

00402efc <register_fini>:
  402efc:	4b02      	ldr	r3, [pc, #8]	; (402f08 <register_fini+0xc>)
  402efe:	b113      	cbz	r3, 402f06 <register_fini+0xa>
  402f00:	4802      	ldr	r0, [pc, #8]	; (402f0c <register_fini+0x10>)
  402f02:	f000 b805 	b.w	402f10 <atexit>
  402f06:	4770      	bx	lr
  402f08:	00000000 	.word	0x00000000
  402f0c:	004031c9 	.word	0x004031c9

00402f10 <atexit>:
  402f10:	4601      	mov	r1, r0
  402f12:	2000      	movs	r0, #0
  402f14:	4602      	mov	r2, r0
  402f16:	4603      	mov	r3, r0
  402f18:	f002 b932 	b.w	405180 <__register_exitproc>

00402f1c <__sflush_r>:
  402f1c:	898b      	ldrh	r3, [r1, #12]
  402f1e:	b29a      	uxth	r2, r3
  402f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402f24:	460d      	mov	r5, r1
  402f26:	0711      	lsls	r1, r2, #28
  402f28:	4680      	mov	r8, r0
  402f2a:	d43c      	bmi.n	402fa6 <__sflush_r+0x8a>
  402f2c:	686a      	ldr	r2, [r5, #4]
  402f2e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402f32:	2a00      	cmp	r2, #0
  402f34:	81ab      	strh	r3, [r5, #12]
  402f36:	dd59      	ble.n	402fec <__sflush_r+0xd0>
  402f38:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402f3a:	2c00      	cmp	r4, #0
  402f3c:	d04b      	beq.n	402fd6 <__sflush_r+0xba>
  402f3e:	b29b      	uxth	r3, r3
  402f40:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  402f44:	2100      	movs	r1, #0
  402f46:	b292      	uxth	r2, r2
  402f48:	f8d8 6000 	ldr.w	r6, [r8]
  402f4c:	f8c8 1000 	str.w	r1, [r8]
  402f50:	2a00      	cmp	r2, #0
  402f52:	d04f      	beq.n	402ff4 <__sflush_r+0xd8>
  402f54:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402f56:	075f      	lsls	r7, r3, #29
  402f58:	d505      	bpl.n	402f66 <__sflush_r+0x4a>
  402f5a:	6869      	ldr	r1, [r5, #4]
  402f5c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402f5e:	1a52      	subs	r2, r2, r1
  402f60:	b10b      	cbz	r3, 402f66 <__sflush_r+0x4a>
  402f62:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402f64:	1ad2      	subs	r2, r2, r3
  402f66:	4640      	mov	r0, r8
  402f68:	69e9      	ldr	r1, [r5, #28]
  402f6a:	2300      	movs	r3, #0
  402f6c:	47a0      	blx	r4
  402f6e:	1c44      	adds	r4, r0, #1
  402f70:	d04a      	beq.n	403008 <__sflush_r+0xec>
  402f72:	89aa      	ldrh	r2, [r5, #12]
  402f74:	692b      	ldr	r3, [r5, #16]
  402f76:	602b      	str	r3, [r5, #0]
  402f78:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  402f7c:	b29b      	uxth	r3, r3
  402f7e:	2200      	movs	r2, #0
  402f80:	606a      	str	r2, [r5, #4]
  402f82:	04da      	lsls	r2, r3, #19
  402f84:	81ab      	strh	r3, [r5, #12]
  402f86:	d44c      	bmi.n	403022 <__sflush_r+0x106>
  402f88:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402f8a:	f8c8 6000 	str.w	r6, [r8]
  402f8e:	b311      	cbz	r1, 402fd6 <__sflush_r+0xba>
  402f90:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402f94:	4299      	cmp	r1, r3
  402f96:	d002      	beq.n	402f9e <__sflush_r+0x82>
  402f98:	4640      	mov	r0, r8
  402f9a:	f000 faa1 	bl	4034e0 <_free_r>
  402f9e:	2000      	movs	r0, #0
  402fa0:	6328      	str	r0, [r5, #48]	; 0x30
  402fa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402fa6:	692e      	ldr	r6, [r5, #16]
  402fa8:	b1ae      	cbz	r6, 402fd6 <__sflush_r+0xba>
  402faa:	682c      	ldr	r4, [r5, #0]
  402fac:	602e      	str	r6, [r5, #0]
  402fae:	0791      	lsls	r1, r2, #30
  402fb0:	bf0c      	ite	eq
  402fb2:	696b      	ldreq	r3, [r5, #20]
  402fb4:	2300      	movne	r3, #0
  402fb6:	1ba4      	subs	r4, r4, r6
  402fb8:	60ab      	str	r3, [r5, #8]
  402fba:	e00a      	b.n	402fd2 <__sflush_r+0xb6>
  402fbc:	4632      	mov	r2, r6
  402fbe:	4623      	mov	r3, r4
  402fc0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402fc2:	69e9      	ldr	r1, [r5, #28]
  402fc4:	4640      	mov	r0, r8
  402fc6:	47b8      	blx	r7
  402fc8:	2800      	cmp	r0, #0
  402fca:	ebc0 0404 	rsb	r4, r0, r4
  402fce:	4406      	add	r6, r0
  402fd0:	dd04      	ble.n	402fdc <__sflush_r+0xc0>
  402fd2:	2c00      	cmp	r4, #0
  402fd4:	dcf2      	bgt.n	402fbc <__sflush_r+0xa0>
  402fd6:	2000      	movs	r0, #0
  402fd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402fdc:	89ab      	ldrh	r3, [r5, #12]
  402fde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402fe2:	81ab      	strh	r3, [r5, #12]
  402fe4:	f04f 30ff 	mov.w	r0, #4294967295
  402fe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402fec:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402fee:	2a00      	cmp	r2, #0
  402ff0:	dca2      	bgt.n	402f38 <__sflush_r+0x1c>
  402ff2:	e7f0      	b.n	402fd6 <__sflush_r+0xba>
  402ff4:	2301      	movs	r3, #1
  402ff6:	4640      	mov	r0, r8
  402ff8:	69e9      	ldr	r1, [r5, #28]
  402ffa:	47a0      	blx	r4
  402ffc:	1c43      	adds	r3, r0, #1
  402ffe:	4602      	mov	r2, r0
  403000:	d01e      	beq.n	403040 <__sflush_r+0x124>
  403002:	89ab      	ldrh	r3, [r5, #12]
  403004:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403006:	e7a6      	b.n	402f56 <__sflush_r+0x3a>
  403008:	f8d8 3000 	ldr.w	r3, [r8]
  40300c:	b95b      	cbnz	r3, 403026 <__sflush_r+0x10a>
  40300e:	89a9      	ldrh	r1, [r5, #12]
  403010:	606b      	str	r3, [r5, #4]
  403012:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
  403016:	b29b      	uxth	r3, r3
  403018:	692a      	ldr	r2, [r5, #16]
  40301a:	81ab      	strh	r3, [r5, #12]
  40301c:	04db      	lsls	r3, r3, #19
  40301e:	602a      	str	r2, [r5, #0]
  403020:	d5b2      	bpl.n	402f88 <__sflush_r+0x6c>
  403022:	6528      	str	r0, [r5, #80]	; 0x50
  403024:	e7b0      	b.n	402f88 <__sflush_r+0x6c>
  403026:	2b1d      	cmp	r3, #29
  403028:	d001      	beq.n	40302e <__sflush_r+0x112>
  40302a:	2b16      	cmp	r3, #22
  40302c:	d119      	bne.n	403062 <__sflush_r+0x146>
  40302e:	89aa      	ldrh	r2, [r5, #12]
  403030:	692b      	ldr	r3, [r5, #16]
  403032:	602b      	str	r3, [r5, #0]
  403034:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  403038:	2300      	movs	r3, #0
  40303a:	81aa      	strh	r2, [r5, #12]
  40303c:	606b      	str	r3, [r5, #4]
  40303e:	e7a3      	b.n	402f88 <__sflush_r+0x6c>
  403040:	f8d8 3000 	ldr.w	r3, [r8]
  403044:	2b00      	cmp	r3, #0
  403046:	d0dc      	beq.n	403002 <__sflush_r+0xe6>
  403048:	2b1d      	cmp	r3, #29
  40304a:	d007      	beq.n	40305c <__sflush_r+0x140>
  40304c:	2b16      	cmp	r3, #22
  40304e:	d005      	beq.n	40305c <__sflush_r+0x140>
  403050:	89ab      	ldrh	r3, [r5, #12]
  403052:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403056:	81ab      	strh	r3, [r5, #12]
  403058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40305c:	f8c8 6000 	str.w	r6, [r8]
  403060:	e7b9      	b.n	402fd6 <__sflush_r+0xba>
  403062:	89ab      	ldrh	r3, [r5, #12]
  403064:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403068:	81ab      	strh	r3, [r5, #12]
  40306a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40306e:	bf00      	nop

00403070 <_fflush_r>:
  403070:	b510      	push	{r4, lr}
  403072:	4604      	mov	r4, r0
  403074:	b082      	sub	sp, #8
  403076:	b108      	cbz	r0, 40307c <_fflush_r+0xc>
  403078:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40307a:	b153      	cbz	r3, 403092 <_fflush_r+0x22>
  40307c:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  403080:	b908      	cbnz	r0, 403086 <_fflush_r+0x16>
  403082:	b002      	add	sp, #8
  403084:	bd10      	pop	{r4, pc}
  403086:	4620      	mov	r0, r4
  403088:	b002      	add	sp, #8
  40308a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40308e:	f7ff bf45 	b.w	402f1c <__sflush_r>
  403092:	9101      	str	r1, [sp, #4]
  403094:	f000 f81a 	bl	4030cc <__sinit>
  403098:	9901      	ldr	r1, [sp, #4]
  40309a:	e7ef      	b.n	40307c <_fflush_r+0xc>

0040309c <fflush>:
  40309c:	b120      	cbz	r0, 4030a8 <fflush+0xc>
  40309e:	4b05      	ldr	r3, [pc, #20]	; (4030b4 <fflush+0x18>)
  4030a0:	4601      	mov	r1, r0
  4030a2:	6818      	ldr	r0, [r3, #0]
  4030a4:	f7ff bfe4 	b.w	403070 <_fflush_r>
  4030a8:	4b03      	ldr	r3, [pc, #12]	; (4030b8 <fflush+0x1c>)
  4030aa:	4904      	ldr	r1, [pc, #16]	; (4030bc <fflush+0x20>)
  4030ac:	6818      	ldr	r0, [r3, #0]
  4030ae:	f000 bc97 	b.w	4039e0 <_fwalk_reent>
  4030b2:	bf00      	nop
  4030b4:	20000430 	.word	0x20000430
  4030b8:	004054b8 	.word	0x004054b8
  4030bc:	00403071 	.word	0x00403071

004030c0 <_cleanup_r>:
  4030c0:	4901      	ldr	r1, [pc, #4]	; (4030c8 <_cleanup_r+0x8>)
  4030c2:	f000 bc67 	b.w	403994 <_fwalk>
  4030c6:	bf00      	nop
  4030c8:	004052cd 	.word	0x004052cd

004030cc <__sinit>:
  4030cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030d0:	6b84      	ldr	r4, [r0, #56]	; 0x38
  4030d2:	b083      	sub	sp, #12
  4030d4:	4607      	mov	r7, r0
  4030d6:	2c00      	cmp	r4, #0
  4030d8:	d165      	bne.n	4031a6 <__sinit+0xda>
  4030da:	6845      	ldr	r5, [r0, #4]
  4030dc:	4833      	ldr	r0, [pc, #204]	; (4031ac <__sinit+0xe0>)
  4030de:	63f8      	str	r0, [r7, #60]	; 0x3c
  4030e0:	2304      	movs	r3, #4
  4030e2:	2103      	movs	r1, #3
  4030e4:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  4030e8:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  4030ec:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  4030f0:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  4030f4:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  4030f8:	81ab      	strh	r3, [r5, #12]
  4030fa:	602c      	str	r4, [r5, #0]
  4030fc:	606c      	str	r4, [r5, #4]
  4030fe:	60ac      	str	r4, [r5, #8]
  403100:	666c      	str	r4, [r5, #100]	; 0x64
  403102:	81ec      	strh	r4, [r5, #14]
  403104:	612c      	str	r4, [r5, #16]
  403106:	616c      	str	r4, [r5, #20]
  403108:	61ac      	str	r4, [r5, #24]
  40310a:	4621      	mov	r1, r4
  40310c:	2208      	movs	r2, #8
  40310e:	f7fe f967 	bl	4013e0 <memset>
  403112:	68be      	ldr	r6, [r7, #8]
  403114:	f8df b098 	ldr.w	fp, [pc, #152]	; 4031b0 <__sinit+0xe4>
  403118:	f8df a098 	ldr.w	sl, [pc, #152]	; 4031b4 <__sinit+0xe8>
  40311c:	f8df 9098 	ldr.w	r9, [pc, #152]	; 4031b8 <__sinit+0xec>
  403120:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4031bc <__sinit+0xf0>
  403124:	61ed      	str	r5, [r5, #28]
  403126:	2301      	movs	r3, #1
  403128:	2209      	movs	r2, #9
  40312a:	f8c5 b020 	str.w	fp, [r5, #32]
  40312e:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  403132:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  403136:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  40313a:	4621      	mov	r1, r4
  40313c:	81f3      	strh	r3, [r6, #14]
  40313e:	81b2      	strh	r2, [r6, #12]
  403140:	6034      	str	r4, [r6, #0]
  403142:	6074      	str	r4, [r6, #4]
  403144:	60b4      	str	r4, [r6, #8]
  403146:	6674      	str	r4, [r6, #100]	; 0x64
  403148:	6134      	str	r4, [r6, #16]
  40314a:	6174      	str	r4, [r6, #20]
  40314c:	61b4      	str	r4, [r6, #24]
  40314e:	2208      	movs	r2, #8
  403150:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  403154:	9301      	str	r3, [sp, #4]
  403156:	f7fe f943 	bl	4013e0 <memset>
  40315a:	68fd      	ldr	r5, [r7, #12]
  40315c:	61f6      	str	r6, [r6, #28]
  40315e:	2012      	movs	r0, #18
  403160:	2202      	movs	r2, #2
  403162:	f8c6 b020 	str.w	fp, [r6, #32]
  403166:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  40316a:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  40316e:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  403172:	4621      	mov	r1, r4
  403174:	81a8      	strh	r0, [r5, #12]
  403176:	81ea      	strh	r2, [r5, #14]
  403178:	602c      	str	r4, [r5, #0]
  40317a:	606c      	str	r4, [r5, #4]
  40317c:	60ac      	str	r4, [r5, #8]
  40317e:	666c      	str	r4, [r5, #100]	; 0x64
  403180:	612c      	str	r4, [r5, #16]
  403182:	616c      	str	r4, [r5, #20]
  403184:	61ac      	str	r4, [r5, #24]
  403186:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  40318a:	2208      	movs	r2, #8
  40318c:	f7fe f928 	bl	4013e0 <memset>
  403190:	9b01      	ldr	r3, [sp, #4]
  403192:	61ed      	str	r5, [r5, #28]
  403194:	f8c5 b020 	str.w	fp, [r5, #32]
  403198:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  40319c:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4031a0:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4031a4:	63bb      	str	r3, [r7, #56]	; 0x38
  4031a6:	b003      	add	sp, #12
  4031a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031ac:	004030c1 	.word	0x004030c1
  4031b0:	00404915 	.word	0x00404915
  4031b4:	00404939 	.word	0x00404939
  4031b8:	00404971 	.word	0x00404971
  4031bc:	00404991 	.word	0x00404991

004031c0 <__sfp_lock_acquire>:
  4031c0:	4770      	bx	lr
  4031c2:	bf00      	nop

004031c4 <__sfp_lock_release>:
  4031c4:	4770      	bx	lr
  4031c6:	bf00      	nop

004031c8 <__libc_fini_array>:
  4031c8:	b538      	push	{r3, r4, r5, lr}
  4031ca:	4d09      	ldr	r5, [pc, #36]	; (4031f0 <__libc_fini_array+0x28>)
  4031cc:	4c09      	ldr	r4, [pc, #36]	; (4031f4 <__libc_fini_array+0x2c>)
  4031ce:	1b64      	subs	r4, r4, r5
  4031d0:	10a4      	asrs	r4, r4, #2
  4031d2:	bf18      	it	ne
  4031d4:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
  4031d8:	d005      	beq.n	4031e6 <__libc_fini_array+0x1e>
  4031da:	3c01      	subs	r4, #1
  4031dc:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  4031e0:	4798      	blx	r3
  4031e2:	2c00      	cmp	r4, #0
  4031e4:	d1f9      	bne.n	4031da <__libc_fini_array+0x12>
  4031e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4031ea:	f002 ba2f 	b.w	40564c <_fini>
  4031ee:	bf00      	nop
  4031f0:	00405658 	.word	0x00405658
  4031f4:	0040565c 	.word	0x0040565c

004031f8 <_fputwc_r>:
  4031f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4031fc:	8993      	ldrh	r3, [r2, #12]
  4031fe:	460f      	mov	r7, r1
  403200:	0499      	lsls	r1, r3, #18
  403202:	b082      	sub	sp, #8
  403204:	4614      	mov	r4, r2
  403206:	4680      	mov	r8, r0
  403208:	d406      	bmi.n	403218 <_fputwc_r+0x20>
  40320a:	6e52      	ldr	r2, [r2, #100]	; 0x64
  40320c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  403210:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  403214:	81a3      	strh	r3, [r4, #12]
  403216:	6662      	str	r2, [r4, #100]	; 0x64
  403218:	f000 fc1c 	bl	403a54 <__locale_mb_cur_max>
  40321c:	2801      	cmp	r0, #1
  40321e:	d03d      	beq.n	40329c <_fputwc_r+0xa4>
  403220:	463a      	mov	r2, r7
  403222:	4640      	mov	r0, r8
  403224:	a901      	add	r1, sp, #4
  403226:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40322a:	f001 ff5f 	bl	4050ec <_wcrtomb_r>
  40322e:	1c42      	adds	r2, r0, #1
  403230:	4606      	mov	r6, r0
  403232:	d02c      	beq.n	40328e <_fputwc_r+0x96>
  403234:	2800      	cmp	r0, #0
  403236:	d039      	beq.n	4032ac <_fputwc_r+0xb4>
  403238:	f89d 1004 	ldrb.w	r1, [sp, #4]
  40323c:	2500      	movs	r5, #0
  40323e:	e009      	b.n	403254 <_fputwc_r+0x5c>
  403240:	6823      	ldr	r3, [r4, #0]
  403242:	7019      	strb	r1, [r3, #0]
  403244:	6823      	ldr	r3, [r4, #0]
  403246:	3301      	adds	r3, #1
  403248:	6023      	str	r3, [r4, #0]
  40324a:	3501      	adds	r5, #1
  40324c:	42b5      	cmp	r5, r6
  40324e:	d22d      	bcs.n	4032ac <_fputwc_r+0xb4>
  403250:	ab01      	add	r3, sp, #4
  403252:	5ce9      	ldrb	r1, [r5, r3]
  403254:	68a3      	ldr	r3, [r4, #8]
  403256:	3b01      	subs	r3, #1
  403258:	2b00      	cmp	r3, #0
  40325a:	60a3      	str	r3, [r4, #8]
  40325c:	daf0      	bge.n	403240 <_fputwc_r+0x48>
  40325e:	69a2      	ldr	r2, [r4, #24]
  403260:	4293      	cmp	r3, r2
  403262:	db05      	blt.n	403270 <_fputwc_r+0x78>
  403264:	6823      	ldr	r3, [r4, #0]
  403266:	7019      	strb	r1, [r3, #0]
  403268:	6823      	ldr	r3, [r4, #0]
  40326a:	7819      	ldrb	r1, [r3, #0]
  40326c:	290a      	cmp	r1, #10
  40326e:	d1ea      	bne.n	403246 <_fputwc_r+0x4e>
  403270:	4640      	mov	r0, r8
  403272:	4622      	mov	r2, r4
  403274:	f001 fee6 	bl	405044 <__swbuf_r>
  403278:	f1b0 33ff 	subs.w	r3, r0, #4294967295
  40327c:	4258      	negs	r0, r3
  40327e:	4158      	adcs	r0, r3
  403280:	2800      	cmp	r0, #0
  403282:	d0e2      	beq.n	40324a <_fputwc_r+0x52>
  403284:	f04f 30ff 	mov.w	r0, #4294967295
  403288:	b002      	add	sp, #8
  40328a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40328e:	89a3      	ldrh	r3, [r4, #12]
  403290:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403294:	81a3      	strh	r3, [r4, #12]
  403296:	b002      	add	sp, #8
  403298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40329c:	1e7b      	subs	r3, r7, #1
  40329e:	2bfe      	cmp	r3, #254	; 0xfe
  4032a0:	d8be      	bhi.n	403220 <_fputwc_r+0x28>
  4032a2:	b2f9      	uxtb	r1, r7
  4032a4:	4606      	mov	r6, r0
  4032a6:	f88d 1004 	strb.w	r1, [sp, #4]
  4032aa:	e7c7      	b.n	40323c <_fputwc_r+0x44>
  4032ac:	4638      	mov	r0, r7
  4032ae:	b002      	add	sp, #8
  4032b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004032b4 <_fread_r>:
  4032b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032b8:	b085      	sub	sp, #20
  4032ba:	fb02 f503 	mul.w	r5, r2, r3
  4032be:	4690      	mov	r8, r2
  4032c0:	9301      	str	r3, [sp, #4]
  4032c2:	4689      	mov	r9, r1
  4032c4:	4604      	mov	r4, r0
  4032c6:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
  4032ca:	2d00      	cmp	r5, #0
  4032cc:	d046      	beq.n	40335c <_fread_r+0xa8>
  4032ce:	b118      	cbz	r0, 4032d8 <_fread_r+0x24>
  4032d0:	6b82      	ldr	r2, [r0, #56]	; 0x38
  4032d2:	2a00      	cmp	r2, #0
  4032d4:	f000 80a7 	beq.w	403426 <_fread_r+0x172>
  4032d8:	f8bb 200c 	ldrh.w	r2, [fp, #12]
  4032dc:	b291      	uxth	r1, r2
  4032de:	0488      	lsls	r0, r1, #18
  4032e0:	d40a      	bmi.n	4032f8 <_fread_r+0x44>
  4032e2:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  4032e6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4032ea:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
  4032ee:	f8ab 200c 	strh.w	r2, [fp, #12]
  4032f2:	b291      	uxth	r1, r2
  4032f4:	f8cb 0064 	str.w	r0, [fp, #100]	; 0x64
  4032f8:	f8db 7004 	ldr.w	r7, [fp, #4]
  4032fc:	2f00      	cmp	r7, #0
  4032fe:	db38      	blt.n	403372 <_fread_r+0xbe>
  403300:	078b      	lsls	r3, r1, #30
  403302:	46ba      	mov	sl, r7
  403304:	d43c      	bmi.n	403380 <_fread_r+0xcc>
  403306:	46aa      	mov	sl, r5
  403308:	e010      	b.n	40332c <_fread_r+0x78>
  40330a:	f000 ff41 	bl	404190 <memcpy>
  40330e:	f8db 2000 	ldr.w	r2, [fp]
  403312:	443a      	add	r2, r7
  403314:	f8cb 2000 	str.w	r2, [fp]
  403318:	4620      	mov	r0, r4
  40331a:	4659      	mov	r1, fp
  40331c:	44b9      	add	r9, r7
  40331e:	ebc7 0a0a 	rsb	sl, r7, sl
  403322:	f001 fa23 	bl	40476c <__srefill_r>
  403326:	b9e8      	cbnz	r0, 403364 <_fread_r+0xb0>
  403328:	f8db 7004 	ldr.w	r7, [fp, #4]
  40332c:	45ba      	cmp	sl, r7
  40332e:	463a      	mov	r2, r7
  403330:	4648      	mov	r0, r9
  403332:	f8db 1000 	ldr.w	r1, [fp]
  403336:	d8e8      	bhi.n	40330a <_fread_r+0x56>
  403338:	4652      	mov	r2, sl
  40333a:	f000 ff29 	bl	404190 <memcpy>
  40333e:	f8db 1004 	ldr.w	r1, [fp, #4]
  403342:	f8db 2000 	ldr.w	r2, [fp]
  403346:	9801      	ldr	r0, [sp, #4]
  403348:	ebca 0101 	rsb	r1, sl, r1
  40334c:	4452      	add	r2, sl
  40334e:	f8cb 1004 	str.w	r1, [fp, #4]
  403352:	f8cb 2000 	str.w	r2, [fp]
  403356:	b005      	add	sp, #20
  403358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40335c:	4628      	mov	r0, r5
  40335e:	b005      	add	sp, #20
  403360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403364:	ebca 0505 	rsb	r5, sl, r5
  403368:	fbb5 f0f8 	udiv	r0, r5, r8
  40336c:	b005      	add	sp, #20
  40336e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403372:	2200      	movs	r2, #0
  403374:	078b      	lsls	r3, r1, #30
  403376:	4692      	mov	sl, r2
  403378:	f8cb 2004 	str.w	r2, [fp, #4]
  40337c:	4617      	mov	r7, r2
  40337e:	d5c2      	bpl.n	403306 <_fread_r+0x52>
  403380:	45aa      	cmp	sl, r5
  403382:	bf28      	it	cs
  403384:	46aa      	movcs	sl, r5
  403386:	4652      	mov	r2, sl
  403388:	f8db 1000 	ldr.w	r1, [fp]
  40338c:	4648      	mov	r0, r9
  40338e:	f000 feff 	bl	404190 <memcpy>
  403392:	f8db 7000 	ldr.w	r7, [fp]
  403396:	f8db 2004 	ldr.w	r2, [fp, #4]
  40339a:	f8db 1030 	ldr.w	r1, [fp, #48]	; 0x30
  40339e:	4457      	add	r7, sl
  4033a0:	ebca 0202 	rsb	r2, sl, r2
  4033a4:	9702      	str	r7, [sp, #8]
  4033a6:	f8cb 7000 	str.w	r7, [fp]
  4033aa:	eb09 060a 	add.w	r6, r9, sl
  4033ae:	f8cb 2004 	str.w	r2, [fp, #4]
  4033b2:	ebca 0705 	rsb	r7, sl, r5
  4033b6:	2900      	cmp	r1, #0
  4033b8:	d03e      	beq.n	403438 <_fread_r+0x184>
  4033ba:	2f00      	cmp	r7, #0
  4033bc:	d03e      	beq.n	40343c <_fread_r+0x188>
  4033be:	f10b 0040 	add.w	r0, fp, #64	; 0x40
  4033c2:	4281      	cmp	r1, r0
  4033c4:	d005      	beq.n	4033d2 <_fread_r+0x11e>
  4033c6:	4620      	mov	r0, r4
  4033c8:	f000 f88a 	bl	4034e0 <_free_r>
  4033cc:	f8db 3000 	ldr.w	r3, [fp]
  4033d0:	9302      	str	r3, [sp, #8]
  4033d2:	2100      	movs	r1, #0
  4033d4:	f8cb 1030 	str.w	r1, [fp, #48]	; 0x30
  4033d8:	f8db 3010 	ldr.w	r3, [fp, #16]
  4033dc:	9303      	str	r3, [sp, #12]
  4033de:	f8db a014 	ldr.w	sl, [fp, #20]
  4033e2:	f04f 0900 	mov.w	r9, #0
  4033e6:	e000      	b.n	4033ea <_fread_r+0x136>
  4033e8:	b347      	cbz	r7, 40343c <_fread_r+0x188>
  4033ea:	f8cb 6010 	str.w	r6, [fp, #16]
  4033ee:	f8cb 7014 	str.w	r7, [fp, #20]
  4033f2:	f8cb 6000 	str.w	r6, [fp]
  4033f6:	4659      	mov	r1, fp
  4033f8:	4620      	mov	r0, r4
  4033fa:	f001 f9b7 	bl	40476c <__srefill_r>
  4033fe:	f8db 1004 	ldr.w	r1, [fp, #4]
  403402:	9b03      	ldr	r3, [sp, #12]
  403404:	f8cb 3010 	str.w	r3, [fp, #16]
  403408:	9b02      	ldr	r3, [sp, #8]
  40340a:	f8cb a014 	str.w	sl, [fp, #20]
  40340e:	f8cb 3000 	str.w	r3, [fp]
  403412:	1a7f      	subs	r7, r7, r1
  403414:	440e      	add	r6, r1
  403416:	f8cb 9004 	str.w	r9, [fp, #4]
  40341a:	2800      	cmp	r0, #0
  40341c:	d0e4      	beq.n	4033e8 <_fread_r+0x134>
  40341e:	1bed      	subs	r5, r5, r7
  403420:	fbb5 f0f8 	udiv	r0, r5, r8
  403424:	e797      	b.n	403356 <_fread_r+0xa2>
  403426:	f7ff fe51 	bl	4030cc <__sinit>
  40342a:	f8bb 200c 	ldrh.w	r2, [fp, #12]
  40342e:	b291      	uxth	r1, r2
  403430:	0488      	lsls	r0, r1, #18
  403432:	f53f af61 	bmi.w	4032f8 <_fread_r+0x44>
  403436:	e754      	b.n	4032e2 <_fread_r+0x2e>
  403438:	2f00      	cmp	r7, #0
  40343a:	d1cd      	bne.n	4033d8 <_fread_r+0x124>
  40343c:	9801      	ldr	r0, [sp, #4]
  40343e:	b005      	add	sp, #20
  403440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00403444 <_malloc_trim_r>:
  403444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403446:	4d23      	ldr	r5, [pc, #140]	; (4034d4 <_malloc_trim_r+0x90>)
  403448:	460f      	mov	r7, r1
  40344a:	4604      	mov	r4, r0
  40344c:	f000 ff9a 	bl	404384 <__malloc_lock>
  403450:	68ab      	ldr	r3, [r5, #8]
  403452:	685e      	ldr	r6, [r3, #4]
  403454:	f026 0603 	bic.w	r6, r6, #3
  403458:	1bf1      	subs	r1, r6, r7
  40345a:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  40345e:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  403462:	f021 010f 	bic.w	r1, r1, #15
  403466:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
  40346a:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
  40346e:	db07      	blt.n	403480 <_malloc_trim_r+0x3c>
  403470:	4620      	mov	r0, r4
  403472:	2100      	movs	r1, #0
  403474:	f001 fa04 	bl	404880 <_sbrk_r>
  403478:	68ab      	ldr	r3, [r5, #8]
  40347a:	4433      	add	r3, r6
  40347c:	4298      	cmp	r0, r3
  40347e:	d004      	beq.n	40348a <_malloc_trim_r+0x46>
  403480:	4620      	mov	r0, r4
  403482:	f000 ff81 	bl	404388 <__malloc_unlock>
  403486:	2000      	movs	r0, #0
  403488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40348a:	4620      	mov	r0, r4
  40348c:	4279      	negs	r1, r7
  40348e:	f001 f9f7 	bl	404880 <_sbrk_r>
  403492:	3001      	adds	r0, #1
  403494:	d00d      	beq.n	4034b2 <_malloc_trim_r+0x6e>
  403496:	4b10      	ldr	r3, [pc, #64]	; (4034d8 <_malloc_trim_r+0x94>)
  403498:	68aa      	ldr	r2, [r5, #8]
  40349a:	6819      	ldr	r1, [r3, #0]
  40349c:	1bf6      	subs	r6, r6, r7
  40349e:	f046 0601 	orr.w	r6, r6, #1
  4034a2:	4620      	mov	r0, r4
  4034a4:	1bc9      	subs	r1, r1, r7
  4034a6:	6056      	str	r6, [r2, #4]
  4034a8:	6019      	str	r1, [r3, #0]
  4034aa:	f000 ff6d 	bl	404388 <__malloc_unlock>
  4034ae:	2001      	movs	r0, #1
  4034b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4034b2:	4620      	mov	r0, r4
  4034b4:	2100      	movs	r1, #0
  4034b6:	f001 f9e3 	bl	404880 <_sbrk_r>
  4034ba:	68ab      	ldr	r3, [r5, #8]
  4034bc:	1ac2      	subs	r2, r0, r3
  4034be:	2a0f      	cmp	r2, #15
  4034c0:	ddde      	ble.n	403480 <_malloc_trim_r+0x3c>
  4034c2:	4d06      	ldr	r5, [pc, #24]	; (4034dc <_malloc_trim_r+0x98>)
  4034c4:	4904      	ldr	r1, [pc, #16]	; (4034d8 <_malloc_trim_r+0x94>)
  4034c6:	682d      	ldr	r5, [r5, #0]
  4034c8:	f042 0201 	orr.w	r2, r2, #1
  4034cc:	1b40      	subs	r0, r0, r5
  4034ce:	605a      	str	r2, [r3, #4]
  4034d0:	6008      	str	r0, [r1, #0]
  4034d2:	e7d5      	b.n	403480 <_malloc_trim_r+0x3c>
  4034d4:	2000045c 	.word	0x2000045c
  4034d8:	20000914 	.word	0x20000914
  4034dc:	20000868 	.word	0x20000868

004034e0 <_free_r>:
  4034e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4034e4:	460d      	mov	r5, r1
  4034e6:	4606      	mov	r6, r0
  4034e8:	2900      	cmp	r1, #0
  4034ea:	d055      	beq.n	403598 <_free_r+0xb8>
  4034ec:	f000 ff4a 	bl	404384 <__malloc_lock>
  4034f0:	f855 1c04 	ldr.w	r1, [r5, #-4]
  4034f4:	f8df c174 	ldr.w	ip, [pc, #372]	; 40366c <_free_r+0x18c>
  4034f8:	f021 0301 	bic.w	r3, r1, #1
  4034fc:	f1a5 0408 	sub.w	r4, r5, #8
  403500:	18e2      	adds	r2, r4, r3
  403502:	f8dc 0008 	ldr.w	r0, [ip, #8]
  403506:	6857      	ldr	r7, [r2, #4]
  403508:	4290      	cmp	r0, r2
  40350a:	f027 0703 	bic.w	r7, r7, #3
  40350e:	d069      	beq.n	4035e4 <_free_r+0x104>
  403510:	f011 0101 	ands.w	r1, r1, #1
  403514:	6057      	str	r7, [r2, #4]
  403516:	d032      	beq.n	40357e <_free_r+0x9e>
  403518:	2100      	movs	r1, #0
  40351a:	19d0      	adds	r0, r2, r7
  40351c:	6840      	ldr	r0, [r0, #4]
  40351e:	07c0      	lsls	r0, r0, #31
  403520:	d406      	bmi.n	403530 <_free_r+0x50>
  403522:	443b      	add	r3, r7
  403524:	6890      	ldr	r0, [r2, #8]
  403526:	2900      	cmp	r1, #0
  403528:	d04e      	beq.n	4035c8 <_free_r+0xe8>
  40352a:	68d2      	ldr	r2, [r2, #12]
  40352c:	60c2      	str	r2, [r0, #12]
  40352e:	6090      	str	r0, [r2, #8]
  403530:	f043 0201 	orr.w	r2, r3, #1
  403534:	6062      	str	r2, [r4, #4]
  403536:	50e3      	str	r3, [r4, r3]
  403538:	b9e1      	cbnz	r1, 403574 <_free_r+0x94>
  40353a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40353e:	d32d      	bcc.n	40359c <_free_r+0xbc>
  403540:	0a5a      	lsrs	r2, r3, #9
  403542:	2a04      	cmp	r2, #4
  403544:	d86a      	bhi.n	40361c <_free_r+0x13c>
  403546:	0998      	lsrs	r0, r3, #6
  403548:	3038      	adds	r0, #56	; 0x38
  40354a:	0041      	lsls	r1, r0, #1
  40354c:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
  403550:	4946      	ldr	r1, [pc, #280]	; (40366c <_free_r+0x18c>)
  403552:	f8dc 2008 	ldr.w	r2, [ip, #8]
  403556:	4562      	cmp	r2, ip
  403558:	d066      	beq.n	403628 <_free_r+0x148>
  40355a:	6851      	ldr	r1, [r2, #4]
  40355c:	f021 0103 	bic.w	r1, r1, #3
  403560:	428b      	cmp	r3, r1
  403562:	d202      	bcs.n	40356a <_free_r+0x8a>
  403564:	6892      	ldr	r2, [r2, #8]
  403566:	4594      	cmp	ip, r2
  403568:	d1f7      	bne.n	40355a <_free_r+0x7a>
  40356a:	68d3      	ldr	r3, [r2, #12]
  40356c:	60e3      	str	r3, [r4, #12]
  40356e:	60a2      	str	r2, [r4, #8]
  403570:	609c      	str	r4, [r3, #8]
  403572:	60d4      	str	r4, [r2, #12]
  403574:	4630      	mov	r0, r6
  403576:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40357a:	f000 bf05 	b.w	404388 <__malloc_unlock>
  40357e:	f855 5c08 	ldr.w	r5, [r5, #-8]
  403582:	1b64      	subs	r4, r4, r5
  403584:	f10c 0808 	add.w	r8, ip, #8
  403588:	68a0      	ldr	r0, [r4, #8]
  40358a:	4540      	cmp	r0, r8
  40358c:	442b      	add	r3, r5
  40358e:	d043      	beq.n	403618 <_free_r+0x138>
  403590:	68e5      	ldr	r5, [r4, #12]
  403592:	60c5      	str	r5, [r0, #12]
  403594:	60a8      	str	r0, [r5, #8]
  403596:	e7c0      	b.n	40351a <_free_r+0x3a>
  403598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40359c:	08db      	lsrs	r3, r3, #3
  40359e:	eb0c 02c3 	add.w	r2, ip, r3, lsl #3
  4035a2:	2501      	movs	r5, #1
  4035a4:	f8dc 0004 	ldr.w	r0, [ip, #4]
  4035a8:	6891      	ldr	r1, [r2, #8]
  4035aa:	60a1      	str	r1, [r4, #8]
  4035ac:	109b      	asrs	r3, r3, #2
  4035ae:	fa05 f303 	lsl.w	r3, r5, r3
  4035b2:	4318      	orrs	r0, r3
  4035b4:	60e2      	str	r2, [r4, #12]
  4035b6:	f8cc 0004 	str.w	r0, [ip, #4]
  4035ba:	6094      	str	r4, [r2, #8]
  4035bc:	4630      	mov	r0, r6
  4035be:	60cc      	str	r4, [r1, #12]
  4035c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4035c4:	f000 bee0 	b.w	404388 <__malloc_unlock>
  4035c8:	4d29      	ldr	r5, [pc, #164]	; (403670 <_free_r+0x190>)
  4035ca:	42a8      	cmp	r0, r5
  4035cc:	d1ad      	bne.n	40352a <_free_r+0x4a>
  4035ce:	f043 0201 	orr.w	r2, r3, #1
  4035d2:	f8cc 4014 	str.w	r4, [ip, #20]
  4035d6:	f8cc 4010 	str.w	r4, [ip, #16]
  4035da:	60e0      	str	r0, [r4, #12]
  4035dc:	60a0      	str	r0, [r4, #8]
  4035de:	6062      	str	r2, [r4, #4]
  4035e0:	50e3      	str	r3, [r4, r3]
  4035e2:	e7c7      	b.n	403574 <_free_r+0x94>
  4035e4:	441f      	add	r7, r3
  4035e6:	07cb      	lsls	r3, r1, #31
  4035e8:	d407      	bmi.n	4035fa <_free_r+0x11a>
  4035ea:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4035ee:	1ae4      	subs	r4, r4, r3
  4035f0:	441f      	add	r7, r3
  4035f2:	68a2      	ldr	r2, [r4, #8]
  4035f4:	68e3      	ldr	r3, [r4, #12]
  4035f6:	60d3      	str	r3, [r2, #12]
  4035f8:	609a      	str	r2, [r3, #8]
  4035fa:	4b1e      	ldr	r3, [pc, #120]	; (403674 <_free_r+0x194>)
  4035fc:	681b      	ldr	r3, [r3, #0]
  4035fe:	f047 0201 	orr.w	r2, r7, #1
  403602:	429f      	cmp	r7, r3
  403604:	6062      	str	r2, [r4, #4]
  403606:	f8cc 4008 	str.w	r4, [ip, #8]
  40360a:	d3b3      	bcc.n	403574 <_free_r+0x94>
  40360c:	4b1a      	ldr	r3, [pc, #104]	; (403678 <_free_r+0x198>)
  40360e:	4630      	mov	r0, r6
  403610:	6819      	ldr	r1, [r3, #0]
  403612:	f7ff ff17 	bl	403444 <_malloc_trim_r>
  403616:	e7ad      	b.n	403574 <_free_r+0x94>
  403618:	2101      	movs	r1, #1
  40361a:	e77e      	b.n	40351a <_free_r+0x3a>
  40361c:	2a14      	cmp	r2, #20
  40361e:	d80c      	bhi.n	40363a <_free_r+0x15a>
  403620:	f102 005b 	add.w	r0, r2, #91	; 0x5b
  403624:	0041      	lsls	r1, r0, #1
  403626:	e791      	b.n	40354c <_free_r+0x6c>
  403628:	684b      	ldr	r3, [r1, #4]
  40362a:	1080      	asrs	r0, r0, #2
  40362c:	2501      	movs	r5, #1
  40362e:	fa05 f000 	lsl.w	r0, r5, r0
  403632:	4303      	orrs	r3, r0
  403634:	604b      	str	r3, [r1, #4]
  403636:	4613      	mov	r3, r2
  403638:	e798      	b.n	40356c <_free_r+0x8c>
  40363a:	2a54      	cmp	r2, #84	; 0x54
  40363c:	d803      	bhi.n	403646 <_free_r+0x166>
  40363e:	0b18      	lsrs	r0, r3, #12
  403640:	306e      	adds	r0, #110	; 0x6e
  403642:	0041      	lsls	r1, r0, #1
  403644:	e782      	b.n	40354c <_free_r+0x6c>
  403646:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40364a:	d803      	bhi.n	403654 <_free_r+0x174>
  40364c:	0bd8      	lsrs	r0, r3, #15
  40364e:	3077      	adds	r0, #119	; 0x77
  403650:	0041      	lsls	r1, r0, #1
  403652:	e77b      	b.n	40354c <_free_r+0x6c>
  403654:	f240 5154 	movw	r1, #1364	; 0x554
  403658:	428a      	cmp	r2, r1
  40365a:	d803      	bhi.n	403664 <_free_r+0x184>
  40365c:	0c98      	lsrs	r0, r3, #18
  40365e:	307c      	adds	r0, #124	; 0x7c
  403660:	0041      	lsls	r1, r0, #1
  403662:	e773      	b.n	40354c <_free_r+0x6c>
  403664:	21fc      	movs	r1, #252	; 0xfc
  403666:	207e      	movs	r0, #126	; 0x7e
  403668:	e770      	b.n	40354c <_free_r+0x6c>
  40366a:	bf00      	nop
  40366c:	2000045c 	.word	0x2000045c
  403670:	20000464 	.word	0x20000464
  403674:	20000864 	.word	0x20000864
  403678:	20000910 	.word	0x20000910

0040367c <__sfvwrite_r>:
  40367c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403680:	6893      	ldr	r3, [r2, #8]
  403682:	b083      	sub	sp, #12
  403684:	4616      	mov	r6, r2
  403686:	4681      	mov	r9, r0
  403688:	460c      	mov	r4, r1
  40368a:	b32b      	cbz	r3, 4036d8 <__sfvwrite_r+0x5c>
  40368c:	898b      	ldrh	r3, [r1, #12]
  40368e:	0719      	lsls	r1, r3, #28
  403690:	d526      	bpl.n	4036e0 <__sfvwrite_r+0x64>
  403692:	6922      	ldr	r2, [r4, #16]
  403694:	b322      	cbz	r2, 4036e0 <__sfvwrite_r+0x64>
  403696:	f003 0202 	and.w	r2, r3, #2
  40369a:	b292      	uxth	r2, r2
  40369c:	6835      	ldr	r5, [r6, #0]
  40369e:	2a00      	cmp	r2, #0
  4036a0:	d02c      	beq.n	4036fc <__sfvwrite_r+0x80>
  4036a2:	f04f 0a00 	mov.w	sl, #0
  4036a6:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 403990 <__sfvwrite_r+0x314>
  4036aa:	46d0      	mov	r8, sl
  4036ac:	45d8      	cmp	r8, fp
  4036ae:	bf34      	ite	cc
  4036b0:	4643      	movcc	r3, r8
  4036b2:	465b      	movcs	r3, fp
  4036b4:	4652      	mov	r2, sl
  4036b6:	4648      	mov	r0, r9
  4036b8:	f1b8 0f00 	cmp.w	r8, #0
  4036bc:	d04f      	beq.n	40375e <__sfvwrite_r+0xe2>
  4036be:	69e1      	ldr	r1, [r4, #28]
  4036c0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4036c2:	47b8      	blx	r7
  4036c4:	2800      	cmp	r0, #0
  4036c6:	dd56      	ble.n	403776 <__sfvwrite_r+0xfa>
  4036c8:	68b3      	ldr	r3, [r6, #8]
  4036ca:	1a1b      	subs	r3, r3, r0
  4036cc:	4482      	add	sl, r0
  4036ce:	ebc0 0808 	rsb	r8, r0, r8
  4036d2:	60b3      	str	r3, [r6, #8]
  4036d4:	2b00      	cmp	r3, #0
  4036d6:	d1e9      	bne.n	4036ac <__sfvwrite_r+0x30>
  4036d8:	2000      	movs	r0, #0
  4036da:	b003      	add	sp, #12
  4036dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036e0:	4648      	mov	r0, r9
  4036e2:	4621      	mov	r1, r4
  4036e4:	f7ff fba8 	bl	402e38 <__swsetup_r>
  4036e8:	2800      	cmp	r0, #0
  4036ea:	f040 8148 	bne.w	40397e <__sfvwrite_r+0x302>
  4036ee:	89a3      	ldrh	r3, [r4, #12]
  4036f0:	6835      	ldr	r5, [r6, #0]
  4036f2:	f003 0202 	and.w	r2, r3, #2
  4036f6:	b292      	uxth	r2, r2
  4036f8:	2a00      	cmp	r2, #0
  4036fa:	d1d2      	bne.n	4036a2 <__sfvwrite_r+0x26>
  4036fc:	f013 0a01 	ands.w	sl, r3, #1
  403700:	d142      	bne.n	403788 <__sfvwrite_r+0x10c>
  403702:	46d0      	mov	r8, sl
  403704:	f1b8 0f00 	cmp.w	r8, #0
  403708:	d023      	beq.n	403752 <__sfvwrite_r+0xd6>
  40370a:	059a      	lsls	r2, r3, #22
  40370c:	68a7      	ldr	r7, [r4, #8]
  40370e:	d576      	bpl.n	4037fe <__sfvwrite_r+0x182>
  403710:	45b8      	cmp	r8, r7
  403712:	f0c0 80a4 	bcc.w	40385e <__sfvwrite_r+0x1e2>
  403716:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40371a:	f040 80b2 	bne.w	403882 <__sfvwrite_r+0x206>
  40371e:	6820      	ldr	r0, [r4, #0]
  403720:	46bb      	mov	fp, r7
  403722:	4651      	mov	r1, sl
  403724:	465a      	mov	r2, fp
  403726:	f000 fdcd 	bl	4042c4 <memmove>
  40372a:	68a2      	ldr	r2, [r4, #8]
  40372c:	6821      	ldr	r1, [r4, #0]
  40372e:	1bd2      	subs	r2, r2, r7
  403730:	eb01 030b 	add.w	r3, r1, fp
  403734:	60a2      	str	r2, [r4, #8]
  403736:	6023      	str	r3, [r4, #0]
  403738:	4642      	mov	r2, r8
  40373a:	68b3      	ldr	r3, [r6, #8]
  40373c:	1a9b      	subs	r3, r3, r2
  40373e:	4492      	add	sl, r2
  403740:	ebc2 0808 	rsb	r8, r2, r8
  403744:	60b3      	str	r3, [r6, #8]
  403746:	2b00      	cmp	r3, #0
  403748:	d0c6      	beq.n	4036d8 <__sfvwrite_r+0x5c>
  40374a:	89a3      	ldrh	r3, [r4, #12]
  40374c:	f1b8 0f00 	cmp.w	r8, #0
  403750:	d1db      	bne.n	40370a <__sfvwrite_r+0x8e>
  403752:	f8d5 a000 	ldr.w	sl, [r5]
  403756:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40375a:	3508      	adds	r5, #8
  40375c:	e7d2      	b.n	403704 <__sfvwrite_r+0x88>
  40375e:	f8d5 a000 	ldr.w	sl, [r5]
  403762:	f8d5 8004 	ldr.w	r8, [r5, #4]
  403766:	3508      	adds	r5, #8
  403768:	e7a0      	b.n	4036ac <__sfvwrite_r+0x30>
  40376a:	4648      	mov	r0, r9
  40376c:	4621      	mov	r1, r4
  40376e:	f7ff fc7f 	bl	403070 <_fflush_r>
  403772:	2800      	cmp	r0, #0
  403774:	d059      	beq.n	40382a <__sfvwrite_r+0x1ae>
  403776:	89a3      	ldrh	r3, [r4, #12]
  403778:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40377c:	f04f 30ff 	mov.w	r0, #4294967295
  403780:	81a3      	strh	r3, [r4, #12]
  403782:	b003      	add	sp, #12
  403784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403788:	4692      	mov	sl, r2
  40378a:	9201      	str	r2, [sp, #4]
  40378c:	4693      	mov	fp, r2
  40378e:	4690      	mov	r8, r2
  403790:	f1b8 0f00 	cmp.w	r8, #0
  403794:	d02b      	beq.n	4037ee <__sfvwrite_r+0x172>
  403796:	9f01      	ldr	r7, [sp, #4]
  403798:	2f00      	cmp	r7, #0
  40379a:	d064      	beq.n	403866 <__sfvwrite_r+0x1ea>
  40379c:	6820      	ldr	r0, [r4, #0]
  40379e:	6921      	ldr	r1, [r4, #16]
  4037a0:	f8d4 c008 	ldr.w	ip, [r4, #8]
  4037a4:	6962      	ldr	r2, [r4, #20]
  4037a6:	45c2      	cmp	sl, r8
  4037a8:	bf34      	ite	cc
  4037aa:	4653      	movcc	r3, sl
  4037ac:	4643      	movcs	r3, r8
  4037ae:	4288      	cmp	r0, r1
  4037b0:	461f      	mov	r7, r3
  4037b2:	d903      	bls.n	4037bc <__sfvwrite_r+0x140>
  4037b4:	4494      	add	ip, r2
  4037b6:	4563      	cmp	r3, ip
  4037b8:	f300 80ae 	bgt.w	403918 <__sfvwrite_r+0x29c>
  4037bc:	4293      	cmp	r3, r2
  4037be:	db36      	blt.n	40382e <__sfvwrite_r+0x1b2>
  4037c0:	4613      	mov	r3, r2
  4037c2:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4037c4:	69e1      	ldr	r1, [r4, #28]
  4037c6:	4648      	mov	r0, r9
  4037c8:	465a      	mov	r2, fp
  4037ca:	47b8      	blx	r7
  4037cc:	1e07      	subs	r7, r0, #0
  4037ce:	ddd2      	ble.n	403776 <__sfvwrite_r+0xfa>
  4037d0:	ebba 0a07 	subs.w	sl, sl, r7
  4037d4:	d03a      	beq.n	40384c <__sfvwrite_r+0x1d0>
  4037d6:	68b3      	ldr	r3, [r6, #8]
  4037d8:	1bdb      	subs	r3, r3, r7
  4037da:	44bb      	add	fp, r7
  4037dc:	ebc7 0808 	rsb	r8, r7, r8
  4037e0:	60b3      	str	r3, [r6, #8]
  4037e2:	2b00      	cmp	r3, #0
  4037e4:	f43f af78 	beq.w	4036d8 <__sfvwrite_r+0x5c>
  4037e8:	f1b8 0f00 	cmp.w	r8, #0
  4037ec:	d1d3      	bne.n	403796 <__sfvwrite_r+0x11a>
  4037ee:	2700      	movs	r7, #0
  4037f0:	f8d5 b000 	ldr.w	fp, [r5]
  4037f4:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4037f8:	9701      	str	r7, [sp, #4]
  4037fa:	3508      	adds	r5, #8
  4037fc:	e7c8      	b.n	403790 <__sfvwrite_r+0x114>
  4037fe:	6820      	ldr	r0, [r4, #0]
  403800:	6923      	ldr	r3, [r4, #16]
  403802:	4298      	cmp	r0, r3
  403804:	d802      	bhi.n	40380c <__sfvwrite_r+0x190>
  403806:	6963      	ldr	r3, [r4, #20]
  403808:	4598      	cmp	r8, r3
  40380a:	d272      	bcs.n	4038f2 <__sfvwrite_r+0x276>
  40380c:	45b8      	cmp	r8, r7
  40380e:	bf38      	it	cc
  403810:	4647      	movcc	r7, r8
  403812:	463a      	mov	r2, r7
  403814:	4651      	mov	r1, sl
  403816:	f000 fd55 	bl	4042c4 <memmove>
  40381a:	68a3      	ldr	r3, [r4, #8]
  40381c:	6822      	ldr	r2, [r4, #0]
  40381e:	1bdb      	subs	r3, r3, r7
  403820:	443a      	add	r2, r7
  403822:	60a3      	str	r3, [r4, #8]
  403824:	6022      	str	r2, [r4, #0]
  403826:	2b00      	cmp	r3, #0
  403828:	d09f      	beq.n	40376a <__sfvwrite_r+0xee>
  40382a:	463a      	mov	r2, r7
  40382c:	e785      	b.n	40373a <__sfvwrite_r+0xbe>
  40382e:	461a      	mov	r2, r3
  403830:	4659      	mov	r1, fp
  403832:	9300      	str	r3, [sp, #0]
  403834:	f000 fd46 	bl	4042c4 <memmove>
  403838:	9b00      	ldr	r3, [sp, #0]
  40383a:	68a1      	ldr	r1, [r4, #8]
  40383c:	6822      	ldr	r2, [r4, #0]
  40383e:	1ac9      	subs	r1, r1, r3
  403840:	ebba 0a07 	subs.w	sl, sl, r7
  403844:	4413      	add	r3, r2
  403846:	60a1      	str	r1, [r4, #8]
  403848:	6023      	str	r3, [r4, #0]
  40384a:	d1c4      	bne.n	4037d6 <__sfvwrite_r+0x15a>
  40384c:	4648      	mov	r0, r9
  40384e:	4621      	mov	r1, r4
  403850:	f7ff fc0e 	bl	403070 <_fflush_r>
  403854:	2800      	cmp	r0, #0
  403856:	d18e      	bne.n	403776 <__sfvwrite_r+0xfa>
  403858:	f8cd a004 	str.w	sl, [sp, #4]
  40385c:	e7bb      	b.n	4037d6 <__sfvwrite_r+0x15a>
  40385e:	6820      	ldr	r0, [r4, #0]
  403860:	4647      	mov	r7, r8
  403862:	46c3      	mov	fp, r8
  403864:	e75d      	b.n	403722 <__sfvwrite_r+0xa6>
  403866:	4658      	mov	r0, fp
  403868:	210a      	movs	r1, #10
  40386a:	4642      	mov	r2, r8
  40386c:	f000 fc48 	bl	404100 <memchr>
  403870:	2800      	cmp	r0, #0
  403872:	d07f      	beq.n	403974 <__sfvwrite_r+0x2f8>
  403874:	f100 0a01 	add.w	sl, r0, #1
  403878:	2701      	movs	r7, #1
  40387a:	ebcb 0a0a 	rsb	sl, fp, sl
  40387e:	9701      	str	r7, [sp, #4]
  403880:	e78c      	b.n	40379c <__sfvwrite_r+0x120>
  403882:	6822      	ldr	r2, [r4, #0]
  403884:	6921      	ldr	r1, [r4, #16]
  403886:	6967      	ldr	r7, [r4, #20]
  403888:	ebc1 0c02 	rsb	ip, r1, r2
  40388c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  403890:	f10c 0201 	add.w	r2, ip, #1
  403894:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  403898:	4442      	add	r2, r8
  40389a:	107f      	asrs	r7, r7, #1
  40389c:	4297      	cmp	r7, r2
  40389e:	bf34      	ite	cc
  4038a0:	4617      	movcc	r7, r2
  4038a2:	463a      	movcs	r2, r7
  4038a4:	055b      	lsls	r3, r3, #21
  4038a6:	d54f      	bpl.n	403948 <__sfvwrite_r+0x2cc>
  4038a8:	4611      	mov	r1, r2
  4038aa:	4648      	mov	r0, r9
  4038ac:	f8cd c000 	str.w	ip, [sp]
  4038b0:	f000 f946 	bl	403b40 <_malloc_r>
  4038b4:	f8dd c000 	ldr.w	ip, [sp]
  4038b8:	4683      	mov	fp, r0
  4038ba:	2800      	cmp	r0, #0
  4038bc:	d062      	beq.n	403984 <__sfvwrite_r+0x308>
  4038be:	4662      	mov	r2, ip
  4038c0:	6921      	ldr	r1, [r4, #16]
  4038c2:	f8cd c000 	str.w	ip, [sp]
  4038c6:	f000 fc63 	bl	404190 <memcpy>
  4038ca:	89a2      	ldrh	r2, [r4, #12]
  4038cc:	f8dd c000 	ldr.w	ip, [sp]
  4038d0:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4038d4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4038d8:	81a2      	strh	r2, [r4, #12]
  4038da:	eb0b 000c 	add.w	r0, fp, ip
  4038de:	ebcc 0207 	rsb	r2, ip, r7
  4038e2:	f8c4 b010 	str.w	fp, [r4, #16]
  4038e6:	6167      	str	r7, [r4, #20]
  4038e8:	6020      	str	r0, [r4, #0]
  4038ea:	60a2      	str	r2, [r4, #8]
  4038ec:	4647      	mov	r7, r8
  4038ee:	46c3      	mov	fp, r8
  4038f0:	e717      	b.n	403722 <__sfvwrite_r+0xa6>
  4038f2:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  4038f6:	4590      	cmp	r8, r2
  4038f8:	bf38      	it	cc
  4038fa:	4642      	movcc	r2, r8
  4038fc:	fb92 f2f3 	sdiv	r2, r2, r3
  403900:	fb02 f303 	mul.w	r3, r2, r3
  403904:	6a67      	ldr	r7, [r4, #36]	; 0x24
  403906:	69e1      	ldr	r1, [r4, #28]
  403908:	4648      	mov	r0, r9
  40390a:	4652      	mov	r2, sl
  40390c:	47b8      	blx	r7
  40390e:	2800      	cmp	r0, #0
  403910:	f77f af31 	ble.w	403776 <__sfvwrite_r+0xfa>
  403914:	4602      	mov	r2, r0
  403916:	e710      	b.n	40373a <__sfvwrite_r+0xbe>
  403918:	4662      	mov	r2, ip
  40391a:	4659      	mov	r1, fp
  40391c:	f8cd c000 	str.w	ip, [sp]
  403920:	f000 fcd0 	bl	4042c4 <memmove>
  403924:	f8dd c000 	ldr.w	ip, [sp]
  403928:	6823      	ldr	r3, [r4, #0]
  40392a:	4463      	add	r3, ip
  40392c:	6023      	str	r3, [r4, #0]
  40392e:	4648      	mov	r0, r9
  403930:	4621      	mov	r1, r4
  403932:	f8cd c000 	str.w	ip, [sp]
  403936:	f7ff fb9b 	bl	403070 <_fflush_r>
  40393a:	f8dd c000 	ldr.w	ip, [sp]
  40393e:	2800      	cmp	r0, #0
  403940:	f47f af19 	bne.w	403776 <__sfvwrite_r+0xfa>
  403944:	4667      	mov	r7, ip
  403946:	e743      	b.n	4037d0 <__sfvwrite_r+0x154>
  403948:	4648      	mov	r0, r9
  40394a:	f8cd c000 	str.w	ip, [sp]
  40394e:	f000 fd1d 	bl	40438c <_realloc_r>
  403952:	f8dd c000 	ldr.w	ip, [sp]
  403956:	4683      	mov	fp, r0
  403958:	2800      	cmp	r0, #0
  40395a:	d1be      	bne.n	4038da <__sfvwrite_r+0x25e>
  40395c:	4648      	mov	r0, r9
  40395e:	6921      	ldr	r1, [r4, #16]
  403960:	f7ff fdbe 	bl	4034e0 <_free_r>
  403964:	89a3      	ldrh	r3, [r4, #12]
  403966:	220c      	movs	r2, #12
  403968:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40396c:	b29b      	uxth	r3, r3
  40396e:	f8c9 2000 	str.w	r2, [r9]
  403972:	e701      	b.n	403778 <__sfvwrite_r+0xfc>
  403974:	2701      	movs	r7, #1
  403976:	f108 0a01 	add.w	sl, r8, #1
  40397a:	9701      	str	r7, [sp, #4]
  40397c:	e70e      	b.n	40379c <__sfvwrite_r+0x120>
  40397e:	f04f 30ff 	mov.w	r0, #4294967295
  403982:	e6aa      	b.n	4036da <__sfvwrite_r+0x5e>
  403984:	230c      	movs	r3, #12
  403986:	f8c9 3000 	str.w	r3, [r9]
  40398a:	89a3      	ldrh	r3, [r4, #12]
  40398c:	e6f4      	b.n	403778 <__sfvwrite_r+0xfc>
  40398e:	bf00      	nop
  403990:	7ffffc00 	.word	0x7ffffc00

00403994 <_fwalk>:
  403994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403998:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  40399c:	4688      	mov	r8, r1
  40399e:	d01a      	beq.n	4039d6 <_fwalk+0x42>
  4039a0:	2600      	movs	r6, #0
  4039a2:	687d      	ldr	r5, [r7, #4]
  4039a4:	68bc      	ldr	r4, [r7, #8]
  4039a6:	3d01      	subs	r5, #1
  4039a8:	d40f      	bmi.n	4039ca <_fwalk+0x36>
  4039aa:	89a3      	ldrh	r3, [r4, #12]
  4039ac:	2b01      	cmp	r3, #1
  4039ae:	f105 35ff 	add.w	r5, r5, #4294967295
  4039b2:	d906      	bls.n	4039c2 <_fwalk+0x2e>
  4039b4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4039b8:	3301      	adds	r3, #1
  4039ba:	4620      	mov	r0, r4
  4039bc:	d001      	beq.n	4039c2 <_fwalk+0x2e>
  4039be:	47c0      	blx	r8
  4039c0:	4306      	orrs	r6, r0
  4039c2:	1c6b      	adds	r3, r5, #1
  4039c4:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4039c8:	d1ef      	bne.n	4039aa <_fwalk+0x16>
  4039ca:	683f      	ldr	r7, [r7, #0]
  4039cc:	2f00      	cmp	r7, #0
  4039ce:	d1e8      	bne.n	4039a2 <_fwalk+0xe>
  4039d0:	4630      	mov	r0, r6
  4039d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4039d6:	463e      	mov	r6, r7
  4039d8:	4630      	mov	r0, r6
  4039da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4039de:	bf00      	nop

004039e0 <_fwalk_reent>:
  4039e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4039e4:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
  4039e8:	4680      	mov	r8, r0
  4039ea:	4689      	mov	r9, r1
  4039ec:	d01b      	beq.n	403a26 <_fwalk_reent+0x46>
  4039ee:	2700      	movs	r7, #0
  4039f0:	6875      	ldr	r5, [r6, #4]
  4039f2:	68b4      	ldr	r4, [r6, #8]
  4039f4:	3d01      	subs	r5, #1
  4039f6:	d410      	bmi.n	403a1a <_fwalk_reent+0x3a>
  4039f8:	89a3      	ldrh	r3, [r4, #12]
  4039fa:	2b01      	cmp	r3, #1
  4039fc:	f105 35ff 	add.w	r5, r5, #4294967295
  403a00:	d907      	bls.n	403a12 <_fwalk_reent+0x32>
  403a02:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403a06:	3301      	adds	r3, #1
  403a08:	4621      	mov	r1, r4
  403a0a:	4640      	mov	r0, r8
  403a0c:	d001      	beq.n	403a12 <_fwalk_reent+0x32>
  403a0e:	47c8      	blx	r9
  403a10:	4307      	orrs	r7, r0
  403a12:	1c6b      	adds	r3, r5, #1
  403a14:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403a18:	d1ee      	bne.n	4039f8 <_fwalk_reent+0x18>
  403a1a:	6836      	ldr	r6, [r6, #0]
  403a1c:	2e00      	cmp	r6, #0
  403a1e:	d1e7      	bne.n	4039f0 <_fwalk_reent+0x10>
  403a20:	4638      	mov	r0, r7
  403a22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403a26:	4637      	mov	r7, r6
  403a28:	4638      	mov	r0, r7
  403a2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403a2e:	bf00      	nop

00403a30 <iswspace>:
  403a30:	28ff      	cmp	r0, #255	; 0xff
  403a32:	d807      	bhi.n	403a44 <iswspace+0x14>
  403a34:	4b04      	ldr	r3, [pc, #16]	; (403a48 <iswspace+0x18>)
  403a36:	681b      	ldr	r3, [r3, #0]
  403a38:	4418      	add	r0, r3
  403a3a:	7840      	ldrb	r0, [r0, #1]
  403a3c:	f000 0008 	and.w	r0, r0, #8
  403a40:	b2c0      	uxtb	r0, r0
  403a42:	4770      	bx	lr
  403a44:	2000      	movs	r0, #0
  403a46:	4770      	bx	lr
  403a48:	20000434 	.word	0x20000434

00403a4c <__locale_charset>:
  403a4c:	4800      	ldr	r0, [pc, #0]	; (403a50 <__locale_charset+0x4>)
  403a4e:	4770      	bx	lr
  403a50:	20000438 	.word	0x20000438

00403a54 <__locale_mb_cur_max>:
  403a54:	4b01      	ldr	r3, [pc, #4]	; (403a5c <__locale_mb_cur_max+0x8>)
  403a56:	6818      	ldr	r0, [r3, #0]
  403a58:	4770      	bx	lr
  403a5a:	bf00      	nop
  403a5c:	20000458 	.word	0x20000458

00403a60 <__smakebuf_r>:
  403a60:	b5f0      	push	{r4, r5, r6, r7, lr}
  403a62:	898b      	ldrh	r3, [r1, #12]
  403a64:	b29a      	uxth	r2, r3
  403a66:	0796      	lsls	r6, r2, #30
  403a68:	b091      	sub	sp, #68	; 0x44
  403a6a:	460c      	mov	r4, r1
  403a6c:	4605      	mov	r5, r0
  403a6e:	d437      	bmi.n	403ae0 <__smakebuf_r+0x80>
  403a70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403a74:	2900      	cmp	r1, #0
  403a76:	db17      	blt.n	403aa8 <__smakebuf_r+0x48>
  403a78:	aa01      	add	r2, sp, #4
  403a7a:	f001 fc2f 	bl	4052dc <_fstat_r>
  403a7e:	2800      	cmp	r0, #0
  403a80:	db10      	blt.n	403aa4 <__smakebuf_r+0x44>
  403a82:	9b02      	ldr	r3, [sp, #8]
  403a84:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  403a88:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
  403a8c:	424f      	negs	r7, r1
  403a8e:	414f      	adcs	r7, r1
  403a90:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  403a94:	d02c      	beq.n	403af0 <__smakebuf_r+0x90>
  403a96:	89a3      	ldrh	r3, [r4, #12]
  403a98:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  403a9c:	81a3      	strh	r3, [r4, #12]
  403a9e:	f44f 6680 	mov.w	r6, #1024	; 0x400
  403aa2:	e00b      	b.n	403abc <__smakebuf_r+0x5c>
  403aa4:	89a3      	ldrh	r3, [r4, #12]
  403aa6:	b29a      	uxth	r2, r3
  403aa8:	f012 0f80 	tst.w	r2, #128	; 0x80
  403aac:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  403ab0:	81a3      	strh	r3, [r4, #12]
  403ab2:	bf14      	ite	ne
  403ab4:	2640      	movne	r6, #64	; 0x40
  403ab6:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  403aba:	2700      	movs	r7, #0
  403abc:	4628      	mov	r0, r5
  403abe:	4631      	mov	r1, r6
  403ac0:	f000 f83e 	bl	403b40 <_malloc_r>
  403ac4:	89a3      	ldrh	r3, [r4, #12]
  403ac6:	2800      	cmp	r0, #0
  403ac8:	d029      	beq.n	403b1e <__smakebuf_r+0xbe>
  403aca:	4a1b      	ldr	r2, [pc, #108]	; (403b38 <__smakebuf_r+0xd8>)
  403acc:	63ea      	str	r2, [r5, #60]	; 0x3c
  403ace:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403ad2:	81a3      	strh	r3, [r4, #12]
  403ad4:	6020      	str	r0, [r4, #0]
  403ad6:	6120      	str	r0, [r4, #16]
  403ad8:	6166      	str	r6, [r4, #20]
  403ada:	b9a7      	cbnz	r7, 403b06 <__smakebuf_r+0xa6>
  403adc:	b011      	add	sp, #68	; 0x44
  403ade:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403ae0:	f101 0343 	add.w	r3, r1, #67	; 0x43
  403ae4:	2201      	movs	r2, #1
  403ae6:	600b      	str	r3, [r1, #0]
  403ae8:	610b      	str	r3, [r1, #16]
  403aea:	614a      	str	r2, [r1, #20]
  403aec:	b011      	add	sp, #68	; 0x44
  403aee:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403af0:	4a12      	ldr	r2, [pc, #72]	; (403b3c <__smakebuf_r+0xdc>)
  403af2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  403af4:	4293      	cmp	r3, r2
  403af6:	d1ce      	bne.n	403a96 <__smakebuf_r+0x36>
  403af8:	89a3      	ldrh	r3, [r4, #12]
  403afa:	f44f 6680 	mov.w	r6, #1024	; 0x400
  403afe:	4333      	orrs	r3, r6
  403b00:	81a3      	strh	r3, [r4, #12]
  403b02:	64e6      	str	r6, [r4, #76]	; 0x4c
  403b04:	e7da      	b.n	403abc <__smakebuf_r+0x5c>
  403b06:	4628      	mov	r0, r5
  403b08:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403b0c:	f001 fbfa 	bl	405304 <_isatty_r>
  403b10:	2800      	cmp	r0, #0
  403b12:	d0e3      	beq.n	403adc <__smakebuf_r+0x7c>
  403b14:	89a3      	ldrh	r3, [r4, #12]
  403b16:	f043 0301 	orr.w	r3, r3, #1
  403b1a:	81a3      	strh	r3, [r4, #12]
  403b1c:	e7de      	b.n	403adc <__smakebuf_r+0x7c>
  403b1e:	059a      	lsls	r2, r3, #22
  403b20:	d4dc      	bmi.n	403adc <__smakebuf_r+0x7c>
  403b22:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403b26:	f043 0302 	orr.w	r3, r3, #2
  403b2a:	2101      	movs	r1, #1
  403b2c:	81a3      	strh	r3, [r4, #12]
  403b2e:	6022      	str	r2, [r4, #0]
  403b30:	6122      	str	r2, [r4, #16]
  403b32:	6161      	str	r1, [r4, #20]
  403b34:	e7d2      	b.n	403adc <__smakebuf_r+0x7c>
  403b36:	bf00      	nop
  403b38:	004030c1 	.word	0x004030c1
  403b3c:	00404971 	.word	0x00404971

00403b40 <_malloc_r>:
  403b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b44:	f101 050b 	add.w	r5, r1, #11
  403b48:	2d16      	cmp	r5, #22
  403b4a:	b083      	sub	sp, #12
  403b4c:	4606      	mov	r6, r0
  403b4e:	d927      	bls.n	403ba0 <_malloc_r+0x60>
  403b50:	f035 0507 	bics.w	r5, r5, #7
  403b54:	d427      	bmi.n	403ba6 <_malloc_r+0x66>
  403b56:	42a9      	cmp	r1, r5
  403b58:	d825      	bhi.n	403ba6 <_malloc_r+0x66>
  403b5a:	4630      	mov	r0, r6
  403b5c:	f000 fc12 	bl	404384 <__malloc_lock>
  403b60:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  403b64:	d226      	bcs.n	403bb4 <_malloc_r+0x74>
  403b66:	4fc1      	ldr	r7, [pc, #772]	; (403e6c <_malloc_r+0x32c>)
  403b68:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
  403b6c:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
  403b70:	68dc      	ldr	r4, [r3, #12]
  403b72:	429c      	cmp	r4, r3
  403b74:	f000 81d2 	beq.w	403f1c <_malloc_r+0x3dc>
  403b78:	6863      	ldr	r3, [r4, #4]
  403b7a:	68e2      	ldr	r2, [r4, #12]
  403b7c:	68a1      	ldr	r1, [r4, #8]
  403b7e:	f023 0303 	bic.w	r3, r3, #3
  403b82:	4423      	add	r3, r4
  403b84:	4630      	mov	r0, r6
  403b86:	685d      	ldr	r5, [r3, #4]
  403b88:	60ca      	str	r2, [r1, #12]
  403b8a:	f045 0501 	orr.w	r5, r5, #1
  403b8e:	6091      	str	r1, [r2, #8]
  403b90:	605d      	str	r5, [r3, #4]
  403b92:	f000 fbf9 	bl	404388 <__malloc_unlock>
  403b96:	3408      	adds	r4, #8
  403b98:	4620      	mov	r0, r4
  403b9a:	b003      	add	sp, #12
  403b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ba0:	2510      	movs	r5, #16
  403ba2:	42a9      	cmp	r1, r5
  403ba4:	d9d9      	bls.n	403b5a <_malloc_r+0x1a>
  403ba6:	2400      	movs	r4, #0
  403ba8:	230c      	movs	r3, #12
  403baa:	4620      	mov	r0, r4
  403bac:	6033      	str	r3, [r6, #0]
  403bae:	b003      	add	sp, #12
  403bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bb4:	ea5f 2c55 	movs.w	ip, r5, lsr #9
  403bb8:	f000 808a 	beq.w	403cd0 <_malloc_r+0x190>
  403bbc:	f1bc 0f04 	cmp.w	ip, #4
  403bc0:	f200 8160 	bhi.w	403e84 <_malloc_r+0x344>
  403bc4:	ea4f 1c95 	mov.w	ip, r5, lsr #6
  403bc8:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
  403bcc:	ea4f 014c 	mov.w	r1, ip, lsl #1
  403bd0:	4fa6      	ldr	r7, [pc, #664]	; (403e6c <_malloc_r+0x32c>)
  403bd2:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  403bd6:	68cc      	ldr	r4, [r1, #12]
  403bd8:	42a1      	cmp	r1, r4
  403bda:	d105      	bne.n	403be8 <_malloc_r+0xa8>
  403bdc:	e00c      	b.n	403bf8 <_malloc_r+0xb8>
  403bde:	2b00      	cmp	r3, #0
  403be0:	da7a      	bge.n	403cd8 <_malloc_r+0x198>
  403be2:	68e4      	ldr	r4, [r4, #12]
  403be4:	42a1      	cmp	r1, r4
  403be6:	d007      	beq.n	403bf8 <_malloc_r+0xb8>
  403be8:	6862      	ldr	r2, [r4, #4]
  403bea:	f022 0203 	bic.w	r2, r2, #3
  403bee:	1b53      	subs	r3, r2, r5
  403bf0:	2b0f      	cmp	r3, #15
  403bf2:	ddf4      	ble.n	403bde <_malloc_r+0x9e>
  403bf4:	f10c 3cff 	add.w	ip, ip, #4294967295
  403bf8:	f10c 0c01 	add.w	ip, ip, #1
  403bfc:	4b9b      	ldr	r3, [pc, #620]	; (403e6c <_malloc_r+0x32c>)
  403bfe:	693c      	ldr	r4, [r7, #16]
  403c00:	f103 0e08 	add.w	lr, r3, #8
  403c04:	4574      	cmp	r4, lr
  403c06:	f000 817e 	beq.w	403f06 <_malloc_r+0x3c6>
  403c0a:	6861      	ldr	r1, [r4, #4]
  403c0c:	f021 0103 	bic.w	r1, r1, #3
  403c10:	1b4a      	subs	r2, r1, r5
  403c12:	2a0f      	cmp	r2, #15
  403c14:	f300 8164 	bgt.w	403ee0 <_malloc_r+0x3a0>
  403c18:	2a00      	cmp	r2, #0
  403c1a:	f8c3 e014 	str.w	lr, [r3, #20]
  403c1e:	f8c3 e010 	str.w	lr, [r3, #16]
  403c22:	da6a      	bge.n	403cfa <_malloc_r+0x1ba>
  403c24:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  403c28:	f080 813a 	bcs.w	403ea0 <_malloc_r+0x360>
  403c2c:	08c9      	lsrs	r1, r1, #3
  403c2e:	eb03 00c1 	add.w	r0, r3, r1, lsl #3
  403c32:	ea4f 08a1 	mov.w	r8, r1, asr #2
  403c36:	685a      	ldr	r2, [r3, #4]
  403c38:	6881      	ldr	r1, [r0, #8]
  403c3a:	60a1      	str	r1, [r4, #8]
  403c3c:	f04f 0901 	mov.w	r9, #1
  403c40:	fa09 f808 	lsl.w	r8, r9, r8
  403c44:	ea48 0202 	orr.w	r2, r8, r2
  403c48:	60e0      	str	r0, [r4, #12]
  403c4a:	605a      	str	r2, [r3, #4]
  403c4c:	6084      	str	r4, [r0, #8]
  403c4e:	60cc      	str	r4, [r1, #12]
  403c50:	ea4f 03ac 	mov.w	r3, ip, asr #2
  403c54:	2001      	movs	r0, #1
  403c56:	4098      	lsls	r0, r3
  403c58:	4290      	cmp	r0, r2
  403c5a:	d85b      	bhi.n	403d14 <_malloc_r+0x1d4>
  403c5c:	4202      	tst	r2, r0
  403c5e:	d106      	bne.n	403c6e <_malloc_r+0x12e>
  403c60:	f02c 0c03 	bic.w	ip, ip, #3
  403c64:	0040      	lsls	r0, r0, #1
  403c66:	4202      	tst	r2, r0
  403c68:	f10c 0c04 	add.w	ip, ip, #4
  403c6c:	d0fa      	beq.n	403c64 <_malloc_r+0x124>
  403c6e:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
  403c72:	4644      	mov	r4, r8
  403c74:	46e1      	mov	r9, ip
  403c76:	68e3      	ldr	r3, [r4, #12]
  403c78:	429c      	cmp	r4, r3
  403c7a:	d107      	bne.n	403c8c <_malloc_r+0x14c>
  403c7c:	e145      	b.n	403f0a <_malloc_r+0x3ca>
  403c7e:	2a00      	cmp	r2, #0
  403c80:	f280 8156 	bge.w	403f30 <_malloc_r+0x3f0>
  403c84:	68db      	ldr	r3, [r3, #12]
  403c86:	429c      	cmp	r4, r3
  403c88:	f000 813f 	beq.w	403f0a <_malloc_r+0x3ca>
  403c8c:	6859      	ldr	r1, [r3, #4]
  403c8e:	f021 0103 	bic.w	r1, r1, #3
  403c92:	1b4a      	subs	r2, r1, r5
  403c94:	2a0f      	cmp	r2, #15
  403c96:	ddf2      	ble.n	403c7e <_malloc_r+0x13e>
  403c98:	461c      	mov	r4, r3
  403c9a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403c9e:	f854 8f08 	ldr.w	r8, [r4, #8]!
  403ca2:	1959      	adds	r1, r3, r5
  403ca4:	f045 0901 	orr.w	r9, r5, #1
  403ca8:	f042 0501 	orr.w	r5, r2, #1
  403cac:	f8c3 9004 	str.w	r9, [r3, #4]
  403cb0:	4630      	mov	r0, r6
  403cb2:	f8c8 c00c 	str.w	ip, [r8, #12]
  403cb6:	f8cc 8008 	str.w	r8, [ip, #8]
  403cba:	6179      	str	r1, [r7, #20]
  403cbc:	6139      	str	r1, [r7, #16]
  403cbe:	f8c1 e00c 	str.w	lr, [r1, #12]
  403cc2:	f8c1 e008 	str.w	lr, [r1, #8]
  403cc6:	604d      	str	r5, [r1, #4]
  403cc8:	508a      	str	r2, [r1, r2]
  403cca:	f000 fb5d 	bl	404388 <__malloc_unlock>
  403cce:	e763      	b.n	403b98 <_malloc_r+0x58>
  403cd0:	217e      	movs	r1, #126	; 0x7e
  403cd2:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
  403cd6:	e77b      	b.n	403bd0 <_malloc_r+0x90>
  403cd8:	4422      	add	r2, r4
  403cda:	68e3      	ldr	r3, [r4, #12]
  403cdc:	6850      	ldr	r0, [r2, #4]
  403cde:	68a1      	ldr	r1, [r4, #8]
  403ce0:	f040 0501 	orr.w	r5, r0, #1
  403ce4:	60cb      	str	r3, [r1, #12]
  403ce6:	4630      	mov	r0, r6
  403ce8:	6099      	str	r1, [r3, #8]
  403cea:	6055      	str	r5, [r2, #4]
  403cec:	f000 fb4c 	bl	404388 <__malloc_unlock>
  403cf0:	3408      	adds	r4, #8
  403cf2:	4620      	mov	r0, r4
  403cf4:	b003      	add	sp, #12
  403cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cfa:	4421      	add	r1, r4
  403cfc:	4630      	mov	r0, r6
  403cfe:	684b      	ldr	r3, [r1, #4]
  403d00:	f043 0301 	orr.w	r3, r3, #1
  403d04:	604b      	str	r3, [r1, #4]
  403d06:	f000 fb3f 	bl	404388 <__malloc_unlock>
  403d0a:	3408      	adds	r4, #8
  403d0c:	4620      	mov	r0, r4
  403d0e:	b003      	add	sp, #12
  403d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d14:	68bc      	ldr	r4, [r7, #8]
  403d16:	6863      	ldr	r3, [r4, #4]
  403d18:	f023 0903 	bic.w	r9, r3, #3
  403d1c:	45a9      	cmp	r9, r5
  403d1e:	d304      	bcc.n	403d2a <_malloc_r+0x1ea>
  403d20:	ebc5 0309 	rsb	r3, r5, r9
  403d24:	2b0f      	cmp	r3, #15
  403d26:	f300 8091 	bgt.w	403e4c <_malloc_r+0x30c>
  403d2a:	4b51      	ldr	r3, [pc, #324]	; (403e70 <_malloc_r+0x330>)
  403d2c:	4a51      	ldr	r2, [pc, #324]	; (403e74 <_malloc_r+0x334>)
  403d2e:	6819      	ldr	r1, [r3, #0]
  403d30:	6813      	ldr	r3, [r2, #0]
  403d32:	3301      	adds	r3, #1
  403d34:	eb05 0a01 	add.w	sl, r5, r1
  403d38:	eb04 0b09 	add.w	fp, r4, r9
  403d3c:	f000 8161 	beq.w	404002 <_malloc_r+0x4c2>
  403d40:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
  403d44:	f10a 0a0f 	add.w	sl, sl, #15
  403d48:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
  403d4c:	f02a 0a0f 	bic.w	sl, sl, #15
  403d50:	4630      	mov	r0, r6
  403d52:	4651      	mov	r1, sl
  403d54:	9201      	str	r2, [sp, #4]
  403d56:	f000 fd93 	bl	404880 <_sbrk_r>
  403d5a:	f1b0 3fff 	cmp.w	r0, #4294967295
  403d5e:	4680      	mov	r8, r0
  403d60:	9a01      	ldr	r2, [sp, #4]
  403d62:	f000 8100 	beq.w	403f66 <_malloc_r+0x426>
  403d66:	4583      	cmp	fp, r0
  403d68:	f200 80fa 	bhi.w	403f60 <_malloc_r+0x420>
  403d6c:	f8df c110 	ldr.w	ip, [pc, #272]	; 403e80 <_malloc_r+0x340>
  403d70:	f8dc 3000 	ldr.w	r3, [ip]
  403d74:	45c3      	cmp	fp, r8
  403d76:	4453      	add	r3, sl
  403d78:	f8cc 3000 	str.w	r3, [ip]
  403d7c:	f000 814a 	beq.w	404014 <_malloc_r+0x4d4>
  403d80:	6812      	ldr	r2, [r2, #0]
  403d82:	493c      	ldr	r1, [pc, #240]	; (403e74 <_malloc_r+0x334>)
  403d84:	3201      	adds	r2, #1
  403d86:	bf1b      	ittet	ne
  403d88:	ebcb 0b08 	rsbne	fp, fp, r8
  403d8c:	445b      	addne	r3, fp
  403d8e:	f8c1 8000 	streq.w	r8, [r1]
  403d92:	f8cc 3000 	strne.w	r3, [ip]
  403d96:	f018 0307 	ands.w	r3, r8, #7
  403d9a:	f000 8113 	beq.w	403fc4 <_malloc_r+0x484>
  403d9e:	f1c3 0208 	rsb	r2, r3, #8
  403da2:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
  403da6:	4490      	add	r8, r2
  403da8:	3308      	adds	r3, #8
  403daa:	44c2      	add	sl, r8
  403dac:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
  403db0:	ebca 0a03 	rsb	sl, sl, r3
  403db4:	4651      	mov	r1, sl
  403db6:	4630      	mov	r0, r6
  403db8:	f8cd c004 	str.w	ip, [sp, #4]
  403dbc:	f000 fd60 	bl	404880 <_sbrk_r>
  403dc0:	1c43      	adds	r3, r0, #1
  403dc2:	f8dd c004 	ldr.w	ip, [sp, #4]
  403dc6:	f000 8135 	beq.w	404034 <_malloc_r+0x4f4>
  403dca:	ebc8 0200 	rsb	r2, r8, r0
  403dce:	4452      	add	r2, sl
  403dd0:	f042 0201 	orr.w	r2, r2, #1
  403dd4:	f8dc 3000 	ldr.w	r3, [ip]
  403dd8:	f8c7 8008 	str.w	r8, [r7, #8]
  403ddc:	4453      	add	r3, sl
  403dde:	42bc      	cmp	r4, r7
  403de0:	f8c8 2004 	str.w	r2, [r8, #4]
  403de4:	f8cc 3000 	str.w	r3, [ip]
  403de8:	f8df a094 	ldr.w	sl, [pc, #148]	; 403e80 <_malloc_r+0x340>
  403dec:	d015      	beq.n	403e1a <_malloc_r+0x2da>
  403dee:	f1b9 0f0f 	cmp.w	r9, #15
  403df2:	f240 80ea 	bls.w	403fca <_malloc_r+0x48a>
  403df6:	6861      	ldr	r1, [r4, #4]
  403df8:	f1a9 020c 	sub.w	r2, r9, #12
  403dfc:	f022 0207 	bic.w	r2, r2, #7
  403e00:	f001 0e01 	and.w	lr, r1, #1
  403e04:	18a1      	adds	r1, r4, r2
  403e06:	2005      	movs	r0, #5
  403e08:	ea42 0e0e 	orr.w	lr, r2, lr
  403e0c:	2a0f      	cmp	r2, #15
  403e0e:	f8c4 e004 	str.w	lr, [r4, #4]
  403e12:	6048      	str	r0, [r1, #4]
  403e14:	6088      	str	r0, [r1, #8]
  403e16:	f200 8111 	bhi.w	40403c <_malloc_r+0x4fc>
  403e1a:	4a17      	ldr	r2, [pc, #92]	; (403e78 <_malloc_r+0x338>)
  403e1c:	68bc      	ldr	r4, [r7, #8]
  403e1e:	6811      	ldr	r1, [r2, #0]
  403e20:	428b      	cmp	r3, r1
  403e22:	bf88      	it	hi
  403e24:	6013      	strhi	r3, [r2, #0]
  403e26:	4a15      	ldr	r2, [pc, #84]	; (403e7c <_malloc_r+0x33c>)
  403e28:	6811      	ldr	r1, [r2, #0]
  403e2a:	428b      	cmp	r3, r1
  403e2c:	bf88      	it	hi
  403e2e:	6013      	strhi	r3, [r2, #0]
  403e30:	6862      	ldr	r2, [r4, #4]
  403e32:	f022 0203 	bic.w	r2, r2, #3
  403e36:	4295      	cmp	r5, r2
  403e38:	ebc5 0302 	rsb	r3, r5, r2
  403e3c:	d801      	bhi.n	403e42 <_malloc_r+0x302>
  403e3e:	2b0f      	cmp	r3, #15
  403e40:	dc04      	bgt.n	403e4c <_malloc_r+0x30c>
  403e42:	4630      	mov	r0, r6
  403e44:	f000 faa0 	bl	404388 <__malloc_unlock>
  403e48:	2400      	movs	r4, #0
  403e4a:	e6a5      	b.n	403b98 <_malloc_r+0x58>
  403e4c:	1962      	adds	r2, r4, r5
  403e4e:	f043 0301 	orr.w	r3, r3, #1
  403e52:	f045 0501 	orr.w	r5, r5, #1
  403e56:	6065      	str	r5, [r4, #4]
  403e58:	4630      	mov	r0, r6
  403e5a:	60ba      	str	r2, [r7, #8]
  403e5c:	6053      	str	r3, [r2, #4]
  403e5e:	f000 fa93 	bl	404388 <__malloc_unlock>
  403e62:	3408      	adds	r4, #8
  403e64:	4620      	mov	r0, r4
  403e66:	b003      	add	sp, #12
  403e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403e6c:	2000045c 	.word	0x2000045c
  403e70:	20000910 	.word	0x20000910
  403e74:	20000868 	.word	0x20000868
  403e78:	2000090c 	.word	0x2000090c
  403e7c:	20000908 	.word	0x20000908
  403e80:	20000914 	.word	0x20000914
  403e84:	f1bc 0f14 	cmp.w	ip, #20
  403e88:	d961      	bls.n	403f4e <_malloc_r+0x40e>
  403e8a:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
  403e8e:	f200 808f 	bhi.w	403fb0 <_malloc_r+0x470>
  403e92:	ea4f 3c15 	mov.w	ip, r5, lsr #12
  403e96:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
  403e9a:	ea4f 014c 	mov.w	r1, ip, lsl #1
  403e9e:	e697      	b.n	403bd0 <_malloc_r+0x90>
  403ea0:	0a4b      	lsrs	r3, r1, #9
  403ea2:	2b04      	cmp	r3, #4
  403ea4:	d958      	bls.n	403f58 <_malloc_r+0x418>
  403ea6:	2b14      	cmp	r3, #20
  403ea8:	f200 80ae 	bhi.w	404008 <_malloc_r+0x4c8>
  403eac:	f103 025b 	add.w	r2, r3, #91	; 0x5b
  403eb0:	0050      	lsls	r0, r2, #1
  403eb2:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  403eb6:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 404074 <_malloc_r+0x534>
  403eba:	6883      	ldr	r3, [r0, #8]
  403ebc:	4283      	cmp	r3, r0
  403ebe:	f000 808a 	beq.w	403fd6 <_malloc_r+0x496>
  403ec2:	685a      	ldr	r2, [r3, #4]
  403ec4:	f022 0203 	bic.w	r2, r2, #3
  403ec8:	4291      	cmp	r1, r2
  403eca:	d202      	bcs.n	403ed2 <_malloc_r+0x392>
  403ecc:	689b      	ldr	r3, [r3, #8]
  403ece:	4298      	cmp	r0, r3
  403ed0:	d1f7      	bne.n	403ec2 <_malloc_r+0x382>
  403ed2:	68d9      	ldr	r1, [r3, #12]
  403ed4:	687a      	ldr	r2, [r7, #4]
  403ed6:	60e1      	str	r1, [r4, #12]
  403ed8:	60a3      	str	r3, [r4, #8]
  403eda:	608c      	str	r4, [r1, #8]
  403edc:	60dc      	str	r4, [r3, #12]
  403ede:	e6b7      	b.n	403c50 <_malloc_r+0x110>
  403ee0:	1961      	adds	r1, r4, r5
  403ee2:	f042 0701 	orr.w	r7, r2, #1
  403ee6:	f045 0501 	orr.w	r5, r5, #1
  403eea:	6065      	str	r5, [r4, #4]
  403eec:	4630      	mov	r0, r6
  403eee:	6159      	str	r1, [r3, #20]
  403ef0:	6119      	str	r1, [r3, #16]
  403ef2:	f8c1 e00c 	str.w	lr, [r1, #12]
  403ef6:	f8c1 e008 	str.w	lr, [r1, #8]
  403efa:	604f      	str	r7, [r1, #4]
  403efc:	508a      	str	r2, [r1, r2]
  403efe:	3408      	adds	r4, #8
  403f00:	f000 fa42 	bl	404388 <__malloc_unlock>
  403f04:	e648      	b.n	403b98 <_malloc_r+0x58>
  403f06:	685a      	ldr	r2, [r3, #4]
  403f08:	e6a2      	b.n	403c50 <_malloc_r+0x110>
  403f0a:	f109 0901 	add.w	r9, r9, #1
  403f0e:	f019 0f03 	tst.w	r9, #3
  403f12:	f104 0408 	add.w	r4, r4, #8
  403f16:	f47f aeae 	bne.w	403c76 <_malloc_r+0x136>
  403f1a:	e02d      	b.n	403f78 <_malloc_r+0x438>
  403f1c:	f104 0308 	add.w	r3, r4, #8
  403f20:	6964      	ldr	r4, [r4, #20]
  403f22:	42a3      	cmp	r3, r4
  403f24:	bf08      	it	eq
  403f26:	f10c 0c02 	addeq.w	ip, ip, #2
  403f2a:	f43f ae67 	beq.w	403bfc <_malloc_r+0xbc>
  403f2e:	e623      	b.n	403b78 <_malloc_r+0x38>
  403f30:	4419      	add	r1, r3
  403f32:	461c      	mov	r4, r3
  403f34:	6848      	ldr	r0, [r1, #4]
  403f36:	68db      	ldr	r3, [r3, #12]
  403f38:	f854 2f08 	ldr.w	r2, [r4, #8]!
  403f3c:	f040 0501 	orr.w	r5, r0, #1
  403f40:	604d      	str	r5, [r1, #4]
  403f42:	4630      	mov	r0, r6
  403f44:	60d3      	str	r3, [r2, #12]
  403f46:	609a      	str	r2, [r3, #8]
  403f48:	f000 fa1e 	bl	404388 <__malloc_unlock>
  403f4c:	e624      	b.n	403b98 <_malloc_r+0x58>
  403f4e:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
  403f52:	ea4f 014c 	mov.w	r1, ip, lsl #1
  403f56:	e63b      	b.n	403bd0 <_malloc_r+0x90>
  403f58:	098a      	lsrs	r2, r1, #6
  403f5a:	3238      	adds	r2, #56	; 0x38
  403f5c:	0050      	lsls	r0, r2, #1
  403f5e:	e7a8      	b.n	403eb2 <_malloc_r+0x372>
  403f60:	42bc      	cmp	r4, r7
  403f62:	f43f af03 	beq.w	403d6c <_malloc_r+0x22c>
  403f66:	68bc      	ldr	r4, [r7, #8]
  403f68:	6862      	ldr	r2, [r4, #4]
  403f6a:	f022 0203 	bic.w	r2, r2, #3
  403f6e:	e762      	b.n	403e36 <_malloc_r+0x2f6>
  403f70:	f8d8 8000 	ldr.w	r8, [r8]
  403f74:	4598      	cmp	r8, r3
  403f76:	d17b      	bne.n	404070 <_malloc_r+0x530>
  403f78:	f01c 0f03 	tst.w	ip, #3
  403f7c:	f1a8 0308 	sub.w	r3, r8, #8
  403f80:	f10c 3cff 	add.w	ip, ip, #4294967295
  403f84:	d1f4      	bne.n	403f70 <_malloc_r+0x430>
  403f86:	687b      	ldr	r3, [r7, #4]
  403f88:	ea23 0300 	bic.w	r3, r3, r0
  403f8c:	607b      	str	r3, [r7, #4]
  403f8e:	0040      	lsls	r0, r0, #1
  403f90:	4298      	cmp	r0, r3
  403f92:	f63f aebf 	bhi.w	403d14 <_malloc_r+0x1d4>
  403f96:	2800      	cmp	r0, #0
  403f98:	f43f aebc 	beq.w	403d14 <_malloc_r+0x1d4>
  403f9c:	4203      	tst	r3, r0
  403f9e:	46cc      	mov	ip, r9
  403fa0:	f47f ae65 	bne.w	403c6e <_malloc_r+0x12e>
  403fa4:	0040      	lsls	r0, r0, #1
  403fa6:	4203      	tst	r3, r0
  403fa8:	f10c 0c04 	add.w	ip, ip, #4
  403fac:	d0fa      	beq.n	403fa4 <_malloc_r+0x464>
  403fae:	e65e      	b.n	403c6e <_malloc_r+0x12e>
  403fb0:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
  403fb4:	d81a      	bhi.n	403fec <_malloc_r+0x4ac>
  403fb6:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
  403fba:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
  403fbe:	ea4f 014c 	mov.w	r1, ip, lsl #1
  403fc2:	e605      	b.n	403bd0 <_malloc_r+0x90>
  403fc4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  403fc8:	e6ef      	b.n	403daa <_malloc_r+0x26a>
  403fca:	2301      	movs	r3, #1
  403fcc:	f8c8 3004 	str.w	r3, [r8, #4]
  403fd0:	4644      	mov	r4, r8
  403fd2:	2200      	movs	r2, #0
  403fd4:	e72f      	b.n	403e36 <_malloc_r+0x2f6>
  403fd6:	1091      	asrs	r1, r2, #2
  403fd8:	2001      	movs	r0, #1
  403fda:	f8d8 2004 	ldr.w	r2, [r8, #4]
  403fde:	fa00 f101 	lsl.w	r1, r0, r1
  403fe2:	430a      	orrs	r2, r1
  403fe4:	f8c8 2004 	str.w	r2, [r8, #4]
  403fe8:	4619      	mov	r1, r3
  403fea:	e774      	b.n	403ed6 <_malloc_r+0x396>
  403fec:	f240 5354 	movw	r3, #1364	; 0x554
  403ff0:	459c      	cmp	ip, r3
  403ff2:	d81b      	bhi.n	40402c <_malloc_r+0x4ec>
  403ff4:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  403ff8:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
  403ffc:	ea4f 014c 	mov.w	r1, ip, lsl #1
  404000:	e5e6      	b.n	403bd0 <_malloc_r+0x90>
  404002:	f10a 0a10 	add.w	sl, sl, #16
  404006:	e6a3      	b.n	403d50 <_malloc_r+0x210>
  404008:	2b54      	cmp	r3, #84	; 0x54
  40400a:	d81f      	bhi.n	40404c <_malloc_r+0x50c>
  40400c:	0b0a      	lsrs	r2, r1, #12
  40400e:	326e      	adds	r2, #110	; 0x6e
  404010:	0050      	lsls	r0, r2, #1
  404012:	e74e      	b.n	403eb2 <_malloc_r+0x372>
  404014:	f3cb 010b 	ubfx	r1, fp, #0, #12
  404018:	2900      	cmp	r1, #0
  40401a:	f47f aeb1 	bne.w	403d80 <_malloc_r+0x240>
  40401e:	eb0a 0109 	add.w	r1, sl, r9
  404022:	68ba      	ldr	r2, [r7, #8]
  404024:	f041 0101 	orr.w	r1, r1, #1
  404028:	6051      	str	r1, [r2, #4]
  40402a:	e6f6      	b.n	403e1a <_malloc_r+0x2da>
  40402c:	21fc      	movs	r1, #252	; 0xfc
  40402e:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
  404032:	e5cd      	b.n	403bd0 <_malloc_r+0x90>
  404034:	2201      	movs	r2, #1
  404036:	f04f 0a00 	mov.w	sl, #0
  40403a:	e6cb      	b.n	403dd4 <_malloc_r+0x294>
  40403c:	f104 0108 	add.w	r1, r4, #8
  404040:	4630      	mov	r0, r6
  404042:	f7ff fa4d 	bl	4034e0 <_free_r>
  404046:	f8da 3000 	ldr.w	r3, [sl]
  40404a:	e6e6      	b.n	403e1a <_malloc_r+0x2da>
  40404c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404050:	d803      	bhi.n	40405a <_malloc_r+0x51a>
  404052:	0bca      	lsrs	r2, r1, #15
  404054:	3277      	adds	r2, #119	; 0x77
  404056:	0050      	lsls	r0, r2, #1
  404058:	e72b      	b.n	403eb2 <_malloc_r+0x372>
  40405a:	f240 5254 	movw	r2, #1364	; 0x554
  40405e:	4293      	cmp	r3, r2
  404060:	d803      	bhi.n	40406a <_malloc_r+0x52a>
  404062:	0c8a      	lsrs	r2, r1, #18
  404064:	327c      	adds	r2, #124	; 0x7c
  404066:	0050      	lsls	r0, r2, #1
  404068:	e723      	b.n	403eb2 <_malloc_r+0x372>
  40406a:	20fc      	movs	r0, #252	; 0xfc
  40406c:	227e      	movs	r2, #126	; 0x7e
  40406e:	e720      	b.n	403eb2 <_malloc_r+0x372>
  404070:	687b      	ldr	r3, [r7, #4]
  404072:	e78c      	b.n	403f8e <_malloc_r+0x44e>
  404074:	2000045c 	.word	0x2000045c

00404078 <_mbrtowc_r>:
  404078:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40407c:	b083      	sub	sp, #12
  40407e:	461f      	mov	r7, r3
  404080:	4614      	mov	r4, r2
  404082:	4605      	mov	r5, r0
  404084:	4688      	mov	r8, r1
  404086:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  404088:	4b10      	ldr	r3, [pc, #64]	; (4040cc <_mbrtowc_r+0x54>)
  40408a:	b19a      	cbz	r2, 4040b4 <_mbrtowc_r+0x3c>
  40408c:	f8d3 9000 	ldr.w	r9, [r3]
  404090:	f7ff fcdc 	bl	403a4c <__locale_charset>
  404094:	4641      	mov	r1, r8
  404096:	e88d 0041 	stmia.w	sp, {r0, r6}
  40409a:	4622      	mov	r2, r4
  40409c:	463b      	mov	r3, r7
  40409e:	4628      	mov	r0, r5
  4040a0:	47c8      	blx	r9
  4040a2:	1c43      	adds	r3, r0, #1
  4040a4:	d103      	bne.n	4040ae <_mbrtowc_r+0x36>
  4040a6:	2200      	movs	r2, #0
  4040a8:	238a      	movs	r3, #138	; 0x8a
  4040aa:	6032      	str	r2, [r6, #0]
  4040ac:	602b      	str	r3, [r5, #0]
  4040ae:	b003      	add	sp, #12
  4040b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4040b4:	681f      	ldr	r7, [r3, #0]
  4040b6:	f7ff fcc9 	bl	403a4c <__locale_charset>
  4040ba:	4621      	mov	r1, r4
  4040bc:	e88d 0041 	stmia.w	sp, {r0, r6}
  4040c0:	4a03      	ldr	r2, [pc, #12]	; (4040d0 <_mbrtowc_r+0x58>)
  4040c2:	4628      	mov	r0, r5
  4040c4:	2301      	movs	r3, #1
  4040c6:	47b8      	blx	r7
  4040c8:	e7eb      	b.n	4040a2 <_mbrtowc_r+0x2a>
  4040ca:	bf00      	nop
  4040cc:	2000086c 	.word	0x2000086c
  4040d0:	00405438 	.word	0x00405438

004040d4 <__ascii_mbtowc>:
  4040d4:	b082      	sub	sp, #8
  4040d6:	b149      	cbz	r1, 4040ec <__ascii_mbtowc+0x18>
  4040d8:	b15a      	cbz	r2, 4040f2 <__ascii_mbtowc+0x1e>
  4040da:	b16b      	cbz	r3, 4040f8 <__ascii_mbtowc+0x24>
  4040dc:	7813      	ldrb	r3, [r2, #0]
  4040de:	600b      	str	r3, [r1, #0]
  4040e0:	7810      	ldrb	r0, [r2, #0]
  4040e2:	3000      	adds	r0, #0
  4040e4:	bf18      	it	ne
  4040e6:	2001      	movne	r0, #1
  4040e8:	b002      	add	sp, #8
  4040ea:	4770      	bx	lr
  4040ec:	a901      	add	r1, sp, #4
  4040ee:	2a00      	cmp	r2, #0
  4040f0:	d1f3      	bne.n	4040da <__ascii_mbtowc+0x6>
  4040f2:	4610      	mov	r0, r2
  4040f4:	b002      	add	sp, #8
  4040f6:	4770      	bx	lr
  4040f8:	f06f 0001 	mvn.w	r0, #1
  4040fc:	e7f4      	b.n	4040e8 <__ascii_mbtowc+0x14>
  4040fe:	bf00      	nop

00404100 <memchr>:
  404100:	0783      	lsls	r3, r0, #30
  404102:	b470      	push	{r4, r5, r6}
  404104:	b2c9      	uxtb	r1, r1
  404106:	d03f      	beq.n	404188 <memchr+0x88>
  404108:	1e54      	subs	r4, r2, #1
  40410a:	b32a      	cbz	r2, 404158 <memchr+0x58>
  40410c:	7803      	ldrb	r3, [r0, #0]
  40410e:	428b      	cmp	r3, r1
  404110:	d023      	beq.n	40415a <memchr+0x5a>
  404112:	1c43      	adds	r3, r0, #1
  404114:	e004      	b.n	404120 <memchr+0x20>
  404116:	b1fc      	cbz	r4, 404158 <memchr+0x58>
  404118:	7804      	ldrb	r4, [r0, #0]
  40411a:	428c      	cmp	r4, r1
  40411c:	d01d      	beq.n	40415a <memchr+0x5a>
  40411e:	4614      	mov	r4, r2
  404120:	f013 0f03 	tst.w	r3, #3
  404124:	4618      	mov	r0, r3
  404126:	f104 32ff 	add.w	r2, r4, #4294967295
  40412a:	f103 0301 	add.w	r3, r3, #1
  40412e:	d1f2      	bne.n	404116 <memchr+0x16>
  404130:	2c03      	cmp	r4, #3
  404132:	d814      	bhi.n	40415e <memchr+0x5e>
  404134:	1e65      	subs	r5, r4, #1
  404136:	b34c      	cbz	r4, 40418c <memchr+0x8c>
  404138:	7803      	ldrb	r3, [r0, #0]
  40413a:	428b      	cmp	r3, r1
  40413c:	d00d      	beq.n	40415a <memchr+0x5a>
  40413e:	1c42      	adds	r2, r0, #1
  404140:	2300      	movs	r3, #0
  404142:	e002      	b.n	40414a <memchr+0x4a>
  404144:	7804      	ldrb	r4, [r0, #0]
  404146:	428c      	cmp	r4, r1
  404148:	d007      	beq.n	40415a <memchr+0x5a>
  40414a:	42ab      	cmp	r3, r5
  40414c:	4610      	mov	r0, r2
  40414e:	f103 0301 	add.w	r3, r3, #1
  404152:	f102 0201 	add.w	r2, r2, #1
  404156:	d1f5      	bne.n	404144 <memchr+0x44>
  404158:	2000      	movs	r0, #0
  40415a:	bc70      	pop	{r4, r5, r6}
  40415c:	4770      	bx	lr
  40415e:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  404162:	4603      	mov	r3, r0
  404164:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  404168:	4618      	mov	r0, r3
  40416a:	3304      	adds	r3, #4
  40416c:	6802      	ldr	r2, [r0, #0]
  40416e:	4072      	eors	r2, r6
  404170:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
  404174:	ea25 0202 	bic.w	r2, r5, r2
  404178:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40417c:	d1da      	bne.n	404134 <memchr+0x34>
  40417e:	3c04      	subs	r4, #4
  404180:	2c03      	cmp	r4, #3
  404182:	4618      	mov	r0, r3
  404184:	d8f0      	bhi.n	404168 <memchr+0x68>
  404186:	e7d5      	b.n	404134 <memchr+0x34>
  404188:	4614      	mov	r4, r2
  40418a:	e7d1      	b.n	404130 <memchr+0x30>
  40418c:	4620      	mov	r0, r4
  40418e:	e7e4      	b.n	40415a <memchr+0x5a>

00404190 <memcpy>:
  404190:	4684      	mov	ip, r0
  404192:	ea41 0300 	orr.w	r3, r1, r0
  404196:	f013 0303 	ands.w	r3, r3, #3
  40419a:	d16d      	bne.n	404278 <memcpy+0xe8>
  40419c:	3a40      	subs	r2, #64	; 0x40
  40419e:	d341      	bcc.n	404224 <memcpy+0x94>
  4041a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041a4:	f840 3b04 	str.w	r3, [r0], #4
  4041a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041ac:	f840 3b04 	str.w	r3, [r0], #4
  4041b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041b4:	f840 3b04 	str.w	r3, [r0], #4
  4041b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041bc:	f840 3b04 	str.w	r3, [r0], #4
  4041c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041c4:	f840 3b04 	str.w	r3, [r0], #4
  4041c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041cc:	f840 3b04 	str.w	r3, [r0], #4
  4041d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041d4:	f840 3b04 	str.w	r3, [r0], #4
  4041d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041dc:	f840 3b04 	str.w	r3, [r0], #4
  4041e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041e4:	f840 3b04 	str.w	r3, [r0], #4
  4041e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041ec:	f840 3b04 	str.w	r3, [r0], #4
  4041f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4041f4:	f840 3b04 	str.w	r3, [r0], #4
  4041f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4041fc:	f840 3b04 	str.w	r3, [r0], #4
  404200:	f851 3b04 	ldr.w	r3, [r1], #4
  404204:	f840 3b04 	str.w	r3, [r0], #4
  404208:	f851 3b04 	ldr.w	r3, [r1], #4
  40420c:	f840 3b04 	str.w	r3, [r0], #4
  404210:	f851 3b04 	ldr.w	r3, [r1], #4
  404214:	f840 3b04 	str.w	r3, [r0], #4
  404218:	f851 3b04 	ldr.w	r3, [r1], #4
  40421c:	f840 3b04 	str.w	r3, [r0], #4
  404220:	3a40      	subs	r2, #64	; 0x40
  404222:	d2bd      	bcs.n	4041a0 <memcpy+0x10>
  404224:	3230      	adds	r2, #48	; 0x30
  404226:	d311      	bcc.n	40424c <memcpy+0xbc>
  404228:	f851 3b04 	ldr.w	r3, [r1], #4
  40422c:	f840 3b04 	str.w	r3, [r0], #4
  404230:	f851 3b04 	ldr.w	r3, [r1], #4
  404234:	f840 3b04 	str.w	r3, [r0], #4
  404238:	f851 3b04 	ldr.w	r3, [r1], #4
  40423c:	f840 3b04 	str.w	r3, [r0], #4
  404240:	f851 3b04 	ldr.w	r3, [r1], #4
  404244:	f840 3b04 	str.w	r3, [r0], #4
  404248:	3a10      	subs	r2, #16
  40424a:	d2ed      	bcs.n	404228 <memcpy+0x98>
  40424c:	320c      	adds	r2, #12
  40424e:	d305      	bcc.n	40425c <memcpy+0xcc>
  404250:	f851 3b04 	ldr.w	r3, [r1], #4
  404254:	f840 3b04 	str.w	r3, [r0], #4
  404258:	3a04      	subs	r2, #4
  40425a:	d2f9      	bcs.n	404250 <memcpy+0xc0>
  40425c:	3204      	adds	r2, #4
  40425e:	d008      	beq.n	404272 <memcpy+0xe2>
  404260:	07d2      	lsls	r2, r2, #31
  404262:	bf1c      	itt	ne
  404264:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404268:	f800 3b01 	strbne.w	r3, [r0], #1
  40426c:	d301      	bcc.n	404272 <memcpy+0xe2>
  40426e:	880b      	ldrh	r3, [r1, #0]
  404270:	8003      	strh	r3, [r0, #0]
  404272:	4660      	mov	r0, ip
  404274:	4770      	bx	lr
  404276:	bf00      	nop
  404278:	2a08      	cmp	r2, #8
  40427a:	d313      	bcc.n	4042a4 <memcpy+0x114>
  40427c:	078b      	lsls	r3, r1, #30
  40427e:	d08d      	beq.n	40419c <memcpy+0xc>
  404280:	f010 0303 	ands.w	r3, r0, #3
  404284:	d08a      	beq.n	40419c <memcpy+0xc>
  404286:	f1c3 0304 	rsb	r3, r3, #4
  40428a:	1ad2      	subs	r2, r2, r3
  40428c:	07db      	lsls	r3, r3, #31
  40428e:	bf1c      	itt	ne
  404290:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404294:	f800 3b01 	strbne.w	r3, [r0], #1
  404298:	d380      	bcc.n	40419c <memcpy+0xc>
  40429a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40429e:	f820 3b02 	strh.w	r3, [r0], #2
  4042a2:	e77b      	b.n	40419c <memcpy+0xc>
  4042a4:	3a04      	subs	r2, #4
  4042a6:	d3d9      	bcc.n	40425c <memcpy+0xcc>
  4042a8:	3a01      	subs	r2, #1
  4042aa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4042ae:	f800 3b01 	strb.w	r3, [r0], #1
  4042b2:	d2f9      	bcs.n	4042a8 <memcpy+0x118>
  4042b4:	780b      	ldrb	r3, [r1, #0]
  4042b6:	7003      	strb	r3, [r0, #0]
  4042b8:	784b      	ldrb	r3, [r1, #1]
  4042ba:	7043      	strb	r3, [r0, #1]
  4042bc:	788b      	ldrb	r3, [r1, #2]
  4042be:	7083      	strb	r3, [r0, #2]
  4042c0:	4660      	mov	r0, ip
  4042c2:	4770      	bx	lr

004042c4 <memmove>:
  4042c4:	4288      	cmp	r0, r1
  4042c6:	b4f0      	push	{r4, r5, r6, r7}
  4042c8:	d910      	bls.n	4042ec <memmove+0x28>
  4042ca:	188c      	adds	r4, r1, r2
  4042cc:	42a0      	cmp	r0, r4
  4042ce:	d20d      	bcs.n	4042ec <memmove+0x28>
  4042d0:	1885      	adds	r5, r0, r2
  4042d2:	1e53      	subs	r3, r2, #1
  4042d4:	b142      	cbz	r2, 4042e8 <memmove+0x24>
  4042d6:	4621      	mov	r1, r4
  4042d8:	462a      	mov	r2, r5
  4042da:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
  4042de:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4042e2:	3b01      	subs	r3, #1
  4042e4:	1c5c      	adds	r4, r3, #1
  4042e6:	d1f8      	bne.n	4042da <memmove+0x16>
  4042e8:	bcf0      	pop	{r4, r5, r6, r7}
  4042ea:	4770      	bx	lr
  4042ec:	2a0f      	cmp	r2, #15
  4042ee:	d93f      	bls.n	404370 <memmove+0xac>
  4042f0:	ea40 0301 	orr.w	r3, r0, r1
  4042f4:	079b      	lsls	r3, r3, #30
  4042f6:	d13f      	bne.n	404378 <memmove+0xb4>
  4042f8:	f1a2 0710 	sub.w	r7, r2, #16
  4042fc:	093f      	lsrs	r7, r7, #4
  4042fe:	eb00 1607 	add.w	r6, r0, r7, lsl #4
  404302:	3610      	adds	r6, #16
  404304:	460c      	mov	r4, r1
  404306:	4603      	mov	r3, r0
  404308:	6825      	ldr	r5, [r4, #0]
  40430a:	601d      	str	r5, [r3, #0]
  40430c:	6865      	ldr	r5, [r4, #4]
  40430e:	605d      	str	r5, [r3, #4]
  404310:	68a5      	ldr	r5, [r4, #8]
  404312:	609d      	str	r5, [r3, #8]
  404314:	68e5      	ldr	r5, [r4, #12]
  404316:	60dd      	str	r5, [r3, #12]
  404318:	3310      	adds	r3, #16
  40431a:	42b3      	cmp	r3, r6
  40431c:	f104 0410 	add.w	r4, r4, #16
  404320:	d1f2      	bne.n	404308 <memmove+0x44>
  404322:	1c7b      	adds	r3, r7, #1
  404324:	f002 0c0f 	and.w	ip, r2, #15
  404328:	011b      	lsls	r3, r3, #4
  40432a:	f1bc 0f03 	cmp.w	ip, #3
  40432e:	4419      	add	r1, r3
  404330:	4403      	add	r3, r0
  404332:	d923      	bls.n	40437c <memmove+0xb8>
  404334:	460e      	mov	r6, r1
  404336:	461d      	mov	r5, r3
  404338:	4664      	mov	r4, ip
  40433a:	3c04      	subs	r4, #4
  40433c:	f856 7b04 	ldr.w	r7, [r6], #4
  404340:	f845 7b04 	str.w	r7, [r5], #4
  404344:	2c03      	cmp	r4, #3
  404346:	d8f8      	bhi.n	40433a <memmove+0x76>
  404348:	f1ac 0404 	sub.w	r4, ip, #4
  40434c:	f024 0403 	bic.w	r4, r4, #3
  404350:	3404      	adds	r4, #4
  404352:	f002 0203 	and.w	r2, r2, #3
  404356:	4423      	add	r3, r4
  404358:	4421      	add	r1, r4
  40435a:	2a00      	cmp	r2, #0
  40435c:	d0c4      	beq.n	4042e8 <memmove+0x24>
  40435e:	441a      	add	r2, r3
  404360:	f811 4b01 	ldrb.w	r4, [r1], #1
  404364:	f803 4b01 	strb.w	r4, [r3], #1
  404368:	4293      	cmp	r3, r2
  40436a:	d1f9      	bne.n	404360 <memmove+0x9c>
  40436c:	bcf0      	pop	{r4, r5, r6, r7}
  40436e:	4770      	bx	lr
  404370:	4603      	mov	r3, r0
  404372:	2a00      	cmp	r2, #0
  404374:	d1f3      	bne.n	40435e <memmove+0x9a>
  404376:	e7b7      	b.n	4042e8 <memmove+0x24>
  404378:	4603      	mov	r3, r0
  40437a:	e7f0      	b.n	40435e <memmove+0x9a>
  40437c:	4662      	mov	r2, ip
  40437e:	2a00      	cmp	r2, #0
  404380:	d1ed      	bne.n	40435e <memmove+0x9a>
  404382:	e7b1      	b.n	4042e8 <memmove+0x24>

00404384 <__malloc_lock>:
  404384:	4770      	bx	lr
  404386:	bf00      	nop

00404388 <__malloc_unlock>:
  404388:	4770      	bx	lr
  40438a:	bf00      	nop

0040438c <_realloc_r>:
  40438c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404390:	460c      	mov	r4, r1
  404392:	b083      	sub	sp, #12
  404394:	4690      	mov	r8, r2
  404396:	4681      	mov	r9, r0
  404398:	2900      	cmp	r1, #0
  40439a:	f000 80e2 	beq.w	404562 <_realloc_r+0x1d6>
  40439e:	f7ff fff1 	bl	404384 <__malloc_lock>
  4043a2:	f108 060b 	add.w	r6, r8, #11
  4043a6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4043aa:	2e16      	cmp	r6, #22
  4043ac:	f023 0503 	bic.w	r5, r3, #3
  4043b0:	f1a4 0708 	sub.w	r7, r4, #8
  4043b4:	d84b      	bhi.n	40444e <_realloc_r+0xc2>
  4043b6:	2110      	movs	r1, #16
  4043b8:	460e      	mov	r6, r1
  4043ba:	45b0      	cmp	r8, r6
  4043bc:	d84c      	bhi.n	404458 <_realloc_r+0xcc>
  4043be:	428d      	cmp	r5, r1
  4043c0:	da78      	bge.n	4044b4 <_realloc_r+0x128>
  4043c2:	f8df b390 	ldr.w	fp, [pc, #912]	; 404754 <_realloc_r+0x3c8>
  4043c6:	f8db e008 	ldr.w	lr, [fp, #8]
  4043ca:	1978      	adds	r0, r7, r5
  4043cc:	4586      	cmp	lr, r0
  4043ce:	f000 80ce 	beq.w	40456e <_realloc_r+0x1e2>
  4043d2:	6842      	ldr	r2, [r0, #4]
  4043d4:	f022 0c01 	bic.w	ip, r2, #1
  4043d8:	4484      	add	ip, r0
  4043da:	f8dc c004 	ldr.w	ip, [ip, #4]
  4043de:	f01c 0f01 	tst.w	ip, #1
  4043e2:	d07a      	beq.n	4044da <_realloc_r+0x14e>
  4043e4:	2200      	movs	r2, #0
  4043e6:	4610      	mov	r0, r2
  4043e8:	07db      	lsls	r3, r3, #31
  4043ea:	f100 8092 	bmi.w	404512 <_realloc_r+0x186>
  4043ee:	f854 3c08 	ldr.w	r3, [r4, #-8]
  4043f2:	ebc3 0a07 	rsb	sl, r3, r7
  4043f6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4043fa:	f023 0303 	bic.w	r3, r3, #3
  4043fe:	442b      	add	r3, r5
  404400:	b388      	cbz	r0, 404466 <_realloc_r+0xda>
  404402:	4570      	cmp	r0, lr
  404404:	f000 80ed 	beq.w	4045e2 <_realloc_r+0x256>
  404408:	eb02 0e03 	add.w	lr, r2, r3
  40440c:	458e      	cmp	lr, r1
  40440e:	db2a      	blt.n	404466 <_realloc_r+0xda>
  404410:	68c3      	ldr	r3, [r0, #12]
  404412:	6882      	ldr	r2, [r0, #8]
  404414:	4657      	mov	r7, sl
  404416:	60d3      	str	r3, [r2, #12]
  404418:	609a      	str	r2, [r3, #8]
  40441a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  40441e:	f8da 300c 	ldr.w	r3, [sl, #12]
  404422:	60cb      	str	r3, [r1, #12]
  404424:	1f2a      	subs	r2, r5, #4
  404426:	2a24      	cmp	r2, #36	; 0x24
  404428:	6099      	str	r1, [r3, #8]
  40442a:	f200 8126 	bhi.w	40467a <_realloc_r+0x2ee>
  40442e:	2a13      	cmp	r2, #19
  404430:	f240 80b3 	bls.w	40459a <_realloc_r+0x20e>
  404434:	6823      	ldr	r3, [r4, #0]
  404436:	f8ca 3008 	str.w	r3, [sl, #8]
  40443a:	6863      	ldr	r3, [r4, #4]
  40443c:	f8ca 300c 	str.w	r3, [sl, #12]
  404440:	2a1b      	cmp	r2, #27
  404442:	f200 8130 	bhi.w	4046a6 <_realloc_r+0x31a>
  404446:	3408      	adds	r4, #8
  404448:	f10a 0310 	add.w	r3, sl, #16
  40444c:	e0a6      	b.n	40459c <_realloc_r+0x210>
  40444e:	f026 0607 	bic.w	r6, r6, #7
  404452:	2e00      	cmp	r6, #0
  404454:	4631      	mov	r1, r6
  404456:	dab0      	bge.n	4043ba <_realloc_r+0x2e>
  404458:	230c      	movs	r3, #12
  40445a:	2000      	movs	r0, #0
  40445c:	f8c9 3000 	str.w	r3, [r9]
  404460:	b003      	add	sp, #12
  404462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404466:	428b      	cmp	r3, r1
  404468:	db53      	blt.n	404512 <_realloc_r+0x186>
  40446a:	4657      	mov	r7, sl
  40446c:	f8da 100c 	ldr.w	r1, [sl, #12]
  404470:	f857 0f08 	ldr.w	r0, [r7, #8]!
  404474:	1f2a      	subs	r2, r5, #4
  404476:	2a24      	cmp	r2, #36	; 0x24
  404478:	60c1      	str	r1, [r0, #12]
  40447a:	6088      	str	r0, [r1, #8]
  40447c:	f200 8109 	bhi.w	404692 <_realloc_r+0x306>
  404480:	2a13      	cmp	r2, #19
  404482:	f240 8104 	bls.w	40468e <_realloc_r+0x302>
  404486:	6821      	ldr	r1, [r4, #0]
  404488:	f8ca 1008 	str.w	r1, [sl, #8]
  40448c:	6861      	ldr	r1, [r4, #4]
  40448e:	f8ca 100c 	str.w	r1, [sl, #12]
  404492:	2a1b      	cmp	r2, #27
  404494:	f200 811c 	bhi.w	4046d0 <_realloc_r+0x344>
  404498:	3408      	adds	r4, #8
  40449a:	f10a 0210 	add.w	r2, sl, #16
  40449e:	6821      	ldr	r1, [r4, #0]
  4044a0:	6011      	str	r1, [r2, #0]
  4044a2:	6861      	ldr	r1, [r4, #4]
  4044a4:	6051      	str	r1, [r2, #4]
  4044a6:	68a1      	ldr	r1, [r4, #8]
  4044a8:	6091      	str	r1, [r2, #8]
  4044aa:	461d      	mov	r5, r3
  4044ac:	f8da 3004 	ldr.w	r3, [sl, #4]
  4044b0:	463c      	mov	r4, r7
  4044b2:	4657      	mov	r7, sl
  4044b4:	1baa      	subs	r2, r5, r6
  4044b6:	2a0f      	cmp	r2, #15
  4044b8:	f003 0301 	and.w	r3, r3, #1
  4044bc:	d819      	bhi.n	4044f2 <_realloc_r+0x166>
  4044be:	432b      	orrs	r3, r5
  4044c0:	443d      	add	r5, r7
  4044c2:	607b      	str	r3, [r7, #4]
  4044c4:	686b      	ldr	r3, [r5, #4]
  4044c6:	f043 0301 	orr.w	r3, r3, #1
  4044ca:	606b      	str	r3, [r5, #4]
  4044cc:	4648      	mov	r0, r9
  4044ce:	f7ff ff5b 	bl	404388 <__malloc_unlock>
  4044d2:	4620      	mov	r0, r4
  4044d4:	b003      	add	sp, #12
  4044d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044da:	f022 0203 	bic.w	r2, r2, #3
  4044de:	eb02 0c05 	add.w	ip, r2, r5
  4044e2:	458c      	cmp	ip, r1
  4044e4:	db80      	blt.n	4043e8 <_realloc_r+0x5c>
  4044e6:	68c2      	ldr	r2, [r0, #12]
  4044e8:	6881      	ldr	r1, [r0, #8]
  4044ea:	4665      	mov	r5, ip
  4044ec:	60ca      	str	r2, [r1, #12]
  4044ee:	6091      	str	r1, [r2, #8]
  4044f0:	e7e0      	b.n	4044b4 <_realloc_r+0x128>
  4044f2:	19b9      	adds	r1, r7, r6
  4044f4:	f042 0001 	orr.w	r0, r2, #1
  4044f8:	431e      	orrs	r6, r3
  4044fa:	440a      	add	r2, r1
  4044fc:	607e      	str	r6, [r7, #4]
  4044fe:	6048      	str	r0, [r1, #4]
  404500:	6853      	ldr	r3, [r2, #4]
  404502:	f043 0301 	orr.w	r3, r3, #1
  404506:	3108      	adds	r1, #8
  404508:	6053      	str	r3, [r2, #4]
  40450a:	4648      	mov	r0, r9
  40450c:	f7fe ffe8 	bl	4034e0 <_free_r>
  404510:	e7dc      	b.n	4044cc <_realloc_r+0x140>
  404512:	4641      	mov	r1, r8
  404514:	4648      	mov	r0, r9
  404516:	f7ff fb13 	bl	403b40 <_malloc_r>
  40451a:	4680      	mov	r8, r0
  40451c:	b1d0      	cbz	r0, 404554 <_realloc_r+0x1c8>
  40451e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  404522:	f023 0201 	bic.w	r2, r3, #1
  404526:	443a      	add	r2, r7
  404528:	f1a0 0108 	sub.w	r1, r0, #8
  40452c:	4291      	cmp	r1, r2
  40452e:	f000 809e 	beq.w	40466e <_realloc_r+0x2e2>
  404532:	1f2a      	subs	r2, r5, #4
  404534:	2a24      	cmp	r2, #36	; 0x24
  404536:	d850      	bhi.n	4045da <_realloc_r+0x24e>
  404538:	2a13      	cmp	r2, #19
  40453a:	d823      	bhi.n	404584 <_realloc_r+0x1f8>
  40453c:	4603      	mov	r3, r0
  40453e:	4622      	mov	r2, r4
  404540:	6811      	ldr	r1, [r2, #0]
  404542:	6019      	str	r1, [r3, #0]
  404544:	6851      	ldr	r1, [r2, #4]
  404546:	6059      	str	r1, [r3, #4]
  404548:	6892      	ldr	r2, [r2, #8]
  40454a:	609a      	str	r2, [r3, #8]
  40454c:	4621      	mov	r1, r4
  40454e:	4648      	mov	r0, r9
  404550:	f7fe ffc6 	bl	4034e0 <_free_r>
  404554:	4648      	mov	r0, r9
  404556:	f7ff ff17 	bl	404388 <__malloc_unlock>
  40455a:	4640      	mov	r0, r8
  40455c:	b003      	add	sp, #12
  40455e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404562:	4611      	mov	r1, r2
  404564:	b003      	add	sp, #12
  404566:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40456a:	f7ff bae9 	b.w	403b40 <_malloc_r>
  40456e:	f8de 2004 	ldr.w	r2, [lr, #4]
  404572:	f022 0203 	bic.w	r2, r2, #3
  404576:	1950      	adds	r0, r2, r5
  404578:	f106 0c10 	add.w	ip, r6, #16
  40457c:	4560      	cmp	r0, ip
  40457e:	da19      	bge.n	4045b4 <_realloc_r+0x228>
  404580:	4670      	mov	r0, lr
  404582:	e731      	b.n	4043e8 <_realloc_r+0x5c>
  404584:	6823      	ldr	r3, [r4, #0]
  404586:	6003      	str	r3, [r0, #0]
  404588:	6863      	ldr	r3, [r4, #4]
  40458a:	6043      	str	r3, [r0, #4]
  40458c:	2a1b      	cmp	r2, #27
  40458e:	d863      	bhi.n	404658 <_realloc_r+0x2cc>
  404590:	f100 0308 	add.w	r3, r0, #8
  404594:	f104 0208 	add.w	r2, r4, #8
  404598:	e7d2      	b.n	404540 <_realloc_r+0x1b4>
  40459a:	463b      	mov	r3, r7
  40459c:	6822      	ldr	r2, [r4, #0]
  40459e:	601a      	str	r2, [r3, #0]
  4045a0:	6862      	ldr	r2, [r4, #4]
  4045a2:	605a      	str	r2, [r3, #4]
  4045a4:	68a2      	ldr	r2, [r4, #8]
  4045a6:	609a      	str	r2, [r3, #8]
  4045a8:	463c      	mov	r4, r7
  4045aa:	4675      	mov	r5, lr
  4045ac:	f8da 3004 	ldr.w	r3, [sl, #4]
  4045b0:	4657      	mov	r7, sl
  4045b2:	e77f      	b.n	4044b4 <_realloc_r+0x128>
  4045b4:	4437      	add	r7, r6
  4045b6:	1b83      	subs	r3, r0, r6
  4045b8:	f043 0301 	orr.w	r3, r3, #1
  4045bc:	f8cb 7008 	str.w	r7, [fp, #8]
  4045c0:	607b      	str	r3, [r7, #4]
  4045c2:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4045c6:	f003 0301 	and.w	r3, r3, #1
  4045ca:	431e      	orrs	r6, r3
  4045cc:	4648      	mov	r0, r9
  4045ce:	f844 6c04 	str.w	r6, [r4, #-4]
  4045d2:	f7ff fed9 	bl	404388 <__malloc_unlock>
  4045d6:	4620      	mov	r0, r4
  4045d8:	e77c      	b.n	4044d4 <_realloc_r+0x148>
  4045da:	4621      	mov	r1, r4
  4045dc:	f7ff fe72 	bl	4042c4 <memmove>
  4045e0:	e7b4      	b.n	40454c <_realloc_r+0x1c0>
  4045e2:	eb02 0c03 	add.w	ip, r2, r3
  4045e6:	f106 0210 	add.w	r2, r6, #16
  4045ea:	4594      	cmp	ip, r2
  4045ec:	f6ff af3b 	blt.w	404466 <_realloc_r+0xda>
  4045f0:	4657      	mov	r7, sl
  4045f2:	f8da 300c 	ldr.w	r3, [sl, #12]
  4045f6:	f857 1f08 	ldr.w	r1, [r7, #8]!
  4045fa:	1f2a      	subs	r2, r5, #4
  4045fc:	2a24      	cmp	r2, #36	; 0x24
  4045fe:	60cb      	str	r3, [r1, #12]
  404600:	6099      	str	r1, [r3, #8]
  404602:	f200 8087 	bhi.w	404714 <_realloc_r+0x388>
  404606:	2a13      	cmp	r2, #19
  404608:	d978      	bls.n	4046fc <_realloc_r+0x370>
  40460a:	6823      	ldr	r3, [r4, #0]
  40460c:	f8ca 3008 	str.w	r3, [sl, #8]
  404610:	6863      	ldr	r3, [r4, #4]
  404612:	f8ca 300c 	str.w	r3, [sl, #12]
  404616:	2a1b      	cmp	r2, #27
  404618:	f200 8085 	bhi.w	404726 <_realloc_r+0x39a>
  40461c:	3408      	adds	r4, #8
  40461e:	f10a 0310 	add.w	r3, sl, #16
  404622:	6822      	ldr	r2, [r4, #0]
  404624:	601a      	str	r2, [r3, #0]
  404626:	6862      	ldr	r2, [r4, #4]
  404628:	605a      	str	r2, [r3, #4]
  40462a:	68a2      	ldr	r2, [r4, #8]
  40462c:	609a      	str	r2, [r3, #8]
  40462e:	eb0a 0306 	add.w	r3, sl, r6
  404632:	ebc6 020c 	rsb	r2, r6, ip
  404636:	f042 0201 	orr.w	r2, r2, #1
  40463a:	f8cb 3008 	str.w	r3, [fp, #8]
  40463e:	605a      	str	r2, [r3, #4]
  404640:	f8da 3004 	ldr.w	r3, [sl, #4]
  404644:	f003 0301 	and.w	r3, r3, #1
  404648:	431e      	orrs	r6, r3
  40464a:	4648      	mov	r0, r9
  40464c:	f8ca 6004 	str.w	r6, [sl, #4]
  404650:	f7ff fe9a 	bl	404388 <__malloc_unlock>
  404654:	4638      	mov	r0, r7
  404656:	e73d      	b.n	4044d4 <_realloc_r+0x148>
  404658:	68a3      	ldr	r3, [r4, #8]
  40465a:	6083      	str	r3, [r0, #8]
  40465c:	68e3      	ldr	r3, [r4, #12]
  40465e:	60c3      	str	r3, [r0, #12]
  404660:	2a24      	cmp	r2, #36	; 0x24
  404662:	d02c      	beq.n	4046be <_realloc_r+0x332>
  404664:	f100 0310 	add.w	r3, r0, #16
  404668:	f104 0210 	add.w	r2, r4, #16
  40466c:	e768      	b.n	404540 <_realloc_r+0x1b4>
  40466e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404672:	f022 0203 	bic.w	r2, r2, #3
  404676:	4415      	add	r5, r2
  404678:	e71c      	b.n	4044b4 <_realloc_r+0x128>
  40467a:	4621      	mov	r1, r4
  40467c:	4638      	mov	r0, r7
  40467e:	4675      	mov	r5, lr
  404680:	463c      	mov	r4, r7
  404682:	f7ff fe1f 	bl	4042c4 <memmove>
  404686:	4657      	mov	r7, sl
  404688:	f8da 3004 	ldr.w	r3, [sl, #4]
  40468c:	e712      	b.n	4044b4 <_realloc_r+0x128>
  40468e:	463a      	mov	r2, r7
  404690:	e705      	b.n	40449e <_realloc_r+0x112>
  404692:	4621      	mov	r1, r4
  404694:	4638      	mov	r0, r7
  404696:	461d      	mov	r5, r3
  404698:	463c      	mov	r4, r7
  40469a:	f7ff fe13 	bl	4042c4 <memmove>
  40469e:	4657      	mov	r7, sl
  4046a0:	f8da 3004 	ldr.w	r3, [sl, #4]
  4046a4:	e706      	b.n	4044b4 <_realloc_r+0x128>
  4046a6:	68a3      	ldr	r3, [r4, #8]
  4046a8:	f8ca 3010 	str.w	r3, [sl, #16]
  4046ac:	68e3      	ldr	r3, [r4, #12]
  4046ae:	f8ca 3014 	str.w	r3, [sl, #20]
  4046b2:	2a24      	cmp	r2, #36	; 0x24
  4046b4:	d018      	beq.n	4046e8 <_realloc_r+0x35c>
  4046b6:	3410      	adds	r4, #16
  4046b8:	f10a 0318 	add.w	r3, sl, #24
  4046bc:	e76e      	b.n	40459c <_realloc_r+0x210>
  4046be:	6923      	ldr	r3, [r4, #16]
  4046c0:	6103      	str	r3, [r0, #16]
  4046c2:	6963      	ldr	r3, [r4, #20]
  4046c4:	6143      	str	r3, [r0, #20]
  4046c6:	f104 0218 	add.w	r2, r4, #24
  4046ca:	f100 0318 	add.w	r3, r0, #24
  4046ce:	e737      	b.n	404540 <_realloc_r+0x1b4>
  4046d0:	68a1      	ldr	r1, [r4, #8]
  4046d2:	f8ca 1010 	str.w	r1, [sl, #16]
  4046d6:	68e1      	ldr	r1, [r4, #12]
  4046d8:	f8ca 1014 	str.w	r1, [sl, #20]
  4046dc:	2a24      	cmp	r2, #36	; 0x24
  4046de:	d00f      	beq.n	404700 <_realloc_r+0x374>
  4046e0:	3410      	adds	r4, #16
  4046e2:	f10a 0218 	add.w	r2, sl, #24
  4046e6:	e6da      	b.n	40449e <_realloc_r+0x112>
  4046e8:	6923      	ldr	r3, [r4, #16]
  4046ea:	f8ca 3018 	str.w	r3, [sl, #24]
  4046ee:	6963      	ldr	r3, [r4, #20]
  4046f0:	f8ca 301c 	str.w	r3, [sl, #28]
  4046f4:	3418      	adds	r4, #24
  4046f6:	f10a 0320 	add.w	r3, sl, #32
  4046fa:	e74f      	b.n	40459c <_realloc_r+0x210>
  4046fc:	463b      	mov	r3, r7
  4046fe:	e790      	b.n	404622 <_realloc_r+0x296>
  404700:	6922      	ldr	r2, [r4, #16]
  404702:	f8ca 2018 	str.w	r2, [sl, #24]
  404706:	6962      	ldr	r2, [r4, #20]
  404708:	f8ca 201c 	str.w	r2, [sl, #28]
  40470c:	3418      	adds	r4, #24
  40470e:	f10a 0220 	add.w	r2, sl, #32
  404712:	e6c4      	b.n	40449e <_realloc_r+0x112>
  404714:	4621      	mov	r1, r4
  404716:	4638      	mov	r0, r7
  404718:	f8cd c004 	str.w	ip, [sp, #4]
  40471c:	f7ff fdd2 	bl	4042c4 <memmove>
  404720:	f8dd c004 	ldr.w	ip, [sp, #4]
  404724:	e783      	b.n	40462e <_realloc_r+0x2a2>
  404726:	68a3      	ldr	r3, [r4, #8]
  404728:	f8ca 3010 	str.w	r3, [sl, #16]
  40472c:	68e3      	ldr	r3, [r4, #12]
  40472e:	f8ca 3014 	str.w	r3, [sl, #20]
  404732:	2a24      	cmp	r2, #36	; 0x24
  404734:	d003      	beq.n	40473e <_realloc_r+0x3b2>
  404736:	3410      	adds	r4, #16
  404738:	f10a 0318 	add.w	r3, sl, #24
  40473c:	e771      	b.n	404622 <_realloc_r+0x296>
  40473e:	6923      	ldr	r3, [r4, #16]
  404740:	f8ca 3018 	str.w	r3, [sl, #24]
  404744:	6963      	ldr	r3, [r4, #20]
  404746:	f8ca 301c 	str.w	r3, [sl, #28]
  40474a:	3418      	adds	r4, #24
  40474c:	f10a 0320 	add.w	r3, sl, #32
  404750:	e767      	b.n	404622 <_realloc_r+0x296>
  404752:	bf00      	nop
  404754:	2000045c 	.word	0x2000045c

00404758 <lflush>:
  404758:	8983      	ldrh	r3, [r0, #12]
  40475a:	f003 0309 	and.w	r3, r3, #9
  40475e:	2b09      	cmp	r3, #9
  404760:	d001      	beq.n	404766 <lflush+0xe>
  404762:	2000      	movs	r0, #0
  404764:	4770      	bx	lr
  404766:	f7fe bc99 	b.w	40309c <fflush>
  40476a:	bf00      	nop

0040476c <__srefill_r>:
  40476c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40476e:	460c      	mov	r4, r1
  404770:	4605      	mov	r5, r0
  404772:	b110      	cbz	r0, 40477a <__srefill_r+0xe>
  404774:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404776:	2b00      	cmp	r3, #0
  404778:	d043      	beq.n	404802 <__srefill_r+0x96>
  40477a:	89a2      	ldrh	r2, [r4, #12]
  40477c:	b293      	uxth	r3, r2
  40477e:	0499      	lsls	r1, r3, #18
  404780:	d407      	bmi.n	404792 <__srefill_r+0x26>
  404782:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404784:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404788:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40478c:	6663      	str	r3, [r4, #100]	; 0x64
  40478e:	81a2      	strh	r2, [r4, #12]
  404790:	b293      	uxth	r3, r2
  404792:	2100      	movs	r1, #0
  404794:	069f      	lsls	r7, r3, #26
  404796:	6061      	str	r1, [r4, #4]
  404798:	d430      	bmi.n	4047fc <__srefill_r+0x90>
  40479a:	075e      	lsls	r6, r3, #29
  40479c:	d521      	bpl.n	4047e2 <__srefill_r+0x76>
  40479e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4047a0:	b161      	cbz	r1, 4047bc <__srefill_r+0x50>
  4047a2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4047a6:	4299      	cmp	r1, r3
  4047a8:	d002      	beq.n	4047b0 <__srefill_r+0x44>
  4047aa:	4628      	mov	r0, r5
  4047ac:	f7fe fe98 	bl	4034e0 <_free_r>
  4047b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4047b2:	6063      	str	r3, [r4, #4]
  4047b4:	2000      	movs	r0, #0
  4047b6:	6320      	str	r0, [r4, #48]	; 0x30
  4047b8:	2b00      	cmp	r3, #0
  4047ba:	d13f      	bne.n	40483c <__srefill_r+0xd0>
  4047bc:	6923      	ldr	r3, [r4, #16]
  4047be:	2b00      	cmp	r3, #0
  4047c0:	d04c      	beq.n	40485c <__srefill_r+0xf0>
  4047c2:	89a6      	ldrh	r6, [r4, #12]
  4047c4:	b2b7      	uxth	r7, r6
  4047c6:	07bb      	lsls	r3, r7, #30
  4047c8:	d11e      	bne.n	404808 <__srefill_r+0x9c>
  4047ca:	6922      	ldr	r2, [r4, #16]
  4047cc:	6022      	str	r2, [r4, #0]
  4047ce:	4628      	mov	r0, r5
  4047d0:	69e1      	ldr	r1, [r4, #28]
  4047d2:	6a25      	ldr	r5, [r4, #32]
  4047d4:	6963      	ldr	r3, [r4, #20]
  4047d6:	47a8      	blx	r5
  4047d8:	2800      	cmp	r0, #0
  4047da:	6060      	str	r0, [r4, #4]
  4047dc:	dd09      	ble.n	4047f2 <__srefill_r+0x86>
  4047de:	2000      	movs	r0, #0
  4047e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4047e2:	06d8      	lsls	r0, r3, #27
  4047e4:	d53f      	bpl.n	404866 <__srefill_r+0xfa>
  4047e6:	0719      	lsls	r1, r3, #28
  4047e8:	d42b      	bmi.n	404842 <__srefill_r+0xd6>
  4047ea:	f042 0204 	orr.w	r2, r2, #4
  4047ee:	81a2      	strh	r2, [r4, #12]
  4047f0:	e7e4      	b.n	4047bc <__srefill_r+0x50>
  4047f2:	d11a      	bne.n	40482a <__srefill_r+0xbe>
  4047f4:	89a3      	ldrh	r3, [r4, #12]
  4047f6:	f043 0320 	orr.w	r3, r3, #32
  4047fa:	81a3      	strh	r3, [r4, #12]
  4047fc:	f04f 30ff 	mov.w	r0, #4294967295
  404800:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404802:	f7fe fc63 	bl	4030cc <__sinit>
  404806:	e7b8      	b.n	40477a <__srefill_r+0xe>
  404808:	4b1b      	ldr	r3, [pc, #108]	; (404878 <__srefill_r+0x10c>)
  40480a:	491c      	ldr	r1, [pc, #112]	; (40487c <__srefill_r+0x110>)
  40480c:	6818      	ldr	r0, [r3, #0]
  40480e:	2301      	movs	r3, #1
  404810:	81a3      	strh	r3, [r4, #12]
  404812:	f007 0709 	and.w	r7, r7, #9
  404816:	f7ff f8bd 	bl	403994 <_fwalk>
  40481a:	2f09      	cmp	r7, #9
  40481c:	81a6      	strh	r6, [r4, #12]
  40481e:	d1d4      	bne.n	4047ca <__srefill_r+0x5e>
  404820:	4628      	mov	r0, r5
  404822:	4621      	mov	r1, r4
  404824:	f7fe fb7a 	bl	402f1c <__sflush_r>
  404828:	e7cf      	b.n	4047ca <__srefill_r+0x5e>
  40482a:	89a2      	ldrh	r2, [r4, #12]
  40482c:	2300      	movs	r3, #0
  40482e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404832:	81a2      	strh	r2, [r4, #12]
  404834:	6063      	str	r3, [r4, #4]
  404836:	f04f 30ff 	mov.w	r0, #4294967295
  40483a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40483c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  40483e:	6023      	str	r3, [r4, #0]
  404840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404842:	4628      	mov	r0, r5
  404844:	4621      	mov	r1, r4
  404846:	f7fe fc13 	bl	403070 <_fflush_r>
  40484a:	2800      	cmp	r0, #0
  40484c:	d1d6      	bne.n	4047fc <__srefill_r+0x90>
  40484e:	89a2      	ldrh	r2, [r4, #12]
  404850:	60a0      	str	r0, [r4, #8]
  404852:	f022 0208 	bic.w	r2, r2, #8
  404856:	61a0      	str	r0, [r4, #24]
  404858:	b292      	uxth	r2, r2
  40485a:	e7c6      	b.n	4047ea <__srefill_r+0x7e>
  40485c:	4628      	mov	r0, r5
  40485e:	4621      	mov	r1, r4
  404860:	f7ff f8fe 	bl	403a60 <__smakebuf_r>
  404864:	e7ad      	b.n	4047c2 <__srefill_r+0x56>
  404866:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  40486a:	2309      	movs	r3, #9
  40486c:	602b      	str	r3, [r5, #0]
  40486e:	f04f 30ff 	mov.w	r0, #4294967295
  404872:	81a2      	strh	r2, [r4, #12]
  404874:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404876:	bf00      	nop
  404878:	004054b8 	.word	0x004054b8
  40487c:	00404759 	.word	0x00404759

00404880 <_sbrk_r>:
  404880:	b538      	push	{r3, r4, r5, lr}
  404882:	4c07      	ldr	r4, [pc, #28]	; (4048a0 <_sbrk_r+0x20>)
  404884:	2300      	movs	r3, #0
  404886:	4605      	mov	r5, r0
  404888:	4608      	mov	r0, r1
  40488a:	6023      	str	r3, [r4, #0]
  40488c:	f7fc f902 	bl	400a94 <_sbrk>
  404890:	1c43      	adds	r3, r0, #1
  404892:	d000      	beq.n	404896 <_sbrk_r+0x16>
  404894:	bd38      	pop	{r3, r4, r5, pc}
  404896:	6823      	ldr	r3, [r4, #0]
  404898:	2b00      	cmp	r3, #0
  40489a:	d0fb      	beq.n	404894 <_sbrk_r+0x14>
  40489c:	602b      	str	r3, [r5, #0]
  40489e:	bd38      	pop	{r3, r4, r5, pc}
  4048a0:	2000094c 	.word	0x2000094c

004048a4 <__sccl>:
  4048a4:	b470      	push	{r4, r5, r6}
  4048a6:	780c      	ldrb	r4, [r1, #0]
  4048a8:	2c5e      	cmp	r4, #94	; 0x5e
  4048aa:	d02e      	beq.n	40490a <__sccl+0x66>
  4048ac:	2200      	movs	r2, #0
  4048ae:	1c4d      	adds	r5, r1, #1
  4048b0:	4616      	mov	r6, r2
  4048b2:	2300      	movs	r3, #0
  4048b4:	54c2      	strb	r2, [r0, r3]
  4048b6:	3301      	adds	r3, #1
  4048b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  4048bc:	d1fa      	bne.n	4048b4 <__sccl+0x10>
  4048be:	b184      	cbz	r4, 4048e2 <__sccl+0x3e>
  4048c0:	f086 0201 	eor.w	r2, r6, #1
  4048c4:	5502      	strb	r2, [r0, r4]
  4048c6:	1c6e      	adds	r6, r5, #1
  4048c8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  4048cc:	2b2d      	cmp	r3, #45	; 0x2d
  4048ce:	d00e      	beq.n	4048ee <__sccl+0x4a>
  4048d0:	2b5d      	cmp	r3, #93	; 0x5d
  4048d2:	d009      	beq.n	4048e8 <__sccl+0x44>
  4048d4:	b113      	cbz	r3, 4048dc <__sccl+0x38>
  4048d6:	461c      	mov	r4, r3
  4048d8:	4635      	mov	r5, r6
  4048da:	e7f3      	b.n	4048c4 <__sccl+0x20>
  4048dc:	4628      	mov	r0, r5
  4048de:	bc70      	pop	{r4, r5, r6}
  4048e0:	4770      	bx	lr
  4048e2:	1e68      	subs	r0, r5, #1
  4048e4:	bc70      	pop	{r4, r5, r6}
  4048e6:	4770      	bx	lr
  4048e8:	4630      	mov	r0, r6
  4048ea:	bc70      	pop	{r4, r5, r6}
  4048ec:	4770      	bx	lr
  4048ee:	7869      	ldrb	r1, [r5, #1]
  4048f0:	295d      	cmp	r1, #93	; 0x5d
  4048f2:	d0f0      	beq.n	4048d6 <__sccl+0x32>
  4048f4:	428c      	cmp	r4, r1
  4048f6:	dcee      	bgt.n	4048d6 <__sccl+0x32>
  4048f8:	3502      	adds	r5, #2
  4048fa:	1903      	adds	r3, r0, r4
  4048fc:	3401      	adds	r4, #1
  4048fe:	42a1      	cmp	r1, r4
  404900:	f803 2f01 	strb.w	r2, [r3, #1]!
  404904:	dcfa      	bgt.n	4048fc <__sccl+0x58>
  404906:	3602      	adds	r6, #2
  404908:	e7de      	b.n	4048c8 <__sccl+0x24>
  40490a:	2201      	movs	r2, #1
  40490c:	784c      	ldrb	r4, [r1, #1]
  40490e:	4616      	mov	r6, r2
  404910:	1c8d      	adds	r5, r1, #2
  404912:	e7ce      	b.n	4048b2 <__sccl+0xe>

00404914 <__sread>:
  404914:	b510      	push	{r4, lr}
  404916:	460c      	mov	r4, r1
  404918:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40491c:	f000 fd18 	bl	405350 <_read_r>
  404920:	2800      	cmp	r0, #0
  404922:	db03      	blt.n	40492c <__sread+0x18>
  404924:	6d23      	ldr	r3, [r4, #80]	; 0x50
  404926:	4403      	add	r3, r0
  404928:	6523      	str	r3, [r4, #80]	; 0x50
  40492a:	bd10      	pop	{r4, pc}
  40492c:	89a3      	ldrh	r3, [r4, #12]
  40492e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  404932:	81a3      	strh	r3, [r4, #12]
  404934:	bd10      	pop	{r4, pc}
  404936:	bf00      	nop

00404938 <__swrite>:
  404938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40493c:	460c      	mov	r4, r1
  40493e:	8989      	ldrh	r1, [r1, #12]
  404940:	461d      	mov	r5, r3
  404942:	05cb      	lsls	r3, r1, #23
  404944:	4616      	mov	r6, r2
  404946:	4607      	mov	r7, r0
  404948:	d506      	bpl.n	404958 <__swrite+0x20>
  40494a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40494e:	2200      	movs	r2, #0
  404950:	2302      	movs	r3, #2
  404952:	f000 fce9 	bl	405328 <_lseek_r>
  404956:	89a1      	ldrh	r1, [r4, #12]
  404958:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  40495c:	81a1      	strh	r1, [r4, #12]
  40495e:	4638      	mov	r0, r7
  404960:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404964:	4632      	mov	r2, r6
  404966:	462b      	mov	r3, r5
  404968:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40496c:	f000 bbf4 	b.w	405158 <_write_r>

00404970 <__sseek>:
  404970:	b510      	push	{r4, lr}
  404972:	460c      	mov	r4, r1
  404974:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404978:	f000 fcd6 	bl	405328 <_lseek_r>
  40497c:	89a3      	ldrh	r3, [r4, #12]
  40497e:	1c42      	adds	r2, r0, #1
  404980:	bf0e      	itee	eq
  404982:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  404986:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40498a:	6520      	strne	r0, [r4, #80]	; 0x50
  40498c:	81a3      	strh	r3, [r4, #12]
  40498e:	bd10      	pop	{r4, pc}

00404990 <__sclose>:
  404990:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404994:	f000 bc48 	b.w	405228 <_close_r>

00404998 <_strtol_r>:
  404998:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  40499c:	4c42      	ldr	r4, [pc, #264]	; (404aa8 <_strtol_r+0x110>)
  40499e:	b082      	sub	sp, #8
  4049a0:	f8d4 c000 	ldr.w	ip, [r4]
  4049a4:	9001      	str	r0, [sp, #4]
  4049a6:	460e      	mov	r6, r1
  4049a8:	e000      	b.n	4049ac <_strtol_r+0x14>
  4049aa:	4626      	mov	r6, r4
  4049ac:	4634      	mov	r4, r6
  4049ae:	f814 5b01 	ldrb.w	r5, [r4], #1
  4049b2:	eb0c 0005 	add.w	r0, ip, r5
  4049b6:	7840      	ldrb	r0, [r0, #1]
  4049b8:	f000 0008 	and.w	r0, r0, #8
  4049bc:	f000 0aff 	and.w	sl, r0, #255	; 0xff
  4049c0:	2800      	cmp	r0, #0
  4049c2:	d1f2      	bne.n	4049aa <_strtol_r+0x12>
  4049c4:	2d2d      	cmp	r5, #45	; 0x2d
  4049c6:	d05b      	beq.n	404a80 <_strtol_r+0xe8>
  4049c8:	2d2b      	cmp	r5, #43	; 0x2b
  4049ca:	bf04      	itt	eq
  4049cc:	7875      	ldrbeq	r5, [r6, #1]
  4049ce:	1cb4      	addeq	r4, r6, #2
  4049d0:	f033 0010 	bics.w	r0, r3, #16
  4049d4:	d03c      	beq.n	404a50 <_strtol_r+0xb8>
  4049d6:	4699      	mov	r9, r3
  4049d8:	f1ba 0f00 	cmp.w	sl, #0
  4049dc:	bf0c      	ite	eq
  4049de:	f06f 4b00 	mvneq.w	fp, #2147483648	; 0x80000000
  4049e2:	f04f 4b00 	movne.w	fp, #2147483648	; 0x80000000
  4049e6:	fbbb f8f9 	udiv	r8, fp, r9
  4049ea:	2700      	movs	r7, #0
  4049ec:	fb09 bb18 	mls	fp, r9, r8, fp
  4049f0:	4638      	mov	r0, r7
  4049f2:	e00c      	b.n	404a0e <_strtol_r+0x76>
  4049f4:	3d30      	subs	r5, #48	; 0x30
  4049f6:	42ab      	cmp	r3, r5
  4049f8:	dd19      	ble.n	404a2e <_strtol_r+0x96>
  4049fa:	1c7e      	adds	r6, r7, #1
  4049fc:	d005      	beq.n	404a0a <_strtol_r+0x72>
  4049fe:	4540      	cmp	r0, r8
  404a00:	d823      	bhi.n	404a4a <_strtol_r+0xb2>
  404a02:	d020      	beq.n	404a46 <_strtol_r+0xae>
  404a04:	fb09 5000 	mla	r0, r9, r0, r5
  404a08:	2701      	movs	r7, #1
  404a0a:	f814 5b01 	ldrb.w	r5, [r4], #1
  404a0e:	eb0c 0605 	add.w	r6, ip, r5
  404a12:	7876      	ldrb	r6, [r6, #1]
  404a14:	f016 0f04 	tst.w	r6, #4
  404a18:	d1ec      	bne.n	4049f4 <_strtol_r+0x5c>
  404a1a:	f016 0603 	ands.w	r6, r6, #3
  404a1e:	d006      	beq.n	404a2e <_strtol_r+0x96>
  404a20:	2e01      	cmp	r6, #1
  404a22:	bf14      	ite	ne
  404a24:	2657      	movne	r6, #87	; 0x57
  404a26:	2637      	moveq	r6, #55	; 0x37
  404a28:	1bad      	subs	r5, r5, r6
  404a2a:	42ab      	cmp	r3, r5
  404a2c:	dce5      	bgt.n	4049fa <_strtol_r+0x62>
  404a2e:	1c7b      	adds	r3, r7, #1
  404a30:	d015      	beq.n	404a5e <_strtol_r+0xc6>
  404a32:	f1ba 0f00 	cmp.w	sl, #0
  404a36:	d121      	bne.n	404a7c <_strtol_r+0xe4>
  404a38:	b10a      	cbz	r2, 404a3e <_strtol_r+0xa6>
  404a3a:	b9ef      	cbnz	r7, 404a78 <_strtol_r+0xe0>
  404a3c:	6011      	str	r1, [r2, #0]
  404a3e:	b002      	add	sp, #8
  404a40:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  404a44:	4770      	bx	lr
  404a46:	455d      	cmp	r5, fp
  404a48:	dddc      	ble.n	404a04 <_strtol_r+0x6c>
  404a4a:	f04f 37ff 	mov.w	r7, #4294967295
  404a4e:	e7dc      	b.n	404a0a <_strtol_r+0x72>
  404a50:	2d30      	cmp	r5, #48	; 0x30
  404a52:	d01a      	beq.n	404a8a <_strtol_r+0xf2>
  404a54:	2b00      	cmp	r3, #0
  404a56:	d1be      	bne.n	4049d6 <_strtol_r+0x3e>
  404a58:	230a      	movs	r3, #10
  404a5a:	4699      	mov	r9, r3
  404a5c:	e7bc      	b.n	4049d8 <_strtol_r+0x40>
  404a5e:	9901      	ldr	r1, [sp, #4]
  404a60:	f1ba 0f00 	cmp.w	sl, #0
  404a64:	f04f 0322 	mov.w	r3, #34	; 0x22
  404a68:	bf0c      	ite	eq
  404a6a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  404a6e:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  404a72:	600b      	str	r3, [r1, #0]
  404a74:	2a00      	cmp	r2, #0
  404a76:	d0e2      	beq.n	404a3e <_strtol_r+0xa6>
  404a78:	1e61      	subs	r1, r4, #1
  404a7a:	e7df      	b.n	404a3c <_strtol_r+0xa4>
  404a7c:	4240      	negs	r0, r0
  404a7e:	e7db      	b.n	404a38 <_strtol_r+0xa0>
  404a80:	1cb4      	adds	r4, r6, #2
  404a82:	7875      	ldrb	r5, [r6, #1]
  404a84:	f04f 0a01 	mov.w	sl, #1
  404a88:	e7a2      	b.n	4049d0 <_strtol_r+0x38>
  404a8a:	7820      	ldrb	r0, [r4, #0]
  404a8c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404a90:	2858      	cmp	r0, #88	; 0x58
  404a92:	d003      	beq.n	404a9c <_strtol_r+0x104>
  404a94:	2b00      	cmp	r3, #0
  404a96:	d19e      	bne.n	4049d6 <_strtol_r+0x3e>
  404a98:	2308      	movs	r3, #8
  404a9a:	e79c      	b.n	4049d6 <_strtol_r+0x3e>
  404a9c:	2310      	movs	r3, #16
  404a9e:	7865      	ldrb	r5, [r4, #1]
  404aa0:	4699      	mov	r9, r3
  404aa2:	3402      	adds	r4, #2
  404aa4:	e798      	b.n	4049d8 <_strtol_r+0x40>
  404aa6:	bf00      	nop
  404aa8:	20000434 	.word	0x20000434

00404aac <_strtoll_r>:
  404aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404ab0:	4c64      	ldr	r4, [pc, #400]	; (404c44 <_strtoll_r+0x198>)
  404ab2:	b087      	sub	sp, #28
  404ab4:	4694      	mov	ip, r2
  404ab6:	9104      	str	r1, [sp, #16]
  404ab8:	f8d4 8000 	ldr.w	r8, [r4]
  404abc:	9005      	str	r0, [sp, #20]
  404abe:	4699      	mov	r9, r3
  404ac0:	460a      	mov	r2, r1
  404ac2:	e000      	b.n	404ac6 <_strtoll_r+0x1a>
  404ac4:	4632      	mov	r2, r6
  404ac6:	4616      	mov	r6, r2
  404ac8:	f816 7b01 	ldrb.w	r7, [r6], #1
  404acc:	eb08 0307 	add.w	r3, r8, r7
  404ad0:	785b      	ldrb	r3, [r3, #1]
  404ad2:	f003 0308 	and.w	r3, r3, #8
  404ad6:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404ada:	2b00      	cmp	r3, #0
  404adc:	d1f2      	bne.n	404ac4 <_strtoll_r+0x18>
  404ade:	2f2d      	cmp	r7, #45	; 0x2d
  404ae0:	f000 808d 	beq.w	404bfe <_strtoll_r+0x152>
  404ae4:	2f2b      	cmp	r7, #43	; 0x2b
  404ae6:	bf08      	it	eq
  404ae8:	7857      	ldrbeq	r7, [r2, #1]
  404aea:	9102      	str	r1, [sp, #8]
  404aec:	bf08      	it	eq
  404aee:	1c96      	addeq	r6, r2, #2
  404af0:	f039 0110 	bics.w	r1, r9, #16
  404af4:	d05e      	beq.n	404bb4 <_strtoll_r+0x108>
  404af6:	46ca      	mov	sl, r9
  404af8:	ea4f 7be9 	mov.w	fp, r9, asr #31
  404afc:	9c02      	ldr	r4, [sp, #8]
  404afe:	2c00      	cmp	r4, #0
  404b00:	d066      	beq.n	404bd0 <_strtoll_r+0x124>
  404b02:	2400      	movs	r4, #0
  404b04:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
  404b08:	4620      	mov	r0, r4
  404b0a:	4629      	mov	r1, r5
  404b0c:	4652      	mov	r2, sl
  404b0e:	465b      	mov	r3, fp
  404b10:	f8cd c004 	str.w	ip, [sp, #4]
  404b14:	f000 fc30 	bl	405378 <__aeabi_uldivmod>
  404b18:	4620      	mov	r0, r4
  404b1a:	9203      	str	r2, [sp, #12]
  404b1c:	465b      	mov	r3, fp
  404b1e:	4652      	mov	r2, sl
  404b20:	4629      	mov	r1, r5
  404b22:	f000 fc29 	bl	405378 <__aeabi_uldivmod>
  404b26:	2400      	movs	r4, #0
  404b28:	2200      	movs	r2, #0
  404b2a:	2300      	movs	r3, #0
  404b2c:	f8dd c004 	ldr.w	ip, [sp, #4]
  404b30:	e019      	b.n	404b66 <_strtoll_r+0xba>
  404b32:	3f30      	subs	r7, #48	; 0x30
  404b34:	45b9      	cmp	r9, r7
  404b36:	dd26      	ble.n	404b86 <_strtoll_r+0xda>
  404b38:	1c65      	adds	r5, r4, #1
  404b3a:	d012      	beq.n	404b62 <_strtoll_r+0xb6>
  404b3c:	4299      	cmp	r1, r3
  404b3e:	bf08      	it	eq
  404b40:	4290      	cmpeq	r0, r2
  404b42:	d334      	bcc.n	404bae <_strtoll_r+0x102>
  404b44:	428b      	cmp	r3, r1
  404b46:	bf08      	it	eq
  404b48:	4282      	cmpeq	r2, r0
  404b4a:	d02d      	beq.n	404ba8 <_strtoll_r+0xfc>
  404b4c:	fb02 f40b 	mul.w	r4, r2, fp
  404b50:	fb0a 4403 	mla	r4, sl, r3, r4
  404b54:	fba2 230a 	umull	r2, r3, r2, sl
  404b58:	4423      	add	r3, r4
  404b5a:	19d2      	adds	r2, r2, r7
  404b5c:	eb43 73e7 	adc.w	r3, r3, r7, asr #31
  404b60:	2401      	movs	r4, #1
  404b62:	f816 7b01 	ldrb.w	r7, [r6], #1
  404b66:	eb08 0507 	add.w	r5, r8, r7
  404b6a:	786d      	ldrb	r5, [r5, #1]
  404b6c:	f015 0f04 	tst.w	r5, #4
  404b70:	d1df      	bne.n	404b32 <_strtoll_r+0x86>
  404b72:	f015 0503 	ands.w	r5, r5, #3
  404b76:	d006      	beq.n	404b86 <_strtoll_r+0xda>
  404b78:	2d01      	cmp	r5, #1
  404b7a:	bf14      	ite	ne
  404b7c:	2557      	movne	r5, #87	; 0x57
  404b7e:	2537      	moveq	r5, #55	; 0x37
  404b80:	1b7f      	subs	r7, r7, r5
  404b82:	45b9      	cmp	r9, r7
  404b84:	dcd8      	bgt.n	404b38 <_strtoll_r+0x8c>
  404b86:	1c61      	adds	r1, r4, #1
  404b88:	d027      	beq.n	404bda <_strtoll_r+0x12e>
  404b8a:	9902      	ldr	r1, [sp, #8]
  404b8c:	2900      	cmp	r1, #0
  404b8e:	d132      	bne.n	404bf6 <_strtoll_r+0x14a>
  404b90:	4610      	mov	r0, r2
  404b92:	4619      	mov	r1, r3
  404b94:	f1bc 0f00 	cmp.w	ip, #0
  404b98:	d003      	beq.n	404ba2 <_strtoll_r+0xf6>
  404b9a:	bb54      	cbnz	r4, 404bf2 <_strtoll_r+0x146>
  404b9c:	9e04      	ldr	r6, [sp, #16]
  404b9e:	f8cc 6000 	str.w	r6, [ip]
  404ba2:	b007      	add	sp, #28
  404ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ba8:	9c03      	ldr	r4, [sp, #12]
  404baa:	42a7      	cmp	r7, r4
  404bac:	ddce      	ble.n	404b4c <_strtoll_r+0xa0>
  404bae:	f04f 34ff 	mov.w	r4, #4294967295
  404bb2:	e7d6      	b.n	404b62 <_strtoll_r+0xb6>
  404bb4:	2f30      	cmp	r7, #48	; 0x30
  404bb6:	d027      	beq.n	404c08 <_strtoll_r+0x15c>
  404bb8:	f1b9 0f00 	cmp.w	r9, #0
  404bbc:	d19b      	bne.n	404af6 <_strtoll_r+0x4a>
  404bbe:	9c02      	ldr	r4, [sp, #8]
  404bc0:	f04f 0a0a 	mov.w	sl, #10
  404bc4:	f04f 0b00 	mov.w	fp, #0
  404bc8:	f04f 090a 	mov.w	r9, #10
  404bcc:	2c00      	cmp	r4, #0
  404bce:	d198      	bne.n	404b02 <_strtoll_r+0x56>
  404bd0:	f04f 34ff 	mov.w	r4, #4294967295
  404bd4:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
  404bd8:	e796      	b.n	404b08 <_strtoll_r+0x5c>
  404bda:	9c02      	ldr	r4, [sp, #8]
  404bdc:	bb24      	cbnz	r4, 404c28 <_strtoll_r+0x17c>
  404bde:	f04f 30ff 	mov.w	r0, #4294967295
  404be2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404be6:	9c05      	ldr	r4, [sp, #20]
  404be8:	2322      	movs	r3, #34	; 0x22
  404bea:	6023      	str	r3, [r4, #0]
  404bec:	f1bc 0f00 	cmp.w	ip, #0
  404bf0:	d0d7      	beq.n	404ba2 <_strtoll_r+0xf6>
  404bf2:	3e01      	subs	r6, #1
  404bf4:	e7d3      	b.n	404b9e <_strtoll_r+0xf2>
  404bf6:	4252      	negs	r2, r2
  404bf8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  404bfc:	e7c8      	b.n	404b90 <_strtoll_r+0xe4>
  404bfe:	2401      	movs	r4, #1
  404c00:	1c96      	adds	r6, r2, #2
  404c02:	7857      	ldrb	r7, [r2, #1]
  404c04:	9402      	str	r4, [sp, #8]
  404c06:	e773      	b.n	404af0 <_strtoll_r+0x44>
  404c08:	7833      	ldrb	r3, [r6, #0]
  404c0a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404c0e:	2b58      	cmp	r3, #88	; 0x58
  404c10:	d00e      	beq.n	404c30 <_strtoll_r+0x184>
  404c12:	f1b9 0f00 	cmp.w	r9, #0
  404c16:	f47f af6e 	bne.w	404af6 <_strtoll_r+0x4a>
  404c1a:	f04f 0a08 	mov.w	sl, #8
  404c1e:	f04f 0b00 	mov.w	fp, #0
  404c22:	f04f 0908 	mov.w	r9, #8
  404c26:	e769      	b.n	404afc <_strtoll_r+0x50>
  404c28:	2000      	movs	r0, #0
  404c2a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  404c2e:	e7da      	b.n	404be6 <_strtoll_r+0x13a>
  404c30:	7877      	ldrb	r7, [r6, #1]
  404c32:	f04f 0a10 	mov.w	sl, #16
  404c36:	f04f 0b00 	mov.w	fp, #0
  404c3a:	3602      	adds	r6, #2
  404c3c:	f04f 0910 	mov.w	r9, #16
  404c40:	e75c      	b.n	404afc <_strtoll_r+0x50>
  404c42:	bf00      	nop
  404c44:	20000434 	.word	0x20000434

00404c48 <_strtoul_r>:
  404c48:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  404c4c:	4c44      	ldr	r4, [pc, #272]	; (404d60 <_strtoul_r+0x118>)
  404c4e:	b082      	sub	sp, #8
  404c50:	f8d4 c000 	ldr.w	ip, [r4]
  404c54:	9001      	str	r0, [sp, #4]
  404c56:	460e      	mov	r6, r1
  404c58:	e000      	b.n	404c5c <_strtoul_r+0x14>
  404c5a:	4626      	mov	r6, r4
  404c5c:	4634      	mov	r4, r6
  404c5e:	f814 5b01 	ldrb.w	r5, [r4], #1
  404c62:	eb0c 0005 	add.w	r0, ip, r5
  404c66:	7840      	ldrb	r0, [r0, #1]
  404c68:	f000 0008 	and.w	r0, r0, #8
  404c6c:	f000 07ff 	and.w	r7, r0, #255	; 0xff
  404c70:	2800      	cmp	r0, #0
  404c72:	d1f2      	bne.n	404c5a <_strtoul_r+0x12>
  404c74:	2d2d      	cmp	r5, #45	; 0x2d
  404c76:	d057      	beq.n	404d28 <_strtoul_r+0xe0>
  404c78:	2d2b      	cmp	r5, #43	; 0x2b
  404c7a:	bf08      	it	eq
  404c7c:	7875      	ldrbeq	r5, [r6, #1]
  404c7e:	46ba      	mov	sl, r7
  404c80:	bf08      	it	eq
  404c82:	1cb4      	addeq	r4, r6, #2
  404c84:	f033 0010 	bics.w	r0, r3, #16
  404c88:	d039      	beq.n	404cfe <_strtoul_r+0xb6>
  404c8a:	f04f 38ff 	mov.w	r8, #4294967295
  404c8e:	fbb8 f8f3 	udiv	r8, r8, r3
  404c92:	fb03 fb08 	mul.w	fp, r3, r8
  404c96:	ea6f 0b0b 	mvn.w	fp, fp
  404c9a:	4699      	mov	r9, r3
  404c9c:	2700      	movs	r7, #0
  404c9e:	4638      	mov	r0, r7
  404ca0:	e00c      	b.n	404cbc <_strtoul_r+0x74>
  404ca2:	3d30      	subs	r5, #48	; 0x30
  404ca4:	42ab      	cmp	r3, r5
  404ca6:	dd19      	ble.n	404cdc <_strtoul_r+0x94>
  404ca8:	2f00      	cmp	r7, #0
  404caa:	db25      	blt.n	404cf8 <_strtoul_r+0xb0>
  404cac:	4540      	cmp	r0, r8
  404cae:	d823      	bhi.n	404cf8 <_strtoul_r+0xb0>
  404cb0:	d020      	beq.n	404cf4 <_strtoul_r+0xac>
  404cb2:	fb09 5000 	mla	r0, r9, r0, r5
  404cb6:	2701      	movs	r7, #1
  404cb8:	f814 5b01 	ldrb.w	r5, [r4], #1
  404cbc:	eb0c 0605 	add.w	r6, ip, r5
  404cc0:	7876      	ldrb	r6, [r6, #1]
  404cc2:	f016 0f04 	tst.w	r6, #4
  404cc6:	d1ec      	bne.n	404ca2 <_strtoul_r+0x5a>
  404cc8:	f016 0603 	ands.w	r6, r6, #3
  404ccc:	d006      	beq.n	404cdc <_strtoul_r+0x94>
  404cce:	2e01      	cmp	r6, #1
  404cd0:	bf14      	ite	ne
  404cd2:	2657      	movne	r6, #87	; 0x57
  404cd4:	2637      	moveq	r6, #55	; 0x37
  404cd6:	1bad      	subs	r5, r5, r6
  404cd8:	42ab      	cmp	r3, r5
  404cda:	dce5      	bgt.n	404ca8 <_strtoul_r+0x60>
  404cdc:	2f00      	cmp	r7, #0
  404cde:	db1d      	blt.n	404d1c <_strtoul_r+0xd4>
  404ce0:	f1ba 0f00 	cmp.w	sl, #0
  404ce4:	d118      	bne.n	404d18 <_strtoul_r+0xd0>
  404ce6:	b10a      	cbz	r2, 404cec <_strtoul_r+0xa4>
  404ce8:	b9a7      	cbnz	r7, 404d14 <_strtoul_r+0xcc>
  404cea:	6011      	str	r1, [r2, #0]
  404cec:	b002      	add	sp, #8
  404cee:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  404cf2:	4770      	bx	lr
  404cf4:	455d      	cmp	r5, fp
  404cf6:	dddc      	ble.n	404cb2 <_strtoul_r+0x6a>
  404cf8:	f04f 37ff 	mov.w	r7, #4294967295
  404cfc:	e7dc      	b.n	404cb8 <_strtoul_r+0x70>
  404cfe:	2d30      	cmp	r5, #48	; 0x30
  404d00:	d017      	beq.n	404d32 <_strtoul_r+0xea>
  404d02:	2b00      	cmp	r3, #0
  404d04:	d1c1      	bne.n	404c8a <_strtoul_r+0x42>
  404d06:	230a      	movs	r3, #10
  404d08:	4699      	mov	r9, r3
  404d0a:	f04f 0b05 	mov.w	fp, #5
  404d0e:	f8df 8054 	ldr.w	r8, [pc, #84]	; 404d64 <_strtoul_r+0x11c>
  404d12:	e7c3      	b.n	404c9c <_strtoul_r+0x54>
  404d14:	1e61      	subs	r1, r4, #1
  404d16:	e7e8      	b.n	404cea <_strtoul_r+0xa2>
  404d18:	4240      	negs	r0, r0
  404d1a:	e7e4      	b.n	404ce6 <_strtoul_r+0x9e>
  404d1c:	9801      	ldr	r0, [sp, #4]
  404d1e:	2322      	movs	r3, #34	; 0x22
  404d20:	6003      	str	r3, [r0, #0]
  404d22:	f04f 30ff 	mov.w	r0, #4294967295
  404d26:	e7de      	b.n	404ce6 <_strtoul_r+0x9e>
  404d28:	1cb4      	adds	r4, r6, #2
  404d2a:	7875      	ldrb	r5, [r6, #1]
  404d2c:	f04f 0a01 	mov.w	sl, #1
  404d30:	e7a8      	b.n	404c84 <_strtoul_r+0x3c>
  404d32:	7820      	ldrb	r0, [r4, #0]
  404d34:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404d38:	2858      	cmp	r0, #88	; 0x58
  404d3a:	d008      	beq.n	404d4e <_strtoul_r+0x106>
  404d3c:	2b00      	cmp	r3, #0
  404d3e:	d1a4      	bne.n	404c8a <_strtoul_r+0x42>
  404d40:	2308      	movs	r3, #8
  404d42:	4699      	mov	r9, r3
  404d44:	f04f 0b07 	mov.w	fp, #7
  404d48:	f06f 4860 	mvn.w	r8, #3758096384	; 0xe0000000
  404d4c:	e7a6      	b.n	404c9c <_strtoul_r+0x54>
  404d4e:	2310      	movs	r3, #16
  404d50:	7865      	ldrb	r5, [r4, #1]
  404d52:	4699      	mov	r9, r3
  404d54:	f04f 0b0f 	mov.w	fp, #15
  404d58:	3402      	adds	r4, #2
  404d5a:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404d5e:	e79d      	b.n	404c9c <_strtoul_r+0x54>
  404d60:	20000434 	.word	0x20000434
  404d64:	19999999 	.word	0x19999999

00404d68 <_strtoull_r>:
  404d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d6c:	4c60      	ldr	r4, [pc, #384]	; (404ef0 <_strtoull_r+0x188>)
  404d6e:	b085      	sub	sp, #20
  404d70:	f8d4 8000 	ldr.w	r8, [r4]
  404d74:	9200      	str	r2, [sp, #0]
  404d76:	9101      	str	r1, [sp, #4]
  404d78:	9003      	str	r0, [sp, #12]
  404d7a:	4699      	mov	r9, r3
  404d7c:	460a      	mov	r2, r1
  404d7e:	e000      	b.n	404d82 <_strtoull_r+0x1a>
  404d80:	4632      	mov	r2, r6
  404d82:	4616      	mov	r6, r2
  404d84:	f816 7b01 	ldrb.w	r7, [r6], #1
  404d88:	eb08 0307 	add.w	r3, r8, r7
  404d8c:	785b      	ldrb	r3, [r3, #1]
  404d8e:	f003 0308 	and.w	r3, r3, #8
  404d92:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404d96:	2b00      	cmp	r3, #0
  404d98:	d1f2      	bne.n	404d80 <_strtoull_r+0x18>
  404d9a:	2f2d      	cmp	r7, #45	; 0x2d
  404d9c:	d07d      	beq.n	404e9a <_strtoull_r+0x132>
  404d9e:	2f2b      	cmp	r7, #43	; 0x2b
  404da0:	bf08      	it	eq
  404da2:	7857      	ldrbeq	r7, [r2, #1]
  404da4:	9102      	str	r1, [sp, #8]
  404da6:	bf08      	it	eq
  404da8:	1c96      	addeq	r6, r2, #2
  404daa:	f039 0210 	bics.w	r2, r9, #16
  404dae:	d055      	beq.n	404e5c <_strtoull_r+0xf4>
  404db0:	ea4f 7be9 	mov.w	fp, r9, asr #31
  404db4:	464a      	mov	r2, r9
  404db6:	465b      	mov	r3, fp
  404db8:	f04f 30ff 	mov.w	r0, #4294967295
  404dbc:	f04f 31ff 	mov.w	r1, #4294967295
  404dc0:	f000 fada 	bl	405378 <__aeabi_uldivmod>
  404dc4:	464a      	mov	r2, r9
  404dc6:	4604      	mov	r4, r0
  404dc8:	460d      	mov	r5, r1
  404dca:	465b      	mov	r3, fp
  404dcc:	f04f 30ff 	mov.w	r0, #4294967295
  404dd0:	f04f 31ff 	mov.w	r1, #4294967295
  404dd4:	f000 fad0 	bl	405378 <__aeabi_uldivmod>
  404dd8:	46ca      	mov	sl, r9
  404dda:	4694      	mov	ip, r2
  404ddc:	2300      	movs	r3, #0
  404dde:	2000      	movs	r0, #0
  404de0:	2100      	movs	r1, #0
  404de2:	e019      	b.n	404e18 <_strtoull_r+0xb0>
  404de4:	3f30      	subs	r7, #48	; 0x30
  404de6:	45b9      	cmp	r9, r7
  404de8:	dd26      	ble.n	404e38 <_strtoull_r+0xd0>
  404dea:	2b00      	cmp	r3, #0
  404dec:	db33      	blt.n	404e56 <_strtoull_r+0xee>
  404dee:	428d      	cmp	r5, r1
  404df0:	bf08      	it	eq
  404df2:	4284      	cmpeq	r4, r0
  404df4:	d32f      	bcc.n	404e56 <_strtoull_r+0xee>
  404df6:	42a9      	cmp	r1, r5
  404df8:	bf08      	it	eq
  404dfa:	42a0      	cmpeq	r0, r4
  404dfc:	d029      	beq.n	404e52 <_strtoull_r+0xea>
  404dfe:	fb00 f30b 	mul.w	r3, r0, fp
  404e02:	fb0a 3301 	mla	r3, sl, r1, r3
  404e06:	fba0 010a 	umull	r0, r1, r0, sl
  404e0a:	4419      	add	r1, r3
  404e0c:	19c0      	adds	r0, r0, r7
  404e0e:	eb41 71e7 	adc.w	r1, r1, r7, asr #31
  404e12:	2301      	movs	r3, #1
  404e14:	f816 7b01 	ldrb.w	r7, [r6], #1
  404e18:	eb08 0207 	add.w	r2, r8, r7
  404e1c:	7852      	ldrb	r2, [r2, #1]
  404e1e:	f012 0f04 	tst.w	r2, #4
  404e22:	d1df      	bne.n	404de4 <_strtoull_r+0x7c>
  404e24:	f012 0203 	ands.w	r2, r2, #3
  404e28:	d006      	beq.n	404e38 <_strtoull_r+0xd0>
  404e2a:	2a01      	cmp	r2, #1
  404e2c:	bf14      	ite	ne
  404e2e:	2257      	movne	r2, #87	; 0x57
  404e30:	2237      	moveq	r2, #55	; 0x37
  404e32:	1abf      	subs	r7, r7, r2
  404e34:	45b9      	cmp	r9, r7
  404e36:	dcd8      	bgt.n	404dea <_strtoull_r+0x82>
  404e38:	2b00      	cmp	r3, #0
  404e3a:	db26      	blt.n	404e8a <_strtoull_r+0x122>
  404e3c:	9a02      	ldr	r2, [sp, #8]
  404e3e:	bb02      	cbnz	r2, 404e82 <_strtoull_r+0x11a>
  404e40:	9a00      	ldr	r2, [sp, #0]
  404e42:	b11a      	cbz	r2, 404e4c <_strtoull_r+0xe4>
  404e44:	b9db      	cbnz	r3, 404e7e <_strtoull_r+0x116>
  404e46:	9e01      	ldr	r6, [sp, #4]
  404e48:	9b00      	ldr	r3, [sp, #0]
  404e4a:	601e      	str	r6, [r3, #0]
  404e4c:	b005      	add	sp, #20
  404e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e52:	4567      	cmp	r7, ip
  404e54:	ddd3      	ble.n	404dfe <_strtoull_r+0x96>
  404e56:	f04f 33ff 	mov.w	r3, #4294967295
  404e5a:	e7db      	b.n	404e14 <_strtoull_r+0xac>
  404e5c:	2f30      	cmp	r7, #48	; 0x30
  404e5e:	d021      	beq.n	404ea4 <_strtoull_r+0x13c>
  404e60:	f1b9 0f00 	cmp.w	r9, #0
  404e64:	d1a4      	bne.n	404db0 <_strtoull_r+0x48>
  404e66:	f04f 0c05 	mov.w	ip, #5
  404e6a:	f04f 3499 	mov.w	r4, #2576980377	; 0x99999999
  404e6e:	4d21      	ldr	r5, [pc, #132]	; (404ef4 <_strtoull_r+0x18c>)
  404e70:	f04f 0a0a 	mov.w	sl, #10
  404e74:	f04f 0b00 	mov.w	fp, #0
  404e78:	f04f 090a 	mov.w	r9, #10
  404e7c:	e7ae      	b.n	404ddc <_strtoull_r+0x74>
  404e7e:	3e01      	subs	r6, #1
  404e80:	e7e2      	b.n	404e48 <_strtoull_r+0xe0>
  404e82:	4240      	negs	r0, r0
  404e84:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  404e88:	e7da      	b.n	404e40 <_strtoull_r+0xd8>
  404e8a:	9903      	ldr	r1, [sp, #12]
  404e8c:	2222      	movs	r2, #34	; 0x22
  404e8e:	600a      	str	r2, [r1, #0]
  404e90:	f04f 30ff 	mov.w	r0, #4294967295
  404e94:	f04f 31ff 	mov.w	r1, #4294967295
  404e98:	e7d2      	b.n	404e40 <_strtoull_r+0xd8>
  404e9a:	2101      	movs	r1, #1
  404e9c:	1c96      	adds	r6, r2, #2
  404e9e:	7857      	ldrb	r7, [r2, #1]
  404ea0:	9102      	str	r1, [sp, #8]
  404ea2:	e782      	b.n	404daa <_strtoull_r+0x42>
  404ea4:	7833      	ldrb	r3, [r6, #0]
  404ea6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404eaa:	2b58      	cmp	r3, #88	; 0x58
  404eac:	d010      	beq.n	404ed0 <_strtoull_r+0x168>
  404eae:	f1b9 0f00 	cmp.w	r9, #0
  404eb2:	f47f af7d 	bne.w	404db0 <_strtoull_r+0x48>
  404eb6:	f04f 0c07 	mov.w	ip, #7
  404eba:	f04f 34ff 	mov.w	r4, #4294967295
  404ebe:	f06f 4560 	mvn.w	r5, #3758096384	; 0xe0000000
  404ec2:	f04f 0a08 	mov.w	sl, #8
  404ec6:	f04f 0b00 	mov.w	fp, #0
  404eca:	f04f 0908 	mov.w	r9, #8
  404ece:	e785      	b.n	404ddc <_strtoull_r+0x74>
  404ed0:	7877      	ldrb	r7, [r6, #1]
  404ed2:	f04f 0c0f 	mov.w	ip, #15
  404ed6:	3602      	adds	r6, #2
  404ed8:	f04f 34ff 	mov.w	r4, #4294967295
  404edc:	f06f 4570 	mvn.w	r5, #4026531840	; 0xf0000000
  404ee0:	f04f 0a10 	mov.w	sl, #16
  404ee4:	f04f 0b00 	mov.w	fp, #0
  404ee8:	f04f 0910 	mov.w	r9, #16
  404eec:	e776      	b.n	404ddc <_strtoull_r+0x74>
  404eee:	bf00      	nop
  404ef0:	20000434 	.word	0x20000434
  404ef4:	19999999 	.word	0x19999999

00404ef8 <__submore>:
  404ef8:	f101 0340 	add.w	r3, r1, #64	; 0x40
  404efc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f00:	460c      	mov	r4, r1
  404f02:	6b09      	ldr	r1, [r1, #48]	; 0x30
  404f04:	4299      	cmp	r1, r3
  404f06:	d014      	beq.n	404f32 <__submore+0x3a>
  404f08:	6b66      	ldr	r6, [r4, #52]	; 0x34
  404f0a:	0077      	lsls	r7, r6, #1
  404f0c:	463a      	mov	r2, r7
  404f0e:	f7ff fa3d 	bl	40438c <_realloc_r>
  404f12:	4605      	mov	r5, r0
  404f14:	b340      	cbz	r0, 404f68 <__submore+0x70>
  404f16:	eb00 0806 	add.w	r8, r0, r6
  404f1a:	4632      	mov	r2, r6
  404f1c:	4640      	mov	r0, r8
  404f1e:	4629      	mov	r1, r5
  404f20:	f7ff f936 	bl	404190 <memcpy>
  404f24:	f8c4 8000 	str.w	r8, [r4]
  404f28:	6325      	str	r5, [r4, #48]	; 0x30
  404f2a:	6367      	str	r7, [r4, #52]	; 0x34
  404f2c:	2000      	movs	r0, #0
  404f2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f32:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404f36:	f7fe fe03 	bl	403b40 <_malloc_r>
  404f3a:	b1a8      	cbz	r0, 404f68 <__submore+0x70>
  404f3c:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404f40:	6320      	str	r0, [r4, #48]	; 0x30
  404f42:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404f46:	6362      	str	r2, [r4, #52]	; 0x34
  404f48:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404f4c:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404f50:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  404f54:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404f58:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404f5c:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404f60:	6020      	str	r0, [r4, #0]
  404f62:	2000      	movs	r0, #0
  404f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f68:	f04f 30ff 	mov.w	r0, #4294967295
  404f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404f70 <_ungetc_r>:
  404f70:	b570      	push	{r4, r5, r6, lr}
  404f72:	460e      	mov	r6, r1
  404f74:	3101      	adds	r1, #1
  404f76:	4614      	mov	r4, r2
  404f78:	4605      	mov	r5, r0
  404f7a:	d031      	beq.n	404fe0 <_ungetc_r+0x70>
  404f7c:	b110      	cbz	r0, 404f84 <_ungetc_r+0x14>
  404f7e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404f80:	2b00      	cmp	r3, #0
  404f82:	d030      	beq.n	404fe6 <_ungetc_r+0x76>
  404f84:	89a3      	ldrh	r3, [r4, #12]
  404f86:	049a      	lsls	r2, r3, #18
  404f88:	d405      	bmi.n	404f96 <_ungetc_r+0x26>
  404f8a:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404f8c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404f90:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404f94:	6662      	str	r2, [r4, #100]	; 0x64
  404f96:	f023 0320 	bic.w	r3, r3, #32
  404f9a:	b29b      	uxth	r3, r3
  404f9c:	b29a      	uxth	r2, r3
  404f9e:	0750      	lsls	r0, r2, #29
  404fa0:	81a3      	strh	r3, [r4, #12]
  404fa2:	d406      	bmi.n	404fb2 <_ungetc_r+0x42>
  404fa4:	06d1      	lsls	r1, r2, #27
  404fa6:	d51b      	bpl.n	404fe0 <_ungetc_r+0x70>
  404fa8:	0712      	lsls	r2, r2, #28
  404faa:	d438      	bmi.n	40501e <_ungetc_r+0xae>
  404fac:	f043 0304 	orr.w	r3, r3, #4
  404fb0:	81a3      	strh	r3, [r4, #12]
  404fb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404fb4:	b2f6      	uxtb	r6, r6
  404fb6:	b1cb      	cbz	r3, 404fec <_ungetc_r+0x7c>
  404fb8:	6862      	ldr	r2, [r4, #4]
  404fba:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404fbc:	429a      	cmp	r2, r3
  404fbe:	da09      	bge.n	404fd4 <_ungetc_r+0x64>
  404fc0:	6823      	ldr	r3, [r4, #0]
  404fc2:	1e5a      	subs	r2, r3, #1
  404fc4:	6022      	str	r2, [r4, #0]
  404fc6:	f803 6c01 	strb.w	r6, [r3, #-1]
  404fca:	6863      	ldr	r3, [r4, #4]
  404fcc:	3301      	adds	r3, #1
  404fce:	4630      	mov	r0, r6
  404fd0:	6063      	str	r3, [r4, #4]
  404fd2:	bd70      	pop	{r4, r5, r6, pc}
  404fd4:	4628      	mov	r0, r5
  404fd6:	4621      	mov	r1, r4
  404fd8:	f7ff ff8e 	bl	404ef8 <__submore>
  404fdc:	2800      	cmp	r0, #0
  404fde:	d0ef      	beq.n	404fc0 <_ungetc_r+0x50>
  404fe0:	f04f 30ff 	mov.w	r0, #4294967295
  404fe4:	bd70      	pop	{r4, r5, r6, pc}
  404fe6:	f7fe f871 	bl	4030cc <__sinit>
  404fea:	e7cb      	b.n	404f84 <_ungetc_r+0x14>
  404fec:	6923      	ldr	r3, [r4, #16]
  404fee:	6822      	ldr	r2, [r4, #0]
  404ff0:	b12b      	cbz	r3, 404ffe <_ungetc_r+0x8e>
  404ff2:	4293      	cmp	r3, r2
  404ff4:	d203      	bcs.n	404ffe <_ungetc_r+0x8e>
  404ff6:	f812 0c01 	ldrb.w	r0, [r2, #-1]
  404ffa:	42b0      	cmp	r0, r6
  404ffc:	d01c      	beq.n	405038 <_ungetc_r+0xc8>
  404ffe:	4623      	mov	r3, r4
  405000:	6861      	ldr	r1, [r4, #4]
  405002:	63a2      	str	r2, [r4, #56]	; 0x38
  405004:	f104 0040 	add.w	r0, r4, #64	; 0x40
  405008:	2203      	movs	r2, #3
  40500a:	6320      	str	r0, [r4, #48]	; 0x30
  40500c:	6362      	str	r2, [r4, #52]	; 0x34
  40500e:	63e1      	str	r1, [r4, #60]	; 0x3c
  405010:	f803 6f42 	strb.w	r6, [r3, #66]!
  405014:	2201      	movs	r2, #1
  405016:	6023      	str	r3, [r4, #0]
  405018:	4630      	mov	r0, r6
  40501a:	6062      	str	r2, [r4, #4]
  40501c:	bd70      	pop	{r4, r5, r6, pc}
  40501e:	4628      	mov	r0, r5
  405020:	4621      	mov	r1, r4
  405022:	f7fe f825 	bl	403070 <_fflush_r>
  405026:	2800      	cmp	r0, #0
  405028:	d1da      	bne.n	404fe0 <_ungetc_r+0x70>
  40502a:	89a3      	ldrh	r3, [r4, #12]
  40502c:	60a0      	str	r0, [r4, #8]
  40502e:	f023 0308 	bic.w	r3, r3, #8
  405032:	61a0      	str	r0, [r4, #24]
  405034:	b29b      	uxth	r3, r3
  405036:	e7b9      	b.n	404fac <_ungetc_r+0x3c>
  405038:	6863      	ldr	r3, [r4, #4]
  40503a:	3a01      	subs	r2, #1
  40503c:	3301      	adds	r3, #1
  40503e:	e884 000c 	stmia.w	r4, {r2, r3}
  405042:	bd70      	pop	{r4, r5, r6, pc}

00405044 <__swbuf_r>:
  405044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405046:	460d      	mov	r5, r1
  405048:	4614      	mov	r4, r2
  40504a:	4607      	mov	r7, r0
  40504c:	b110      	cbz	r0, 405054 <__swbuf_r+0x10>
  40504e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405050:	2b00      	cmp	r3, #0
  405052:	d048      	beq.n	4050e6 <__swbuf_r+0xa2>
  405054:	89a2      	ldrh	r2, [r4, #12]
  405056:	69a3      	ldr	r3, [r4, #24]
  405058:	60a3      	str	r3, [r4, #8]
  40505a:	b293      	uxth	r3, r2
  40505c:	0718      	lsls	r0, r3, #28
  40505e:	d538      	bpl.n	4050d2 <__swbuf_r+0x8e>
  405060:	6926      	ldr	r6, [r4, #16]
  405062:	2e00      	cmp	r6, #0
  405064:	d035      	beq.n	4050d2 <__swbuf_r+0x8e>
  405066:	0499      	lsls	r1, r3, #18
  405068:	b2ed      	uxtb	r5, r5
  40506a:	d515      	bpl.n	405098 <__swbuf_r+0x54>
  40506c:	6823      	ldr	r3, [r4, #0]
  40506e:	6962      	ldr	r2, [r4, #20]
  405070:	1b9e      	subs	r6, r3, r6
  405072:	4296      	cmp	r6, r2
  405074:	da1c      	bge.n	4050b0 <__swbuf_r+0x6c>
  405076:	3601      	adds	r6, #1
  405078:	68a2      	ldr	r2, [r4, #8]
  40507a:	1c59      	adds	r1, r3, #1
  40507c:	3a01      	subs	r2, #1
  40507e:	60a2      	str	r2, [r4, #8]
  405080:	6021      	str	r1, [r4, #0]
  405082:	701d      	strb	r5, [r3, #0]
  405084:	6963      	ldr	r3, [r4, #20]
  405086:	42b3      	cmp	r3, r6
  405088:	d01a      	beq.n	4050c0 <__swbuf_r+0x7c>
  40508a:	89a3      	ldrh	r3, [r4, #12]
  40508c:	07db      	lsls	r3, r3, #31
  40508e:	d501      	bpl.n	405094 <__swbuf_r+0x50>
  405090:	2d0a      	cmp	r5, #10
  405092:	d015      	beq.n	4050c0 <__swbuf_r+0x7c>
  405094:	4628      	mov	r0, r5
  405096:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405098:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40509a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40509e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4050a2:	6663      	str	r3, [r4, #100]	; 0x64
  4050a4:	6823      	ldr	r3, [r4, #0]
  4050a6:	81a2      	strh	r2, [r4, #12]
  4050a8:	6962      	ldr	r2, [r4, #20]
  4050aa:	1b9e      	subs	r6, r3, r6
  4050ac:	4296      	cmp	r6, r2
  4050ae:	dbe2      	blt.n	405076 <__swbuf_r+0x32>
  4050b0:	4638      	mov	r0, r7
  4050b2:	4621      	mov	r1, r4
  4050b4:	f7fd ffdc 	bl	403070 <_fflush_r>
  4050b8:	b940      	cbnz	r0, 4050cc <__swbuf_r+0x88>
  4050ba:	6823      	ldr	r3, [r4, #0]
  4050bc:	2601      	movs	r6, #1
  4050be:	e7db      	b.n	405078 <__swbuf_r+0x34>
  4050c0:	4638      	mov	r0, r7
  4050c2:	4621      	mov	r1, r4
  4050c4:	f7fd ffd4 	bl	403070 <_fflush_r>
  4050c8:	2800      	cmp	r0, #0
  4050ca:	d0e3      	beq.n	405094 <__swbuf_r+0x50>
  4050cc:	f04f 30ff 	mov.w	r0, #4294967295
  4050d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4050d2:	4638      	mov	r0, r7
  4050d4:	4621      	mov	r1, r4
  4050d6:	f7fd feaf 	bl	402e38 <__swsetup_r>
  4050da:	2800      	cmp	r0, #0
  4050dc:	d1f6      	bne.n	4050cc <__swbuf_r+0x88>
  4050de:	89a2      	ldrh	r2, [r4, #12]
  4050e0:	6926      	ldr	r6, [r4, #16]
  4050e2:	b293      	uxth	r3, r2
  4050e4:	e7bf      	b.n	405066 <__swbuf_r+0x22>
  4050e6:	f7fd fff1 	bl	4030cc <__sinit>
  4050ea:	e7b3      	b.n	405054 <__swbuf_r+0x10>

004050ec <_wcrtomb_r>:
  4050ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050f0:	461e      	mov	r6, r3
  4050f2:	b086      	sub	sp, #24
  4050f4:	460c      	mov	r4, r1
  4050f6:	4605      	mov	r5, r0
  4050f8:	4617      	mov	r7, r2
  4050fa:	4b0f      	ldr	r3, [pc, #60]	; (405138 <_wcrtomb_r+0x4c>)
  4050fc:	b191      	cbz	r1, 405124 <_wcrtomb_r+0x38>
  4050fe:	f8d3 8000 	ldr.w	r8, [r3]
  405102:	f7fe fca3 	bl	403a4c <__locale_charset>
  405106:	9600      	str	r6, [sp, #0]
  405108:	4603      	mov	r3, r0
  40510a:	4621      	mov	r1, r4
  40510c:	463a      	mov	r2, r7
  40510e:	4628      	mov	r0, r5
  405110:	47c0      	blx	r8
  405112:	1c43      	adds	r3, r0, #1
  405114:	d103      	bne.n	40511e <_wcrtomb_r+0x32>
  405116:	2200      	movs	r2, #0
  405118:	238a      	movs	r3, #138	; 0x8a
  40511a:	6032      	str	r2, [r6, #0]
  40511c:	602b      	str	r3, [r5, #0]
  40511e:	b006      	add	sp, #24
  405120:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405124:	681f      	ldr	r7, [r3, #0]
  405126:	f7fe fc91 	bl	403a4c <__locale_charset>
  40512a:	9600      	str	r6, [sp, #0]
  40512c:	4603      	mov	r3, r0
  40512e:	4622      	mov	r2, r4
  405130:	4628      	mov	r0, r5
  405132:	a903      	add	r1, sp, #12
  405134:	47b8      	blx	r7
  405136:	e7ec      	b.n	405112 <_wcrtomb_r+0x26>
  405138:	20000870 	.word	0x20000870

0040513c <__ascii_wctomb>:
  40513c:	b121      	cbz	r1, 405148 <__ascii_wctomb+0xc>
  40513e:	2aff      	cmp	r2, #255	; 0xff
  405140:	d804      	bhi.n	40514c <__ascii_wctomb+0x10>
  405142:	700a      	strb	r2, [r1, #0]
  405144:	2001      	movs	r0, #1
  405146:	4770      	bx	lr
  405148:	4608      	mov	r0, r1
  40514a:	4770      	bx	lr
  40514c:	238a      	movs	r3, #138	; 0x8a
  40514e:	6003      	str	r3, [r0, #0]
  405150:	f04f 30ff 	mov.w	r0, #4294967295
  405154:	4770      	bx	lr
  405156:	bf00      	nop

00405158 <_write_r>:
  405158:	b570      	push	{r4, r5, r6, lr}
  40515a:	4c08      	ldr	r4, [pc, #32]	; (40517c <_write_r+0x24>)
  40515c:	4606      	mov	r6, r0
  40515e:	2500      	movs	r5, #0
  405160:	4608      	mov	r0, r1
  405162:	4611      	mov	r1, r2
  405164:	461a      	mov	r2, r3
  405166:	6025      	str	r5, [r4, #0]
  405168:	f7fb f82c 	bl	4001c4 <_write>
  40516c:	1c43      	adds	r3, r0, #1
  40516e:	d000      	beq.n	405172 <_write_r+0x1a>
  405170:	bd70      	pop	{r4, r5, r6, pc}
  405172:	6823      	ldr	r3, [r4, #0]
  405174:	2b00      	cmp	r3, #0
  405176:	d0fb      	beq.n	405170 <_write_r+0x18>
  405178:	6033      	str	r3, [r6, #0]
  40517a:	bd70      	pop	{r4, r5, r6, pc}
  40517c:	2000094c 	.word	0x2000094c

00405180 <__register_exitproc>:
  405180:	b5f0      	push	{r4, r5, r6, r7, lr}
  405182:	4c27      	ldr	r4, [pc, #156]	; (405220 <__register_exitproc+0xa0>)
  405184:	6826      	ldr	r6, [r4, #0]
  405186:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  40518a:	b085      	sub	sp, #20
  40518c:	4607      	mov	r7, r0
  40518e:	2c00      	cmp	r4, #0
  405190:	d041      	beq.n	405216 <__register_exitproc+0x96>
  405192:	6865      	ldr	r5, [r4, #4]
  405194:	2d1f      	cmp	r5, #31
  405196:	dd1e      	ble.n	4051d6 <__register_exitproc+0x56>
  405198:	4822      	ldr	r0, [pc, #136]	; (405224 <__register_exitproc+0xa4>)
  40519a:	b918      	cbnz	r0, 4051a4 <__register_exitproc+0x24>
  40519c:	f04f 30ff 	mov.w	r0, #4294967295
  4051a0:	b005      	add	sp, #20
  4051a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4051a4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4051a8:	9103      	str	r1, [sp, #12]
  4051aa:	9202      	str	r2, [sp, #8]
  4051ac:	9301      	str	r3, [sp, #4]
  4051ae:	f3af 8000 	nop.w
  4051b2:	9903      	ldr	r1, [sp, #12]
  4051b4:	9a02      	ldr	r2, [sp, #8]
  4051b6:	9b01      	ldr	r3, [sp, #4]
  4051b8:	4604      	mov	r4, r0
  4051ba:	2800      	cmp	r0, #0
  4051bc:	d0ee      	beq.n	40519c <__register_exitproc+0x1c>
  4051be:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
  4051c2:	6025      	str	r5, [r4, #0]
  4051c4:	2000      	movs	r0, #0
  4051c6:	6060      	str	r0, [r4, #4]
  4051c8:	4605      	mov	r5, r0
  4051ca:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4051ce:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  4051d2:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  4051d6:	b93f      	cbnz	r7, 4051e8 <__register_exitproc+0x68>
  4051d8:	1cab      	adds	r3, r5, #2
  4051da:	2000      	movs	r0, #0
  4051dc:	3501      	adds	r5, #1
  4051de:	6065      	str	r5, [r4, #4]
  4051e0:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
  4051e4:	b005      	add	sp, #20
  4051e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4051e8:	eb04 0085 	add.w	r0, r4, r5, lsl #2
  4051ec:	f04f 0c01 	mov.w	ip, #1
  4051f0:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
  4051f4:	f8d4 6188 	ldr.w	r6, [r4, #392]	; 0x188
  4051f8:	fa0c f205 	lsl.w	r2, ip, r5
  4051fc:	4316      	orrs	r6, r2
  4051fe:	2f02      	cmp	r7, #2
  405200:	f8c4 6188 	str.w	r6, [r4, #392]	; 0x188
  405204:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
  405208:	d1e6      	bne.n	4051d8 <__register_exitproc+0x58>
  40520a:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  40520e:	431a      	orrs	r2, r3
  405210:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  405214:	e7e0      	b.n	4051d8 <__register_exitproc+0x58>
  405216:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  40521a:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  40521e:	e7b8      	b.n	405192 <__register_exitproc+0x12>
  405220:	004054b8 	.word	0x004054b8
  405224:	00000000 	.word	0x00000000

00405228 <_close_r>:
  405228:	b538      	push	{r3, r4, r5, lr}
  40522a:	4c07      	ldr	r4, [pc, #28]	; (405248 <_close_r+0x20>)
  40522c:	2300      	movs	r3, #0
  40522e:	4605      	mov	r5, r0
  405230:	4608      	mov	r0, r1
  405232:	6023      	str	r3, [r4, #0]
  405234:	f7fb fc48 	bl	400ac8 <_close>
  405238:	1c43      	adds	r3, r0, #1
  40523a:	d000      	beq.n	40523e <_close_r+0x16>
  40523c:	bd38      	pop	{r3, r4, r5, pc}
  40523e:	6823      	ldr	r3, [r4, #0]
  405240:	2b00      	cmp	r3, #0
  405242:	d0fb      	beq.n	40523c <_close_r+0x14>
  405244:	602b      	str	r3, [r5, #0]
  405246:	bd38      	pop	{r3, r4, r5, pc}
  405248:	2000094c 	.word	0x2000094c

0040524c <_fclose_r>:
  40524c:	b570      	push	{r4, r5, r6, lr}
  40524e:	460c      	mov	r4, r1
  405250:	4605      	mov	r5, r0
  405252:	b131      	cbz	r1, 405262 <_fclose_r+0x16>
  405254:	b110      	cbz	r0, 40525c <_fclose_r+0x10>
  405256:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405258:	2b00      	cmp	r3, #0
  40525a:	d02f      	beq.n	4052bc <_fclose_r+0x70>
  40525c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405260:	b90b      	cbnz	r3, 405266 <_fclose_r+0x1a>
  405262:	2000      	movs	r0, #0
  405264:	bd70      	pop	{r4, r5, r6, pc}
  405266:	4628      	mov	r0, r5
  405268:	4621      	mov	r1, r4
  40526a:	f7fd ff01 	bl	403070 <_fflush_r>
  40526e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  405270:	4606      	mov	r6, r0
  405272:	b133      	cbz	r3, 405282 <_fclose_r+0x36>
  405274:	4628      	mov	r0, r5
  405276:	69e1      	ldr	r1, [r4, #28]
  405278:	4798      	blx	r3
  40527a:	2800      	cmp	r0, #0
  40527c:	bfb8      	it	lt
  40527e:	f04f 36ff 	movlt.w	r6, #4294967295
  405282:	89a3      	ldrh	r3, [r4, #12]
  405284:	061b      	lsls	r3, r3, #24
  405286:	d41c      	bmi.n	4052c2 <_fclose_r+0x76>
  405288:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40528a:	b141      	cbz	r1, 40529e <_fclose_r+0x52>
  40528c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405290:	4299      	cmp	r1, r3
  405292:	d002      	beq.n	40529a <_fclose_r+0x4e>
  405294:	4628      	mov	r0, r5
  405296:	f7fe f923 	bl	4034e0 <_free_r>
  40529a:	2300      	movs	r3, #0
  40529c:	6323      	str	r3, [r4, #48]	; 0x30
  40529e:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4052a0:	b121      	cbz	r1, 4052ac <_fclose_r+0x60>
  4052a2:	4628      	mov	r0, r5
  4052a4:	f7fe f91c 	bl	4034e0 <_free_r>
  4052a8:	2300      	movs	r3, #0
  4052aa:	6463      	str	r3, [r4, #68]	; 0x44
  4052ac:	f7fd ff88 	bl	4031c0 <__sfp_lock_acquire>
  4052b0:	2300      	movs	r3, #0
  4052b2:	81a3      	strh	r3, [r4, #12]
  4052b4:	f7fd ff86 	bl	4031c4 <__sfp_lock_release>
  4052b8:	4630      	mov	r0, r6
  4052ba:	bd70      	pop	{r4, r5, r6, pc}
  4052bc:	f7fd ff06 	bl	4030cc <__sinit>
  4052c0:	e7cc      	b.n	40525c <_fclose_r+0x10>
  4052c2:	4628      	mov	r0, r5
  4052c4:	6921      	ldr	r1, [r4, #16]
  4052c6:	f7fe f90b 	bl	4034e0 <_free_r>
  4052ca:	e7dd      	b.n	405288 <_fclose_r+0x3c>

004052cc <fclose>:
  4052cc:	4b02      	ldr	r3, [pc, #8]	; (4052d8 <fclose+0xc>)
  4052ce:	4601      	mov	r1, r0
  4052d0:	6818      	ldr	r0, [r3, #0]
  4052d2:	f7ff bfbb 	b.w	40524c <_fclose_r>
  4052d6:	bf00      	nop
  4052d8:	20000430 	.word	0x20000430

004052dc <_fstat_r>:
  4052dc:	b538      	push	{r3, r4, r5, lr}
  4052de:	4c08      	ldr	r4, [pc, #32]	; (405300 <_fstat_r+0x24>)
  4052e0:	2300      	movs	r3, #0
  4052e2:	4605      	mov	r5, r0
  4052e4:	4608      	mov	r0, r1
  4052e6:	4611      	mov	r1, r2
  4052e8:	6023      	str	r3, [r4, #0]
  4052ea:	f7fb fbf1 	bl	400ad0 <_fstat>
  4052ee:	1c43      	adds	r3, r0, #1
  4052f0:	d000      	beq.n	4052f4 <_fstat_r+0x18>
  4052f2:	bd38      	pop	{r3, r4, r5, pc}
  4052f4:	6823      	ldr	r3, [r4, #0]
  4052f6:	2b00      	cmp	r3, #0
  4052f8:	d0fb      	beq.n	4052f2 <_fstat_r+0x16>
  4052fa:	602b      	str	r3, [r5, #0]
  4052fc:	bd38      	pop	{r3, r4, r5, pc}
  4052fe:	bf00      	nop
  405300:	2000094c 	.word	0x2000094c

00405304 <_isatty_r>:
  405304:	b538      	push	{r3, r4, r5, lr}
  405306:	4c07      	ldr	r4, [pc, #28]	; (405324 <_isatty_r+0x20>)
  405308:	2300      	movs	r3, #0
  40530a:	4605      	mov	r5, r0
  40530c:	4608      	mov	r0, r1
  40530e:	6023      	str	r3, [r4, #0]
  405310:	f7fb fbe4 	bl	400adc <_isatty>
  405314:	1c43      	adds	r3, r0, #1
  405316:	d000      	beq.n	40531a <_isatty_r+0x16>
  405318:	bd38      	pop	{r3, r4, r5, pc}
  40531a:	6823      	ldr	r3, [r4, #0]
  40531c:	2b00      	cmp	r3, #0
  40531e:	d0fb      	beq.n	405318 <_isatty_r+0x14>
  405320:	602b      	str	r3, [r5, #0]
  405322:	bd38      	pop	{r3, r4, r5, pc}
  405324:	2000094c 	.word	0x2000094c

00405328 <_lseek_r>:
  405328:	b570      	push	{r4, r5, r6, lr}
  40532a:	4c08      	ldr	r4, [pc, #32]	; (40534c <_lseek_r+0x24>)
  40532c:	4606      	mov	r6, r0
  40532e:	2500      	movs	r5, #0
  405330:	4608      	mov	r0, r1
  405332:	4611      	mov	r1, r2
  405334:	461a      	mov	r2, r3
  405336:	6025      	str	r5, [r4, #0]
  405338:	f7fb fbd2 	bl	400ae0 <_lseek>
  40533c:	1c43      	adds	r3, r0, #1
  40533e:	d000      	beq.n	405342 <_lseek_r+0x1a>
  405340:	bd70      	pop	{r4, r5, r6, pc}
  405342:	6823      	ldr	r3, [r4, #0]
  405344:	2b00      	cmp	r3, #0
  405346:	d0fb      	beq.n	405340 <_lseek_r+0x18>
  405348:	6033      	str	r3, [r6, #0]
  40534a:	bd70      	pop	{r4, r5, r6, pc}
  40534c:	2000094c 	.word	0x2000094c

00405350 <_read_r>:
  405350:	b570      	push	{r4, r5, r6, lr}
  405352:	4c08      	ldr	r4, [pc, #32]	; (405374 <_read_r+0x24>)
  405354:	4606      	mov	r6, r0
  405356:	2500      	movs	r5, #0
  405358:	4608      	mov	r0, r1
  40535a:	4611      	mov	r1, r2
  40535c:	461a      	mov	r2, r3
  40535e:	6025      	str	r5, [r4, #0]
  405360:	f7fa ff10 	bl	400184 <_read>
  405364:	1c43      	adds	r3, r0, #1
  405366:	d000      	beq.n	40536a <_read_r+0x1a>
  405368:	bd70      	pop	{r4, r5, r6, pc}
  40536a:	6823      	ldr	r3, [r4, #0]
  40536c:	2b00      	cmp	r3, #0
  40536e:	d0fb      	beq.n	405368 <_read_r+0x18>
  405370:	6033      	str	r3, [r6, #0]
  405372:	bd70      	pop	{r4, r5, r6, pc}
  405374:	2000094c 	.word	0x2000094c

00405378 <__aeabi_uldivmod>:
  405378:	b94b      	cbnz	r3, 40538e <__aeabi_uldivmod+0x16>
  40537a:	b942      	cbnz	r2, 40538e <__aeabi_uldivmod+0x16>
  40537c:	2900      	cmp	r1, #0
  40537e:	bf08      	it	eq
  405380:	2800      	cmpeq	r0, #0
  405382:	d002      	beq.n	40538a <__aeabi_uldivmod+0x12>
  405384:	f04f 31ff 	mov.w	r1, #4294967295
  405388:	4608      	mov	r0, r1
  40538a:	f7fb bd49 	b.w	400e20 <__aeabi_idiv0>
  40538e:	b082      	sub	sp, #8
  405390:	46ec      	mov	ip, sp
  405392:	e92d 5000 	stmdb	sp!, {ip, lr}
  405396:	f7fb fd2b 	bl	400df0 <__gnu_uldivmod_helper>
  40539a:	f8dd e004 	ldr.w	lr, [sp, #4]
  40539e:	b002      	add	sp, #8
  4053a0:	bc0c      	pop	{r2, r3}
  4053a2:	4770      	bx	lr
  4053a4:	202d492d 	.word	0x202d492d
  4053a8:	74696e49 	.word	0x74696e49
  4053ac:	696c6169 	.word	0x696c6169
  4053b0:	5320657a 	.word	0x5320657a
  4053b4:	61204950 	.word	0x61204950
  4053b8:	616d2073 	.word	0x616d2073
  4053bc:	72657473 	.word	0x72657473
  4053c0:	0000000d 	.word	0x0000000d
  4053c4:	7078450a 	.word	0x7078450a
  4053c8:	69746365 	.word	0x69746365
  4053cc:	6120676e 	.word	0x6120676e
  4053d0:	4f49206e 	.word	0x4f49206e
  4053d4:	64707520 	.word	0x64707520
  4053d8:	20657461 	.word	0x20657461
  4053dc:	65726568 	.word	0x65726568
  4053e0:	4720202e 	.word	0x4720202e
  4053e4:	6174746f 	.word	0x6174746f
  4053e8:	67696620 	.word	0x67696620
  4053ec:	20657275 	.word	0x20657275
  4053f0:	2074756f 	.word	0x2074756f
  4053f4:	63696877 	.word	0x63696877
  4053f8:	49502068 	.word	0x49502068
  4053fc:	6f70204f 	.word	0x6f70204f
  405400:	69207472 	.word	0x69207472
  405404:	6f642073 	.word	0x6f642073
  405408:	20676e69 	.word	0x20676e69
  40540c:	202e7469 	.word	0x202e7469
  405410:	74697257 	.word	0x74697257
  405414:	20676e69 	.word	0x20676e69
  405418:	20656874 	.word	0x20656874
  40541c:	636e7566 	.word	0x636e7566
  405420:	6e6f6974 	.word	0x6e6f6974
  405424:	20736920 	.word	0x20736920
  405428:	79736165 	.word	0x79736165
  40542c:	6f726620 	.word	0x6f726620
  405430:	6874206d 	.word	0x6874206d
  405434:	0a657265 	.word	0x0a657265
  405438:	00000000 	.word	0x00000000
  40543c:	25207325 	.word	0x25207325
  405440:	64252073 	.word	0x64252073
  405444:	00000000 	.word	0x00000000
  405448:	00746573 	.word	0x00746573
  40544c:	00306863 	.word	0x00306863
  405450:	00316863 	.word	0x00316863
  405454:	2073250a 	.word	0x2073250a
  405458:	6e207369 	.word	0x6e207369
  40545c:	6120746f 	.word	0x6120746f
  405460:	6c617620 	.word	0x6c617620
  405464:	61206469 	.word	0x61206469
  405468:	6d756772 	.word	0x6d756772
  40546c:	0a746e65 	.word	0x0a746e65
  405470:	00000000 	.word	0x00000000
  405474:	65657773 	.word	0x65657773
  405478:	00000070 	.word	0x00000070
  40547c:	6e65530a 	.word	0x6e65530a
  405480:	676e6964 	.word	0x676e6964
  405484:	57544620 	.word	0x57544620
  405488:	25203d20 	.word	0x25203d20
  40548c:	6f742064 	.word	0x6f742064
  405490:	6e797320 	.word	0x6e797320
  405494:	000a6874 	.word	0x000a6874
  405498:	2064250a 	.word	0x2064250a
  40549c:	6e207369 	.word	0x6e207369
  4054a0:	6120746f 	.word	0x6120746f
  4054a4:	6c617620 	.word	0x6c617620
  4054a8:	63206469 	.word	0x63206469
  4054ac:	616d6d6f 	.word	0x616d6d6f
  4054b0:	000a646e 	.word	0x000a646e
  4054b4:	00000043 	.word	0x00000043

004054b8 <_global_impure_ptr>:
  4054b8:	20000008 0000000a 33323130 37363534     ... ....01234567
  4054c8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  4054d8:	37363534 62613938 66656463 00000000     456789abcdef....
  4054e8:	6c756e28 0000296c                       (null)..

004054f0 <zeroes.6721>:
  4054f0:	30303030 30303030 30303030 30303030     0000000000000000

00405500 <blanks.6720>:
  405500:	20202020 20202020 20202020 20202020                     

00405510 <basefix.6187>:
  405510:	0001000a 00030002 00050004 00070006     ................
  405520:	00090008 000b000a 000d000c 000f000e     ................
  405530:	00000010                                ....

00405534 <_ctype_>:
  405534:	20202000 20202020 28282020 20282828     .         ((((( 
  405544:	20202020 20202020 20202020 20202020                     
  405554:	10108820 10101010 10101010 10101010      ...............
  405564:	04040410 04040404 10040404 10101010     ................
  405574:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405584:	01010101 01010101 01010101 10101010     ................
  405594:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4055a4:	02020202 02020202 02020202 10101010     ................
  4055b4:	00000020 00000000 00000000 00000000      ...............
	...

00405638 <_init>:
  405638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40563a:	bf00      	nop
  40563c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40563e:	bc08      	pop	{r3}
  405640:	469e      	mov	lr, r3
  405642:	4770      	bx	lr

00405644 <__init_array_start>:
  405644:	00402efd 	.word	0x00402efd

00405648 <__frame_dummy_init_array_entry>:
  405648:	004000f1                                ..@.

0040564c <_fini>:
  40564c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40564e:	bf00      	nop
  405650:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405652:	bc08      	pop	{r3}
  405654:	469e      	mov	lr, r3
  405656:	4770      	bx	lr

00405658 <__fini_array_start>:
  405658:	004000cd 	.word	0x004000cd
